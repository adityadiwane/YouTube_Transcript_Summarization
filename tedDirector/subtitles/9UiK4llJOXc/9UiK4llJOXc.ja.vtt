WEBVTT
Kind: captions
Language: ja

00:00:00.000 --> 00:00:07.000
翻訳: Takamitsu Hirono
校正: Tomoyuki Suzuki

00:00:12.000 --> 00:00:15.561
本日みなさんにご紹介するのは

00:00:15.561 --> 00:00:19.122
倉庫の中の商品を管理するための

00:00:19.122 --> 00:00:22.464
画期的なアプローチについてです

00:00:22.464 --> 00:00:25.022
商品を選択し 梱包して 出荷するまでを
ご紹介します

00:00:25.022 --> 00:00:27.845
話のヒントですが

00:00:27.845 --> 00:00:31.998
このソリューションには
何百もの可動式ロボットが関わります

00:00:31.998 --> 00:00:34.422
時には何千ものロボットが

00:00:34.422 --> 00:00:37.020
倉庫の中を動き回ることもあります
そして問題が解決できます

00:00:37.020 --> 00:00:38.240
ちょっと想像してください

00:00:38.240 --> 00:00:40.766
最後にインターネットで商品を注文したときのことを

00:00:40.766 --> 00:00:42.830
あなたは椅子に座り

00:00:42.830 --> 00:00:46.890
この赤いTシャツが絶対欲しいと思い

00:00:46.890 --> 00:00:49.186
－クリック！－
そしてショッピングカートに入れます

00:00:49.186 --> 00:00:51.084
そして次に緑のズボンも

00:00:51.084 --> 00:00:52.982
とてもいいと思って　－クリック！－

00:00:52.982 --> 00:00:54.882
もしかしたら青い靴も　－クリック！－

00:00:54.882 --> 00:00:56.932
そこで注文をまとめ

00:00:56.932 --> 00:00:58.700
あまり似合わないのではないかと

00:00:58.700 --> 00:01:00.468
少しも振り返らず

00:01:00.468 --> 00:01:02.238
「注文を確定」ボタンを押します

00:01:02.238 --> 00:01:06.412
そして２日後に小包が玄関に届き

00:01:06.412 --> 00:01:09.366
箱をあけて 「わぁ　品物が届いた」
と言うでしょう

00:01:09.366 --> 00:01:12.327
あなたはこれらの商品が
倉庫にある箱の中から

00:01:12.327 --> 00:01:16.540
どのように仕分けされたのか
考えたことがあるでしょうか？

00:01:16.540 --> 00:01:20.358
私は今日まさにそのことをお話ししたいと思います

00:01:20.358 --> 00:01:23.978
この写真の真ん中には

00:01:23.978 --> 00:01:26.493
配送もしくは注文処理の現場で働く

00:01:26.493 --> 00:01:29.718
昔ながらの梱包作業員が写っています

00:01:29.718 --> 00:01:33.600
典型的には これらの梱包作業員は
一日の60～70％を

00:01:33.600 --> 00:01:35.512
倉庫内を探し回ることに使います

00:01:35.512 --> 00:01:38.223
倉庫内を商品を探し回り

00:01:38.223 --> 00:01:40.884
10キロから20キロほども
歩くこともしばしばです

00:01:40.884 --> 00:01:45.305
これは注文を処理するための
非生産的な方法であるだけでなく

00:01:45.305 --> 00:01:49.362
在庫を見つけられず
注文を処理できないこともあります

00:01:49.362 --> 00:01:52.993
最初に私がこの問題に
直面したときの話をさせてください

00:01:52.993 --> 00:01:57.047
私は99年、2000年のドットコムブームのとき
サンフランシスコの湾岸エリアにおり

00:01:57.047 --> 00:02:01.109
驚くほどに華々しく営業停止することになる
Webvanで働いていました

00:02:01.109 --> 00:02:02.930
（笑）

00:02:02.930 --> 00:02:05.660
Webvanは「生鮮食品をネットで配送」
のコンセプトで

00:02:05.660 --> 00:02:08.442
数百億円ものお金を調達しましたが

00:02:08.442 --> 00:02:12.615
低コストで実現出来ないという現実に
ぶち当たってしまいました

00:02:12.615 --> 00:02:16.577
e-コマースの実現は難しく
とても費用のかかるものだったのです

00:02:16.577 --> 00:02:20.828
この事例では 我々は30個品物を
棚から集めて箱詰めし

00:02:20.828 --> 00:02:24.800
トラックに載せて家庭に届けようとしました

00:02:24.800 --> 00:02:28.600
そして検討した結果 30ドルもかかったのです

00:02:28.600 --> 00:02:31.686
考えてみてください
89セントのスープの缶詰めを

00:02:31.686 --> 00:02:35.362
探して箱詰めするまでに1ドルかかるのです

00:02:35.362 --> 00:02:38.570
これは実際 トラックが家に向けて
出発する前のコストです

00:02:38.570 --> 00:02:41.357
かいつまんで言えば
私がWebvanにいた1年間に

00:02:41.357 --> 00:02:44.593
全ての物流業者と話をしていて
気がついたのは

00:02:44.593 --> 00:02:49.231
ばら売り商品の梱包に どの会社も
対応できていないということでした

00:02:49.231 --> 00:02:53.254
赤、緑、青 これら３つの商品を
１つの箱に入れるというようなことです

00:02:53.254 --> 00:02:56.239
もっと良い方法があるに違いないと
我々は話していました

00:02:56.239 --> 00:02:58.766
当時あったやり方は
商品を入れる小売店向けの

00:02:58.766 --> 00:03:02.533
パレットやケースを
倉庫に配置することでした

00:03:02.533 --> 00:03:06.330
もちろんWebvanは倒産しましたが
その後１年半の間

00:03:06.330 --> 00:03:09.910
この問題は私の頭から離れず
私を悩ませ続けていました

00:03:09.910 --> 00:03:11.778
そこで私はもう一度考え始めました

00:03:11.778 --> 00:03:16.905
自分が梱包作業員だったら
何を求めるのか つまり

00:03:16.905 --> 00:03:19.236
私の理想論について語らせてほしいのです

00:03:19.236 --> 00:03:20.650
（笑）

00:03:20.650 --> 00:03:22.572
さあ 問題解決に集中しましょう

00:03:22.572 --> 00:03:26.427
注文を受けて 私がすべきことは

00:03:26.427 --> 00:03:28.647
赤、緑 そして青をこの箱に入れることです

00:03:28.647 --> 00:03:31.499
手を伸ばすと －ピュッ－
たちまち商品が現れて

00:03:31.499 --> 00:03:34.022
梱包できる そんなシステムが欲しいのです

00:03:34.022 --> 00:03:35.715
そこで再び考えます

00:03:35.715 --> 00:03:39.729
－この問題を解決するには
オペレーター中心の思考が必要ではないか？

00:03:39.729 --> 00:03:43.956
これが私が必要としていること では
どんな技術で問題解決ができるのだろうか－

00:03:43.956 --> 00:03:47.897
でもお分かりのとおり 注文は
次から次へと入り　商品も常に流れています

00:03:47.897 --> 00:03:52.580
だから この問題の中心には作業員を置き

00:03:52.580 --> 00:03:57.204
彼らに可能な限り生産性を上げる方法を
提供することに集中すべきなのです

00:03:57.204 --> 00:03:59.304
どうやってこのコンセプトに
たどり着いたかですが－

00:03:59.304 --> 00:04:02.837
実はブレインストーミングの結果なのです

00:04:02.837 --> 00:04:05.677
多分皆さんも使う方法でしょう

00:04:05.677 --> 00:04:07.833
皆さんのアイディアを出しあう手法です

00:04:07.833 --> 00:04:09.563
もちろん まっさらな状態から
始めますが

00:04:09.563 --> 00:04:13.593
アイディアの検証には無限とかゼロといった
極端な場合を想定します

00:04:13.593 --> 00:04:16.775
このケースでは　
我々は次のアイディアを試しました

00:04:16.775 --> 00:04:19.751
もし中国に配送センターがあったら

00:04:19.751 --> 00:04:22.365
もし非常にコストの安い市場があったら

00:04:22.365 --> 00:04:25.578
つまり 労働力も土地も安い土地があったら

00:04:25.578 --> 00:04:27.224
具体的には

00:04:27.224 --> 00:04:30.230
「もし直接的な労働の時給が０ドルで

00:04:30.230 --> 00:04:32.946
100万平方フィートの配送センターを
建てられるなら？」

00:04:32.946 --> 00:04:35.021
この場合の自然な結論は

00:04:35.021 --> 00:04:36.829
「倉庫で多くの作業員を使おう」となります

00:04:36.829 --> 00:04:39.374
でも 「ちょっとまてよ 時給ゼロだが

00:04:39.374 --> 00:04:42.231
私の仕事は “雇用”

00:04:42.231 --> 00:04:46.358
毎日8時に倉庫に来て 倉庫に入り

00:04:46.358 --> 00:04:49.477
在庫から１品取り上げたら
後は立っているだけの

00:04:49.477 --> 00:04:51.210
１万人の作業員を雇うことなのかと

00:04:51.210 --> 00:04:53.749
あなたは キャプテンクランチ
あなたは マウンテンデュー

00:04:53.749 --> 00:04:55.172
あなたは ダイエットコーク

00:04:55.172 --> 00:04:57.428
必要な時に呼ぶので
それ以外は立っていてください

00:04:57.428 --> 00:05:00.815
私がダイエットコークを と言うと
皆さんは互いに相談します

00:05:00.815 --> 00:05:04.936
するとダイエットコークが前に歩いてきて
掴んでケースに入れて終わり

00:05:04.936 --> 00:05:09.588
おぉ もし商品が自分で歩いて話せたら？

00:05:09.588 --> 00:05:11.926
これは倉庫を上手く組織する可能性のある

00:05:11.926 --> 00:05:14.520
とても面白くパワフルな方法です

00:05:14.520 --> 00:05:16.868
もちろん 現実とこんな理想には差があります

00:05:16.868 --> 00:05:20.176
賃金はタダではありませんね

00:05:20.176 --> 00:05:21.866
（笑）

00:05:21.866 --> 00:05:24.983
これを「動く棚」と呼びます－
我々は動く棚に商品を載せ

00:05:24.983 --> 00:05:29.776
動くロボットを使い
在庫を移動させます

00:05:29.776 --> 00:05:34.194
当時まだ発想は不完全だったのですが
2008年にソファーに座っていたときです

00:05:34.194 --> 00:05:38.013
北京オリンピックの開会式を見ましたか？

00:05:38.013 --> 00:05:41.054
私はこれを見て
ソファーから転げ落ちそうになりました

00:05:41.054 --> 00:05:42.527
これだよ！

00:05:42.527 --> 00:05:47.026
(笑)　(拍手)

00:05:47.026 --> 00:05:50.917
何千人もの人達を 倉庫のフロアー
スタジアムのようなフロアーに配置します

00:05:50.917 --> 00:05:54.952
興味深いことに
これは彼らが創造した

00:05:54.952 --> 00:06:00.364
信じられないほどパワフルで
印象的なデジタルアートと関連しています

00:06:00.364 --> 00:06:02.440
といってもコンピューターを使わず

00:06:02.440 --> 00:06:04.886
個と個の連携で実現しているのだそうです

00:06:04.886 --> 00:06:06.462
あなたが立って 私がしゃがむ

00:06:06.462 --> 00:06:08.107
そして素晴らしいアートになります

00:06:08.107 --> 00:06:10.795
物同士が通信を始めたときには

00:06:10.795 --> 00:06:14.763
システムは新たな力を得ます

00:06:14.763 --> 00:06:18.541
これがちょっとした旅のはじまりです

00:06:18.541 --> 00:06:22.579
もちろんアイディアには実現性が必要です

00:06:22.579 --> 00:06:24.385
ここに倉庫があります

00:06:24.385 --> 00:06:28.161
10,000の商品を扱う　
仕分け、梱包、配送センターです

00:06:28.161 --> 00:06:32.298
例えば 赤ペン 緑ペン　
黄色のポストイットノート

00:06:32.298 --> 00:06:35.677
小さなオレンジのロボットを送り出し
青の棚を取ってこさせます

00:06:35.677 --> 00:06:37.845
そして棚がビルの壁際に届けられます

00:06:37.845 --> 00:06:40.981
全ての梱包作業員は倉庫の縁に
とどまっています

00:06:40.981 --> 00:06:43.323
まるでゲームの様に棚を持ち上げて

00:06:43.323 --> 00:06:46.647
ハイウェイを通って
梱包作業員に届けます

00:06:46.647 --> 00:06:48.784
この梱包作業員の様子は
(普通とは)全く違います

00:06:48.784 --> 00:06:52.201
倉庫を歩き回るのではなく

00:06:52.201 --> 00:06:53.789
こんな感じでじっとしています

00:06:53.789 --> 00:06:57.787
そして 全商品が彼女の元に届きます

00:06:57.787 --> 00:07:01.065
そのため プロセスはとても生産的です

00:07:01.065 --> 00:07:05.260
手を伸ばして 取り上げ
バーコードをスキャンして 梱包

00:07:05.260 --> 00:07:06.909
作業が終わって振り返ると

00:07:06.909 --> 00:07:09.948
他の商品が次に取り上げられ
梱包されるのを待っています

00:07:09.948 --> 00:07:12.958
私たちは付加価値のない
移動、探すこと、浪費、待ち時間という

00:07:12.958 --> 00:07:15.642
作業をなくしたのです

00:07:15.642 --> 00:07:19.920
また我々は　
商品のUPCバーコードをスキャンし

00:07:19.920 --> 00:07:24.084
さらにどの箱に梱包をするのか
ランプで示すことで

00:07:24.084 --> 00:07:27.278
箱の選択を
確実に行う方法を生み出しました

00:07:27.278 --> 00:07:30.764
だから より生産的で 正確であり

00:07:30.764 --> 00:07:35.070
梱包作業員にとっても
好ましい職場環境になったのです

00:07:35.070 --> 00:07:37.507
実際に 彼らは全ての注文を
こなしています

00:07:37.507 --> 00:07:40.034
そこでは 赤 、緑、青も仕分けています

00:07:40.034 --> 00:07:43.648
そのため 彼らは従来よりも
仕事環境を管理できていると感じています

00:07:43.648 --> 00:07:46.846
このアプローチの副次的な効果には

00:07:46.846 --> 00:07:48.414
我々も本当に驚きました

00:07:48.414 --> 00:07:49.992
より生産的な方法だと思っていましたが

00:07:49.992 --> 00:07:54.062
倉庫の他の機能にまで波及することを

00:07:54.062 --> 00:07:59.292
理解していませんでした

00:07:59.292 --> 00:08:04.124
配送センターで成功したこのアプローチは

00:08:04.124 --> 00:08:08.588
多数の並列処理エンジンに
とって代わられています

00:08:08.588 --> 00:08:11.211
これはアイディアの相乗効果です

00:08:11.211 --> 00:08:13.150
ここが倉庫で 我々は 並列処理を行う

00:08:13.150 --> 00:08:16.669
スーパーコンピューターのような
構成について考えています

00:08:16.669 --> 00:08:19.066
ここでご覧のケースでは

00:08:19.066 --> 00:08:21.863
スクリーンの右側にいる
10人の作業員は

00:08:21.863 --> 00:08:26.111
それぞれ独立して作業を行う
梱包作業員です

00:08:26.111 --> 00:08:30.015
もしステーション３の作業員が
トイレに行こうと決めても

00:08:30.015 --> 00:08:33.499
残り９人の作業員の生産性に変化はありません

00:08:33.499 --> 00:08:37.869
これに対して
伝統的なコンベヤーを使う方法では

00:08:37.869 --> 00:08:39.928
誰かが作業をあなたに指示し

00:08:39.928 --> 00:08:42.427
あなたは何かを箱に入れて
次の作業員に渡します

00:08:42.427 --> 00:08:45.544
連続した作業のためには
全員が配置についている必要があります

00:08:45.544 --> 00:08:48.721
ここから倉庫をもっと安定的に
操業する方法に思い至ります

00:08:48.721 --> 00:08:53.265
また 舞台裏には 人気商品を管理する

00:08:53.265 --> 00:08:55.003
面白い仕掛けがあります

00:08:55.003 --> 00:08:57.827
我々は動的で適応性のある
アルゴリズムを使い

00:08:57.827 --> 00:09:02.281
倉庫のフロアー内を最適化しています

00:09:02.281 --> 00:09:07.165
例えばバレンタインデー前の一週間

00:09:07.165 --> 00:09:11.008
全てのピンクの粉を吹いた
キャンディーは建物の前面に配置され

00:09:11.008 --> 00:09:14.901
梱包ステーションで
多くのの注文が処理されていきます

00:09:14.901 --> 00:09:19.064
バレンタインデーの２日後には
この売れ残りのキャンディーは

00:09:19.064 --> 00:09:21.337
倉庫の奥のほうに運ばれ

00:09:21.337 --> 00:09:25.630
より寒色のエリアに配置されます

00:09:25.630 --> 00:09:29.113
この同時並列処理システムの副次効果は

00:09:29.113 --> 00:09:32.108
バカでかくスケールアップできることです

00:09:32.108 --> 00:09:33.635
（笑）

00:09:33.635 --> 00:09:36.369
たとえ２つのステーションでも 
20のステーションでも

00:09:36.369 --> 00:09:39.642
200のステーションでも
最善経路を求め

00:09:39.642 --> 00:09:42.185
在庫を扱うアルゴリズムは機能します

00:09:42.185 --> 00:09:46.541
ここでご紹介する例では

00:09:46.541 --> 00:09:48.867
倉庫の縁にステーションがあるため

00:09:48.867 --> 00:09:51.213
在庫も周辺部に置かれています

00:09:51.213 --> 00:09:53.231
これらは自己組織化されます

00:09:53.231 --> 00:09:55.518
話の締めくくりに 最後のビデオとして

00:09:55.518 --> 00:09:58.502
この仕組みが実際
梱包作業員の一日に

00:09:58.502 --> 00:10:02.096
どのように影響しているか
お見せします

00:10:02.096 --> 00:10:06.432
お話ししたとおり
在庫がハイウェイを行き来し

00:10:06.432 --> 00:10:09.084
梱包ステーションまで届けられます

00:10:09.084 --> 00:10:11.555
背後にある我々のソフトウェアは

00:10:11.555 --> 00:10:14.306
個々のステーションで何が起きているのか
把握しています

00:10:14.306 --> 00:10:16.917
我々はハイウェイを行きかう
ロボットの一群に指令を出し

00:10:16.917 --> 00:10:19.631
順番待ちシステムにも関わって

00:10:19.631 --> 00:10:22.515
どのように梱包作業員へ運搬するかも
指示することができます

00:10:22.515 --> 00:10:25.760
面白いことに作業員のスピードに
合わせることもできます

00:10:25.760 --> 00:10:29.686
早い作業員はより多く容器を取りますが
遅い作業員は少なく容器を取ります

00:10:29.686 --> 00:10:32.824
この作業員達はまさに今

00:10:32.824 --> 00:10:34.677
前にお話したような経験をしています

00:10:34.677 --> 00:10:37.221
彼女は手を差し伸べると
商品が手に飛び込んでくるので

00:10:37.221 --> 00:10:39.426
手を伸ばして受け取るだけです

00:10:39.426 --> 00:10:41.871
商品をスキャンして かごに入れる

00:10:41.871 --> 00:10:45.667
全てのテクノロジーが舞台裏に隠されています

00:10:45.667 --> 00:10:49.528
彼女は手にとって梱包するだけでよいのです

00:10:49.528 --> 00:10:52.802
無駄な時間はなく　
持ち場のマットを離れる必要もありません

00:10:52.802 --> 00:10:56.942
この方法は生産性を上げるだけでなく

00:10:56.942 --> 00:11:00.212
より正確に注文に対応できると思います

00:11:00.212 --> 00:11:03.622
我々はこれを注文をより確実に遂行する
方法だと考えています

00:11:03.622 --> 00:11:06.830
その理由は建物内の作業員たちが

00:11:06.830 --> 00:11:08.972
その日にKivaゾーンで働く特権を

00:11:08.972 --> 00:11:12.154
争っているからです

00:11:12.154 --> 00:11:14.817
時に我々は作業員たちに

00:11:14.817 --> 00:11:16.934
証言ビデオで話してもらうと

00:11:16.934 --> 00:11:21.180
「一日の仕事の後に孫と遊ぶ余力がある」と

00:11:21.180 --> 00:11:25.776
または「Kivaゾーンはストレスフリーなので

00:11:25.776 --> 00:11:28.891
高血圧の薬を飲む必要がなくなった」と
言ってくれます

00:11:28.891 --> 00:11:30.725
（笑）

00:11:30.725 --> 00:11:34.724
これは医薬系の流通業者だったので
ビデオを使うのはやめてくれと言われました

00:11:34.724 --> 00:11:38.292
（笑）

00:11:38.292 --> 00:11:41.316
本日皆さんにお伝えしたかったのは

00:11:41.316 --> 00:11:44.171
もし皆さんが自ら考え 行動し
考えを煮詰めれば

00:11:44.171 --> 00:11:49.462
興味深い処理工程と
生産性の向上が生まれると言うことです

00:11:49.462 --> 00:11:52.403
そして次回みなさんが

00:11:52.403 --> 00:11:54.914
インターネットで注文した商品を
玄関先で受け取り

00:11:54.914 --> 00:11:57.138
箱を開けて 商品を見たときに

00:11:57.138 --> 00:11:59.891
舞台裏でロボットが注文の商品を見つけて

00:11:59.891 --> 00:12:02.484
梱包の手助けをしていることを想い
驚くことでしょう

00:12:02.484 --> 00:12:04.163
どうもありがとう

00:12:04.163 --> 00:12:08.793
（拍手）

