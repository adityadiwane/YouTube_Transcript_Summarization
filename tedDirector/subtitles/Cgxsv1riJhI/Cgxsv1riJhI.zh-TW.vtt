WEBVTT
Kind: captions
Language: zh-TW

00:00:00.000 --> 00:00:07.000
譯者: 易帆 余
審譯者: Wilde Luo

00:00:12.645 --> 00:00:13.796
10 年前，

00:00:13.820 --> 00:00:16.596
電腦視覺研究人員認為，

00:00:16.620 --> 00:00:19.316
要讓電腦辨別貓與狗的差別，

00:00:19.340 --> 00:00:21.316
幾乎是比登天還難，

00:00:21.340 --> 00:00:25.036
即使用了相當先進的
人工智慧都很難辦到。

00:00:25.060 --> 00:00:28.620
現在我們可以把辨別的準確度
提升到 99% 以上。

00:00:29.500 --> 00:00:31.356
這技術叫做圖像分類——

00:00:31.380 --> 00:00:34.476
給電腦看圖片，
並給圖片貼上標籤——

00:00:34.500 --> 00:00:37.540
電腦還可以識別出
許多其它類別的東西。

00:00:38.500 --> 00:00:41.396
我目前是華盛頓大學的研究生，

00:00:41.420 --> 00:00:43.316
我正在做一個專題叫做「暗黑網路」，

00:00:43.340 --> 00:00:45.036
它是一個用來訓練及測試

00:00:45.060 --> 00:00:47.876
電腦視覺模型的神經網路架構。

00:00:47.900 --> 00:00:50.876
所以，讓我們來瞧瞧暗黑網路

00:00:50.900 --> 00:00:52.660
對我們照片識別能力的狀況。

00:00:54.340 --> 00:00:56.676
當我們在這張照片上

00:00:56.700 --> 00:00:57.916
開啟我們的分類器，

00:00:57.940 --> 00:01:00.396
可以看到電腦現在不只
在預測這是狗或貓，

00:01:00.420 --> 00:01:02.756
它實際上正在擷取特定品種的預測。

00:01:02.780 --> 00:01:04.956
這就是現在我們電腦的粒度等級。

00:01:04.980 --> 00:01:06.596
辨別正確。

00:01:06.620 --> 00:01:08.460
我的狗的確是隻雪橇犬。

00:01:08.860 --> 00:01:13.196
所以，我們在圖像識別上
已經有了很大的進步，

00:01:13.220 --> 00:01:15.220
但如果我們用識別器

00:01:15.244 --> 00:01:17.204
來辨別這樣的照片呢？

00:01:18.900 --> 00:01:20.100
嗯……

00:01:24.460 --> 00:01:28.356
可以看到從分類器
得到的預測也相當類似。

00:01:28.380 --> 00:01:31.476
沒錯，圖片中有一隻雪橇狗，

00:01:31.500 --> 00:01:33.310
但它只給出一個標籤，

00:01:33.310 --> 00:01:36.887
我們對這張照片的理解
還不是很完整。

00:01:36.911 --> 00:01:38.471
我們需要更強的東西。

00:01:39.060 --> 00:01:41.676
我正在研究一個問題，
叫做「物件偵測」，

00:01:41.700 --> 00:01:44.636
我們把一張照片中的
所有物體都找出來，

00:01:44.660 --> 00:01:46.116
用邊界框把它們框起來，

00:01:46.140 --> 00:01:48.110
然後標示它們是那些東西。

00:01:48.220 --> 00:01:52.870
我們來看一下當我們在這一張圖片上
執行偵測軟體時，會發生甚麼事。

00:01:53.060 --> 00:01:55.316
現在，有了這類的結果，

00:01:55.340 --> 00:01:58.036
我們就可以利用電腦視覺演算法，
幫我們做更多的事。

00:01:58.060 --> 00:02:01.036
我們可以看到，
電腦知道圖片中有一隻貓和狗。

00:02:01.060 --> 00:02:03.316
它知道牠們彼此的相對位置、

00:02:03.340 --> 00:02:04.556
大小。

00:02:04.580 --> 00:02:06.516
電腦甚至可能知道其它的資訊。

00:02:06.540 --> 00:02:08.500
它也看到了背景中有一本書。

00:02:09.100 --> 00:02:12.356
如果你想要建立一個
基於電腦視覺系統的實用系統，

00:02:12.380 --> 00:02:15.836
比如說，自動駕駛車或機械人系統，

00:02:15.860 --> 00:02:18.316
這類就會是你想要的資訊。

00:02:18.340 --> 00:02:21.579
你會想要一個可以
與實體世界互動的東西。

00:02:22.579 --> 00:02:24.836
當我開始做物件偵測時，

00:02:24.860 --> 00:02:28.156
它要花 20 秒才能處理一張圖片。

00:02:28.180 --> 00:02:32.060
為了讓各位體會
為什麼這個領域這麼講究速度，

00:02:32.940 --> 00:02:35.476
我這邊做個執行物件偵測器的示範，

00:02:35.500 --> 00:02:37.916
一張照片只要 2 秒的處理時間。

00:02:37.940 --> 00:02:40.556
所以，比 20 秒一張的偵測器

00:02:40.580 --> 00:02:44.116
快了 10 倍，

00:02:44.140 --> 00:02:46.796
各位可以看到，
在它識別圖像的過程中，

00:02:46.820 --> 00:02:48.860
周圍環境已經發生了變化，

00:02:49.700 --> 00:02:52.116
但對一個應用軟體而言，

00:02:52.140 --> 00:02:53.556
這樣的速度是很鷄肋的。

00:02:53.580 --> 00:02:56.076
如果我們把另一個參數調升到 10 ，

00:02:56.100 --> 00:02:58.916
這個偵測器每秒
就可以識別 5 張圖片。

00:02:58.940 --> 00:03:00.476
這樣好多了，

00:03:00.500 --> 00:03:02.476
但，假如，

00:03:02.500 --> 00:03:04.796
移動很快的時候……

00:03:04.820 --> 00:03:07.380
我可不想在我車上裝這樣慢的系統。

00:03:08.940 --> 00:03:12.180
這是在我筆電上運行的
即時偵測系統。

00:03:12.820 --> 00:03:15.956
我在框框附近移動的時候，
它可以很順暢地追蹤著我，

00:03:15.980 --> 00:03:19.700
而且，它可以根據不同的大小、

00:03:21.260 --> 00:03:22.460
姿勢、

00:03:23.100 --> 00:03:24.956
前、後來做調整。

00:03:24.980 --> 00:03:26.196
太棒了。

00:03:26.220 --> 00:03:29.766
如果我們要建立一個
基於電腦視覺系統的實用系統，

00:03:29.766 --> 00:03:32.006
這個才會是我真正想要的。

00:03:32.006 --> 00:03:34.900
（掌聲）

00:03:36.100 --> 00:03:38.276
所以，才幾年的時間，

00:03:38.300 --> 00:03:40.956
我們從每 20 秒處理一張照片，

00:03:40.980 --> 00:03:44.516
進步到每張照片只要 20 毫秒，
快了 1000 倍。

00:03:44.540 --> 00:03:45.956
我們是如何辦到的？

00:03:45.980 --> 00:03:48.996
過去，物件偵測系統，

00:03:49.020 --> 00:03:50.956
會把一張像這樣的照片，

00:03:50.980 --> 00:03:53.436
分割成好幾個小區塊，

00:03:53.460 --> 00:03:56.716
然後在每一個小區塊
運行分類器軟體，

00:03:56.740 --> 00:03:59.276
相似度得分如果比較高

00:03:59.300 --> 00:04:02.436
會被識別器認為照片偵測成功。

00:04:02.460 --> 00:04:06.516
但這樣一張圖片要執行
好幾千次的識別指令、

00:04:06.540 --> 00:04:10.340
經過好幾千次的神經網路評估
才有辦法偵測出來。

00:04:11.060 --> 00:04:15.596
但我們不是這樣做，我們訓練了一個
網路模型來幫我們完成所有的偵測。

00:04:15.620 --> 00:04:19.900
它可以同時產出邊界框
並同時對可能的結果進行評估。

00:04:20.500 --> 00:04:23.996
有了我們的系統，
你就不用一張圖片看了好幾千遍

00:04:24.020 --> 00:04:25.476
才能偵測出來。

00:04:25.500 --> 00:04:26.756
你只要看一眼 (YOLO)，

00:04:26.780 --> 00:04:29.700
所以我們簡稱這個
物件偵測技術為「YOLO」。

00:04:31.180 --> 00:04:35.156
所以，有了這樣的辨識速度，
我們不只可以偵測圖片；

00:04:35.180 --> 00:04:37.596
還可以處理即時的影片。

00:04:37.620 --> 00:04:40.716
現在各位看到的不是
貓、狗的靜態圖片，

00:04:40.740 --> 00:04:44.880
而是有牠們在移動、
互動的動態影片。

00:04:46.380 --> 00:04:49.496
這是我們用微軟 COCO 資料集裡

00:04:49.496 --> 00:04:52.836
80 種不同的類別

00:04:52.860 --> 00:04:56.116
訓練出來的辨識器。

00:04:56.140 --> 00:04:59.476
它包含各種東西，
像是湯匙、叉子、碗

00:04:59.500 --> 00:05:01.900
這類的日常用品。

00:05:02.180 --> 00:05:05.276
它還有很多奇妙的東西：

00:05:05.300 --> 00:05:08.556
動物、車子、斑馬、長頸鹿。

00:05:08.580 --> 00:05:10.516
現在我們要進行一件好玩的事。

00:05:10.540 --> 00:05:12.636
我們會進到觀眾席，

00:05:12.660 --> 00:05:14.676
去看看能辨識到哪些東西。

00:05:14.700 --> 00:05:16.320
有誰要填充娃娃？

00:05:17.820 --> 00:05:20.502
這邊還有一些泰迪熊。

00:05:21.860 --> 00:05:26.396
我們現在降低一下
對偵測結果的精確度的要求，

00:05:26.420 --> 00:05:29.820
這樣我們可以在觀眾席中
找到更多東西。

00:05:31.380 --> 00:05:33.716
我們來看看能不能偵測到停止標誌。

00:05:33.740 --> 00:05:35.620
我們有偵測到一些背包。

00:05:37.700 --> 00:05:39.540
現在把鏡頭拉近一點。

00:05:42.140 --> 00:05:43.396
這真的很厲害。

00:05:43.420 --> 00:05:45.870
所有的偵測流程

00:05:45.870 --> 00:05:48.690
都可以在筆電裡即時呈現。

00:05:48.900 --> 00:05:50.356
更重要的是，

00:05:50.380 --> 00:05:53.596
這只是一個一般用的物件偵測系統，

00:05:53.620 --> 00:05:58.620
我們還可以訓練它
辨別任何領域的照片。

00:06:00.140 --> 00:06:02.676
同樣的程式碼，
放在自動駕駛車裡，

00:06:02.700 --> 00:06:05.156
可以偵測到停止標誌、行人、

00:06:05.180 --> 00:06:07.156
腳踏車，

00:06:07.180 --> 00:06:10.036
但放到組織切片

00:06:10.060 --> 00:06:13.076
就可以偵測出癌症細胞。

00:06:13.100 --> 00:06:17.140
現在全球有很多研究人員
已經開始在使用這項技術

00:06:18.060 --> 00:06:21.476
做進一步的研究，
像是醫藥、機械人領域。

00:06:21.500 --> 00:06:22.876
今天早上，我讀到一篇文章，

00:06:22.900 --> 00:06:27.476
在奈洛比國家公園裡，
他們要對動物們進行統計調查，

00:06:27.500 --> 00:06:30.636
YOLO 就是其使用的
偵測系統的一部分。

00:06:30.660 --> 00:06:33.756
而這一切都是因為
暗黑網路是開放原始碼，

00:06:33.780 --> 00:06:36.300
在公眾領域，
任何人都可以免費使用。

00:06:37.420 --> 00:06:43.116
（掌聲）

00:06:43.140 --> 00:06:48.076
但我們希望偵測系統
可以更親民、更好用，

00:06:48.100 --> 00:06:52.156
所以在經過模型優化、

00:06:52.180 --> 00:06:54.476
網路二值化及近似度化的整合後，

00:06:54.500 --> 00:06:58.420
我們終於可以在手機上偵測物件。

00:07:04.620 --> 00:07:09.940
（掌聲）

00:07:10.780 --> 00:07:14.136
而我真的相當興奮，因為我們現在

00:07:14.180 --> 00:07:18.856
在低階的電腦影像處理問題上
有了相當強力的解決方式，

00:07:18.856 --> 00:07:22.036
任何人都可以拿去並創造一些東西。

00:07:22.060 --> 00:07:25.236
所以，接下來就看各位

00:07:25.260 --> 00:07:28.196
以及全世界所有人
用這個軟體大展身手了，

00:07:28.220 --> 00:07:31.876
我真的等不及想看看你們
用這項科技所做出來的產品。

00:07:31.900 --> 00:07:33.116
謝謝。

00:07:33.140 --> 00:07:36.580
（掌聲）

