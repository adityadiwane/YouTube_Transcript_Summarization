WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:07.000
翻译人员: Zhiting Chen
校对人员: Yinchun Rui

00:00:13.280 --> 00:00:16.910
在我的实验室，
我们打造了自动飞行的机器人，

00:00:16.910 --> 00:00:18.840
就是你们眼前的这种。

00:00:20.720 --> 00:00:24.380
不像当今市面上销售的那些，

00:00:24.380 --> 00:00:27.080
这个机器人没有GPS定位系统。

00:00:28.160 --> 00:00:29.370
在没有GPS的情况下，

00:00:29.370 --> 00:00:32.680
这样的机器人很难定位自己。

00:00:34.240 --> 00:00:38.950
这个机器人用机载传感器，
相机和激光扫描仪，

00:00:38.950 --> 00:00:40.690
来扫描环境。

00:00:40.690 --> 00:00:43.750
它能够探测到环境的特征，

00:00:43.750 --> 00:00:46.536
并使用三角测量的方式来决定
不同的特征之间

00:00:46.540 --> 00:00:48.696
有怎样的联系。

00:00:48.700 --> 00:00:52.160
然后它能够把所有这些信息
整合到一张地图上，

00:00:52.160 --> 00:00:53.920
就是我背后的这张图。

00:00:53.920 --> 00:00:57.880
这个地图能让机器人确定
障碍物的位置，

00:00:57.880 --> 00:01:00.640
并巧妙地避开各种碰撞。

00:01:01.160 --> 00:01:03.240
我接下来要展示的是

00:01:03.240 --> 00:01:06.496
一组我们在户外进行的实验，

00:01:06.500 --> 00:01:10.000
证明机器人能够在户外
进行长距离飞行。

00:01:10.400 --> 00:01:15.466
你们可以看到，在右上方，
是机器人通过照相机看到的影像。

00:01:15.466 --> 00:01:16.706
在主屏幕上——

00:01:16.706 --> 00:01:19.130
当然这是以4倍速度在播放展示——

00:01:19.130 --> 00:01:21.821
在主屏幕上，你们可以看到
地图的创建过程。

00:01:21.821 --> 00:01:26.120
这是一个高分辨率的地图，
展示了我们实验室周围走廊的样子。

00:01:26.120 --> 00:01:28.490
很快你们就能看到飞行机器人
进入了我们的实验室，

00:01:28.490 --> 00:01:31.370
这么乱的地方，一看
就知道是我们的实验室。

00:01:31.370 --> 00:01:32.400
（笑声）

00:01:32.400 --> 00:01:34.422
但我重点想说的是，

00:01:34.422 --> 00:01:38.010
这些飞行器可以创建
高分辨率的地图，

00:01:38.010 --> 00:01:40.560
达到5厘米的分辨率，

00:01:40.560 --> 00:01:44.770
可以使那些在实验室外，
或者是房屋外的人，

00:01:44.770 --> 00:01:48.066
无需进入房间即可观察到这些内容，

00:01:48.066 --> 00:01:51.800
并尝试了解房屋内发生的状况。

00:01:52.400 --> 00:01:54.640
当然这样的机器人也有问题。

00:01:55.600 --> 00:01:57.800
首先，它有些大了。

00:01:58.120 --> 00:01:59.800
因为很大，所以很重。

00:02:00.640 --> 00:02:03.680
这些机器人每磅重量可以消耗
100瓦的电能。

00:02:04.360 --> 00:02:06.640
这使得它的运作时间很短。

00:02:08.000 --> 00:02:09.440
第二个问题就是，

00:02:09.440 --> 00:02:13.376
这些机器人有机载传感器，
它们非常昂贵——

00:02:13.380 --> 00:02:16.840
一个激光扫描仪，一个相机
以及处理器。

00:02:17.280 --> 00:02:20.320
这些让这个飞行机器人的
制造成本十分高昂。

00:02:21.440 --> 00:02:24.080
因此我们问了自己一个问题：

00:02:24.080 --> 00:02:27.880
你能在电子产品商店买到怎样的物品，

00:02:27.880 --> 00:02:34.200
它既不昂贵，又很轻，
还有机载传感器和计算能力？

00:02:36.080 --> 00:02:38.730
于是我们发明了会飞的手机。

00:02:38.730 --> 00:02:40.670
（笑声）

00:02:40.670 --> 00:02:46.880
这个机器人使用了你可以轻松购买到的
三星银河系列手机，

00:02:46.880 --> 00:02:50.936
你所需要的只是一个应用程序，
可以从我们的应用程序商店下载。

00:02:50.940 --> 00:02:55.150
你们可以看到这个飞行机器人在读字，
“TED”，

00:02:55.150 --> 00:02:58.130
观察字母“T”和“E”角落的位置，

00:02:58.130 --> 00:03:01.640
再应用三角测量法，实现自主飞行。

00:03:02.720 --> 00:03:05.960
那个手柄的作用仅限于
当飞行器失控时，

00:03:05.960 --> 00:03:07.410
Giuseppe就能让它失去功能。

00:03:07.410 --> 00:03:09.080
（笑声）

00:03:10.920 --> 00:03:14.710
除了制造这些飞行机器人外，

00:03:14.710 --> 00:03:19.560
我们还试着让它们做更激烈的动作，
比如这样。

00:03:19.920 --> 00:03:25.210
这个飞行机器人目前的速度是
每秒钟2到3米，

00:03:25.210 --> 00:03:28.710
在转变方向的时候
激烈地起降和翻转。

00:03:28.710 --> 00:03:33.010
重点是，我们还能制造更小，更快的
飞行机器人，

00:03:33.010 --> 00:03:36.000
它们可以在非常复杂的环境中飞行。

00:03:37.120 --> 00:03:39.160
下一个影片中，

00:03:39.160 --> 00:03:45.090
你们可以看到这只鹰，
优雅地协调它的翅膀，

00:03:45.090 --> 00:03:49.416
眼睛和爪子之间的配合，
把猎物抓出水面，

00:03:49.420 --> 00:03:51.330
我们的机器人也能去捕鱼。

00:03:51.330 --> 00:03:52.840
（笑声）

00:03:52.840 --> 00:03:56.920
在这个试验中，它在空中抓起了
这个特大号菲力芝士牛排三明治。

00:03:56.920 --> 00:03:59.360
（笑声）

00:03:59.680 --> 00:04:02.970
你们可以看到这个机器人
以每秒3米左右的速度飞行，

00:04:02.970 --> 00:04:08.130
比步行的速度快一些，
同时还能协调它的手臂和爪子，

00:04:08.130 --> 00:04:12.280
以极快的速度完成整套动作。

00:04:14.120 --> 00:04:15.330
在另一个试验中，

00:04:15.330 --> 00:04:19.010
我想要展示，
机器人是如何依据悬浮载重

00:04:19.010 --> 00:04:21.400
来调整飞行模式的，

00:04:21.400 --> 00:04:25.240
它的总长度大于窗子的高度。

00:04:25.680 --> 00:04:27.360
为了完成任务，

00:04:27.360 --> 00:04:31.080
它需要向下倾斜，调整高度，

00:04:31.080 --> 00:04:33.440
然后把重物摆动过去。

00:04:38.920 --> 00:04:41.210
但是，我们希望让机器人变得更小，

00:04:41.210 --> 00:04:44.256
而蜜蜂启发了我们。

00:04:44.260 --> 00:04:47.536
如果你们观察一下蜜蜂，
在这个慢速的视频里，

00:04:47.540 --> 00:04:51.280
它们是这么小，
惯性是这么轻 ——

00:04:51.960 --> 00:04:53.130
（笑声）

00:04:53.130 --> 00:04:56.680
它们并不在意——
它们会撞击我的手，比如说。

00:04:56.680 --> 00:04:59.880
这是个小机器人，
可以模拟蜜蜂的行为。

00:05:00.600 --> 00:05:01.800
越小越好，

00:05:01.800 --> 00:05:05.340
因为尺寸小，惯性就会小。

00:05:05.340 --> 00:05:06.910
惯性小——

00:05:06.910 --> 00:05:09.810
（机器人嗡嗡声，笑声）

00:05:09.810 --> 00:05:12.630
惯性小，发生撞击的
可能性就低一些。

00:05:12.630 --> 00:05:14.400
这使得机器人更耐用。

00:05:15.800 --> 00:05:18.420
模仿这些蜜蜂，
我们制作了小型机器人。

00:05:18.420 --> 00:05:21.840
这个特殊的机器人只有25克重。

00:05:21.840 --> 00:05:24.040
它的耗电量仅为6瓦。

00:05:24.440 --> 00:05:26.970
它的飞行速度可达每秒6米。

00:05:26.970 --> 00:05:29.320
因此，如果我把它的尺寸按比例放大，

00:05:29.320 --> 00:05:33.000
就好比一架波音787飞机
以10倍于音速的速度飞行。

00:05:36.000 --> 00:05:38.070
（笑声）

00:05:38.070 --> 00:05:40.040
我还要给你们展示一个例子。

00:05:40.840 --> 00:05:46.060
这可能是第一个计划中的
以20分之1正常速度进行的空中相撞。

00:05:46.060 --> 00:05:48.962
它们的相对速度为每秒2米，

00:05:48.962 --> 00:05:51.482
这里展示了基本的原理。

00:05:52.200 --> 00:05:57.186
两克重的碳纤维笼子包围着它
使螺旋桨不会受损，

00:05:57.186 --> 00:06:02.490
但最关键的是，撞击被吸收了，
机器人能够对撞击做出反应。

00:06:02.490 --> 00:06:05.080
并且，小也意味着安全。

00:06:05.400 --> 00:06:07.400
在我的实验室，
最初开发这些机器人的时候，

00:06:07.400 --> 00:06:09.034
我们从大的机器人开始

00:06:09.034 --> 00:06:11.896
现在着手做小的机器人。

00:06:11.900 --> 00:06:15.320
如果你们看一下我们购买
创可贴的数量统计图，

00:06:15.320 --> 00:06:17.970
就知道现在我们已经几乎不需要买了。

00:06:17.970 --> 00:06:19.960
因为这些机器人非常安全。

00:06:20.760 --> 00:06:23.210
小尺寸也有一些缺点，

00:06:23.210 --> 00:06:27.320
但是自然界有很多方法
来弥补这些缺陷。

00:06:27.960 --> 00:06:31.960
最基本的想法是，
它们可以聚集在一起组成大型的群落。

00:06:32.320 --> 00:06:36.280
因此，在实验室里，
我们也试着去组建机器人群组。

00:06:36.280 --> 00:06:37.675
这是非常有难度的工作，

00:06:37.675 --> 00:06:41.045
因为我们要考虑飞行机器人网络。

00:06:41.360 --> 00:06:42.640
在每一个飞行器中，

00:06:42.640 --> 00:06:48.290
我们都需要考虑传感，沟通和计算，
这些互相影响的因素——

00:06:48.290 --> 00:06:53.280
这样的机器人网络
不易控制和管理。

00:06:54.160 --> 00:06:57.420
从大自然中，我们汲取了
三个组织原则，

00:06:57.420 --> 00:07:00.640
最终帮助我们完成了算法的发展。

00:07:01.640 --> 00:07:06.160
第一个是，机器人
需要注意到它的邻居们。

00:07:06.160 --> 00:07:09.640
它们要有能力去感知相邻的机器人
并与它们交流。

00:07:10.040 --> 00:07:12.650
这个视频展示了最基本的想法。

00:07:12.650 --> 00:07:13.980
有4个机器人——

00:07:13.980 --> 00:07:18.280
其中的一个被人手动控制了。

00:07:19.217 --> 00:07:21.440
但是因为机器人会相互通讯，

00:07:21.440 --> 00:07:23.336
它们能够感知到旁边机器人的行动，

00:07:23.336 --> 00:07:24.526
也会跟着它移动。

00:07:24.526 --> 00:07:29.840
这个人能够领导整个
飞行机器人群体的行动。

00:07:32.000 --> 00:07:37.040
再强调一次，这并不是因为
所有的机器人都知道它们要去哪里。

00:07:37.040 --> 00:07:41.400
而是它们能根据相邻机器人位置变化
做出相应的反应。

00:07:43.720 --> 00:07:47.840
（笑声）

00:07:48.280 --> 00:07:53.520
下一个实验展示了第二个组织原则。

00:07:54.920 --> 00:07:58.720
这个原则与匿名原则有关。

00:07:59.400 --> 00:08:03.660
其中的关键在于，

00:08:03.660 --> 00:08:07.960
机器人是不知道与它们相邻的
机器人的身份的。

00:08:08.440 --> 00:08:11.030
它们被要求形成一个圆圈，

00:08:11.030 --> 00:08:14.350
不管你往这个阵列中放多少个机器人，

00:08:14.350 --> 00:08:16.910
或者是你拿出来多少个机器人，

00:08:16.910 --> 00:08:20.130
每个机器人都会很简单地
根据它相邻机器人的行为做出反应。

00:08:20.130 --> 00:08:25.120
它清楚地知道需要形成圆圈，

00:08:25.120 --> 00:08:26.880
与它的相邻机器人配合行动，

00:08:26.880 --> 00:08:30.680
这个过程不需要中枢系统协调。

00:08:31.520 --> 00:08:33.890
综合这两个想法之后，

00:08:33.890 --> 00:08:37.820
第三个想法就是我们会

00:08:37.820 --> 00:08:42.100
用数学方式来描述
它们需要组成的阵列形状。

00:08:42.100 --> 00:08:45.670
这些形状会根据时间发生变化，

00:08:45.670 --> 00:08:50.180
你们看到这些飞行器
从一个圆形开始，

00:08:50.180 --> 00:08:53.440
接着变为长方形，
然后变成一条直线，

00:08:53.440 --> 00:08:54.849
又变回椭圆形。

00:08:54.849 --> 00:08:58.500
它们通过瞬间的协调
来完成这些动作，

00:08:58.500 --> 00:09:01.840
就像自然界里的蜂群一样。

00:09:03.080 --> 00:09:05.180
为什么要模仿蜂群呢？

00:09:05.180 --> 00:09:09.360
我们对这项技术的两种应用
非常感兴趣。

00:09:10.160 --> 00:09:12.490
第一个有关于农业，

00:09:12.490 --> 00:09:15.920
农业应该是全球面临最严峻的问题。

00:09:16.760 --> 00:09:17.990
大家都知道，

00:09:17.990 --> 00:09:21.560
地球上每7个人中就有1个营养不良。

00:09:21.920 --> 00:09:25.400
我们耕种了绝大部分可耕的土地。

00:09:25.960 --> 00:09:29.160
世界上很多系统的效率都在提高，

00:09:29.160 --> 00:09:32.720
但是我们生产系统的
效率事实上却是在下降。

00:09:33.080 --> 00:09:37.280
很大程度上源于水源短缺，
作物病害，气候变化

00:09:37.280 --> 00:09:38.840
和许多其他的原因。

00:09:39.360 --> 00:09:40.840
那么，这些机器人能做什么呢？

00:09:41.200 --> 00:09:45.780
我们称之为社区里的精密耕作。

00:09:45.780 --> 00:09:51.160
我们基本的想法是
让这些飞行机器人飞越果园，

00:09:51.160 --> 00:09:54.360
为每一株植物搭建精密的模型。

00:09:54.829 --> 00:09:56.440
就像个性化的机器，

00:09:56.440 --> 00:10:01.300
想象每个病人都有一对一服务，

00:10:01.300 --> 00:10:05.040
我们要做的就是
为每株植物单独建立模型，

00:10:05.040 --> 00:10:09.200
然后告诉农民
每株植物各需要些什么——

00:10:09.200 --> 00:10:13.680
需要的因素在这里指的是水，
肥料和杀虫剂。

00:10:14.640 --> 00:10:18.230
你们现在看到的是
机器人飞过一片苹果园，

00:10:18.230 --> 00:10:20.500
很快你们就会看到另外两个机器人

00:10:20.500 --> 00:10:22.370
在左侧做着同样的事。

00:10:22.800 --> 00:10:26.420
它们在制作果园的地图。

00:10:26.420 --> 00:10:29.316
这个地图里有果园里每株植物的位置。

00:10:29.320 --> 00:10:30.950
（机器人嗡嗡声）

00:10:30.950 --> 00:10:32.880
我们来看一下
这些地图是什么样子的。

00:10:32.880 --> 00:10:37.190
在下一个视频中，你们会看到
机器人上安装的各种摄像头。

00:10:37.190 --> 00:10:40.480
左上角的是一个高清彩色摄像机。

00:10:41.640 --> 00:10:44.890
左边中间的是一个红外线摄像机。

00:10:44.890 --> 00:10:48.670
左下方的是一个热成像摄像机。

00:10:48.670 --> 00:10:52.070
在主面板上，你们会看到
每一株果树的三维图像。

00:10:52.070 --> 00:10:58.240
这是当机器人飞过果树时
传感器采集到的数据。

00:10:59.640 --> 00:11:03.680
有了这些信息，
我们就可以做很多事情。

00:11:04.200 --> 00:11:08.430
我们能做的第一件也可能是最重要的事
非常简单：

00:11:08.430 --> 00:11:10.920
清点每株果树上果实的数量。

00:11:11.520 --> 00:11:16.020
这样，你就能告诉农民
每株果树上有多少果实，

00:11:16.020 --> 00:11:20.320
农民就能估算出果园的产量，

00:11:20.320 --> 00:11:23.200
并调整下游的生产链。

00:11:23.640 --> 00:11:25.240
我们能做的第二件事是

00:11:25.240 --> 00:11:29.750
给植物建构三维立体图，

00:11:29.750 --> 00:11:32.320
从而推算出树冠的尺寸，

00:11:32.320 --> 00:11:36.090
然后通过树冠尺寸推算出
每株植物的树叶面积。

00:11:36.090 --> 00:11:38.280
这被称为树叶面积指数。

00:11:38.280 --> 00:11:40.280
那么如果我们知道一棵树的
树叶面积指数，

00:11:40.280 --> 00:11:45.750
就能大概测算出这株果树
在进行多少光合作用，

00:11:45.750 --> 00:11:48.670
就能知道这株果树的健康状况。

00:11:49.520 --> 00:11:53.710
将视觉信息和红外线信息合起来，

00:11:53.710 --> 00:11:57.000
我们还能计算出一些指数，
例如常态化差值植生指数。

00:11:57.000 --> 00:11:59.870
在这个例子中，
你们可以明显看到

00:11:59.870 --> 00:12:02.800
有一些植物并不像其他植物那样健康。

00:12:02.800 --> 00:12:06.970
在图像中很容易识别，

00:12:06.970 --> 00:12:09.210
不仅是在视觉图像中，而是结合了

00:12:09.210 --> 00:12:12.040
视觉和红外线的图像中。

00:12:12.040 --> 00:12:13.400
最后，

00:12:13.400 --> 00:12:17.440
我们感兴趣的另一件事
是检测早期的植被萎黄病——

00:12:17.440 --> 00:12:18.950
这是一棵橘子树——

00:12:18.950 --> 00:12:21.560
你们可以看到泛黄的树叶。

00:12:21.880 --> 00:12:25.760
当机器人飞过这棵树的顶部
就能很快自主识别出来，

00:12:25.760 --> 00:12:28.736
然后报告农民
他/她遇到问题了，

00:12:28.740 --> 00:12:30.280
就在果园的这个区域。

00:12:30.800 --> 00:12:33.480
这样的系统真的非常实用，

00:12:33.480 --> 00:12:39.300
我们估计这能帮助农业产量提升10%，

00:12:39.300 --> 00:12:42.570
更重要的是，通过使用飞行器蜂群，

00:12:42.570 --> 00:12:45.880
水资源的用量能够降低25%。

00:12:47.200 --> 00:12:52.920
最后，我希望大家为创造未来的人们
致以热烈的掌声，

00:12:52.920 --> 00:12:57.870
Yash Mulgaonkar, Sikang Liu
和Giuseppe Loianno,

00:12:57.870 --> 00:13:01.350
你们看到的三次演示都是他们完成的。

00:13:01.350 --> 00:13:02.590
谢谢。

00:13:02.590 --> 00:13:06.670
（掌声）

