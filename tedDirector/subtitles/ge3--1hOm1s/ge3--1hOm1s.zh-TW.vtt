WEBVTT
Kind: captions
Language: zh-TW

00:00:00.000 --> 00:00:07.000
譯者: Songling Zhang
審譯者: Karen SONG

00:00:13.280 --> 00:00:16.936
在我的實驗室，我們製造
自動式飛行測量機器人，

00:00:16.960 --> 00:00:18.840
比如現在正在飛的這個。

00:00:20.720 --> 00:00:24.416
和那些可以在市場上
買到的飛行器不同的是，

00:00:24.440 --> 00:00:27.080
這個飛行器並沒有搭載全球定位系統（GPS）。

00:00:28.160 --> 00:00:29.376
沒有定位系統，

00:00:29.400 --> 00:00:32.680
飛行器很難確定它們自己所在的位置。

00:00:34.240 --> 00:00:38.976
這個飛行器自帶傳感器、
攝像機和激光掃描儀，

00:00:39.000 --> 00:00:40.696
用於掃描檢測周圍的環境。

00:00:40.720 --> 00:00:43.776
飛行器從周圍環境中探測物體，

00:00:43.800 --> 00:00:46.536
用三角測量法，

00:00:46.560 --> 00:00:48.696
確定自己和周圍物體的相對位置和距離。

00:00:48.720 --> 00:00:52.176
然後將這些物體整合到一張地圖中，

00:00:52.200 --> 00:00:53.936
像我身後展示的這樣。

00:00:53.960 --> 00:00:57.896
這個地圖可以使飛行器了解
那些外界物體的位置，

00:00:57.920 --> 00:01:00.640
從而在導航的時候避免碰撞。

00:01:01.160 --> 00:01:03.256
接下來我想展示給你們的

00:01:03.280 --> 00:01:06.496
是我們在實驗室中做的一系列實驗，

00:01:06.520 --> 00:01:10.000
在實驗室中飛行器可以進行長距離飛行。

00:01:10.400 --> 00:01:15.416
你們看，在右上方的位置，是飛行器
在攝像機中“看”到的場景，

00:01:15.440 --> 00:01:16.656
以及在主屏幕中的樣子，

00:01:16.680 --> 00:01:19.136
當然這個視頻是以4倍速度在播放，

00:01:19.160 --> 00:01:21.827
在主屏幕上你可以看到地圖的搭建進程。

00:01:21.851 --> 00:01:26.136
這是一個高分辨率的實驗室周圍走廊的地圖。

00:01:26.160 --> 00:01:28.496
馬上你們將看到飛行器飛入我們的實驗室，

00:01:28.520 --> 00:01:31.376
一看這麼亂就知道是我們實驗室。

00:01:31.400 --> 00:01:32.416
（笑聲）

00:01:32.440 --> 00:01:34.447
我想說的重點是，

00:01:34.472 --> 00:01:38.056
這些飛行器可以創建
高達5釐米*5釐米（每像素）的

00:01:38.080 --> 00:01:40.576
高分辨率地圖，

00:01:40.600 --> 00:01:44.776
可以使那些在實驗室外或者建築物外的人，

00:01:44.800 --> 00:01:48.016
不用進入內部就可以進行部署，

00:01:48.040 --> 00:01:51.800
並嘗試推斷建築物內部的事態情況。

00:01:52.400 --> 00:01:54.640
這些飛行器有一些主要的缺點。

00:01:55.600 --> 00:01:57.800
第一，它體積很大。

00:01:58.120 --> 00:01:59.800
因為它體積較大，所以比較重。

00:02:00.640 --> 00:02:03.680
這些飛行器消耗大概每磅消耗100瓦能量，

00:02:04.360 --> 00:02:06.640
這就使得它們只能執行短時間任務。

00:02:08.000 --> 00:02:09.456
第二個缺點，

00:02:09.480 --> 00:02:13.376
這些飛行器自帶的傳感器很昂貴：

00:02:13.400 --> 00:02:16.840
包括一個雷射光光掃描儀、一個攝像機，
還有多個處理器，

00:02:17.280 --> 00:02:20.320
這些都使得飛行器的製造成本上升。

00:02:21.440 --> 00:02:24.096
於是我們就問自己：

00:02:24.120 --> 00:02:27.896
什麼樣的產品是可以在電子商店裡買到的？

00:02:27.920 --> 00:02:34.200
那種價格不貴的、輕便，
並且自帶傳感器和處理器的......

00:02:36.080 --> 00:02:38.736
於是我們發明了“飛行手機”。

00:02:38.760 --> 00:02:40.696
（笑聲）

00:02:40.720 --> 00:02:46.896
這個飛行器搭載了一個
常見的三星智慧型手機，

00:02:46.920 --> 00:02:50.936
另外你只需要一個手機應用，
可以在我們的應用商店下載。

00:02:50.960 --> 00:02:55.176
你們可以看到這個飛行器
正在讀TED這幾個字母，

00:02:55.200 --> 00:02:58.136
它主要關注T和E這些字母的邊角，

00:02:58.160 --> 00:03:01.640
然後應用三角測量法自主飛行。

00:03:02.720 --> 00:03:05.976
那個手柄只是放在那，避免飛行器突然失控，

00:03:06.000 --> 00:03:07.416
Giuseppe同學就能廢了它。

00:03:07.440 --> 00:03:09.080
（笑聲）

00:03:10.920 --> 00:03:14.736
除了製作這些小飛行器之外，

00:03:14.760 --> 00:03:19.560
我們還實驗了一些比較激烈的動作。

00:03:19.920 --> 00:03:25.216
這個飛行器的當前速度是2到3米每秒，

00:03:25.240 --> 00:03:28.736
較為激烈地起落和翻滾。

00:03:28.760 --> 00:03:33.016
重點是，我們可以製作更小的飛行器，
它們飛得更快，

00:03:33.040 --> 00:03:36.000
它們可以在不規則的環境中飛行。

00:03:37.120 --> 00:03:39.176
在下一個視頻中，

00:03:39.200 --> 00:03:45.096
就像你看到的這隻鷹很優雅地扇動翅膀，

00:03:45.120 --> 00:03:49.416
和眼睛、爪子一起協調，從水中抓魚，

00:03:49.440 --> 00:03:51.336
我們的飛行器也能這麼抓魚。

00:03:51.360 --> 00:03:52.856
（笑聲）

00:03:52.880 --> 00:03:56.936
在這裡，它是從空氣中抓到一個
菲力芝士牛排三明治。

00:03:56.960 --> 00:03:59.360
（笑聲）

00:03:59.680 --> 00:04:02.976
這個飛行器大概每秒飛行3公尺，

00:04:03.000 --> 00:04:08.136
比我們步行速度更快，
它在瞬間協調了機械臂、機械爪

00:04:08.160 --> 00:04:12.280
和飛行動作來完成整個流程。

00:04:14.120 --> 00:04:15.336
在另一個實驗中，

00:04:15.360 --> 00:04:19.016
我將展示給各位這個飛行器如何自適應飛行，

00:04:19.040 --> 00:04:21.416
來控制它的懸掛負載。

00:04:21.440 --> 00:04:25.240
這個負載的長度比飛行器
要穿過的窗戶還要大。

00:04:25.680 --> 00:04:27.376
為了做到這一點，

00:04:27.400 --> 00:04:31.096
它必須利用起落來控制高度，

00:04:31.120 --> 00:04:33.440
並且通過擺動將負載擺過窗子。

00:04:38.920 --> 00:04:41.216
當然，我們想把這些飛行器變得更小。

00:04:41.240 --> 00:04:44.256
我們受到了蜜蜂的啟發。

00:04:44.280 --> 00:04:47.536
如果你仔細觀察蜜蜂，在這個慢速的視頻中，

00:04:47.560 --> 00:04:51.280
它們體積很小，慣性也很小，

00:04:51.960 --> 00:04:53.136
（笑聲）

00:04:53.160 --> 00:04:56.696
所以它們并不在意 - 比如說從我手上彈開。

00:04:56.720 --> 00:04:59.880
這是一個模仿蜜蜂動作的小型飛行器。

00:05:00.600 --> 00:05:01.816
越小越好。

00:05:01.840 --> 00:05:05.376
因為更小的體積會有更小的慣性。

00:05:05.400 --> 00:05:06.936
更小的慣性 --

00:05:06.960 --> 00:05:09.816
（飛行器蜂鳴，笑聲）

00:05:09.840 --> 00:05:12.656
更小的慣性，就更加不怕碰撞，

00:05:12.680 --> 00:05:14.400
這使飛行器更加強壯。

00:05:15.800 --> 00:05:18.456
所以就像這些蜜蜂一樣，
我們製造了小型飛行器。

00:05:18.480 --> 00:05:21.856
你們看到的這個只有25公克重，

00:05:21.880 --> 00:05:24.040
它只消耗6瓦能量。

00:05:24.440 --> 00:05:26.976
它可以每秒飛行6公尺。

00:05:27.000 --> 00:05:29.336
所以如果我把它的尺寸標準化，

00:05:29.360 --> 00:05:33.000
它就像是一架以10倍
音速飛行的波音787飛機。

00:05:36.000 --> 00:05:38.096
（笑聲）

00:05:38.120 --> 00:05:40.040
我還想給你們看一個例子。

00:05:40.840 --> 00:05:46.096
這可能是第一個計劃性的控制碰撞，
降速20倍播放。

00:05:46.120 --> 00:05:48.978
兩個飛行器以相對速度每秒2米飛行，

00:05:49.002 --> 00:05:51.482
這闡釋了基本原理。

00:05:52.200 --> 00:05:54.200
圍住飛行器的是碳纖維架，重2公克。
用於防止兩架飛行器的螺旋槳卷到一起。

00:05:57.200 --> 00:06:02.496
最終碰撞力量被吸收了，
飛行器也對碰撞有良好反應。

00:06:02.520 --> 00:06:05.080
所以小尺寸意味著高安全性。

00:06:05.400 --> 00:06:07.416
在我的實驗室中，
就像我們研發這些飛行器一樣，

00:06:07.440 --> 00:06:09.060
我們從研發大型飛行器開始。

00:06:09.084 --> 00:06:11.896
到現在我們研發這些小飛行器。

00:06:11.920 --> 00:06:15.376
如果用一個柱狀圖來記錄
我們買過的OK繃的數量，

00:06:15.400 --> 00:06:17.976
現在我們幾乎不需要買了。

00:06:18.000 --> 00:06:19.960
因為這些飛行器非常安全。

00:06:20.760 --> 00:06:23.216
小體積也有一些缺陷，

00:06:23.240 --> 00:06:27.320
但是自然界找到了很多方法來彌補這些缺點。

00:06:27.960 --> 00:06:31.960
最基本的概念是牠們
集合到一起組成大型的群族。

00:06:32.320 --> 00:06:36.296
所以同樣的在我們實驗室，
我們嘗試創建機器人（飛行器）群族。

00:06:36.320 --> 00:06:37.701
這並不容易，

00:06:37.725 --> 00:06:41.045
因為我們需要考慮飛行器的網絡操作。

00:06:41.360 --> 00:06:42.656
在每一個飛行器中，

00:06:42.680 --> 00:06:48.296
我們需要顧及到傳感、通訊
和計算的相互作用 --

00:06:48.320 --> 00:06:53.280
這個網絡結構非常難以控制和管理。

00:06:54.160 --> 00:06:57.456
所以我們從大自然中學習到三個組織原則，

00:06:57.480 --> 00:07:00.640
最終幫助我們完成了算法。

00:07:01.640 --> 00:07:06.176
第一個是，飛行器需要關注
附近的其他飛行器。

00:07:06.200 --> 00:07:09.640
它們要能夠探測到附近的
其他飛行器並與其進行通訊。

00:07:10.040 --> 00:07:12.696
這個視頻闡述了基本概念。

00:07:12.720 --> 00:07:14.016
有四台飛行器，

00:07:14.040 --> 00:07:18.280
其中一台被實驗員握在手中。

00:07:19.217 --> 00:07:21.456
但是因為每個飛行器都與其他飛行器有交互，

00:07:21.480 --> 00:07:23.136
它們能探測到彼此，

00:07:23.160 --> 00:07:24.456
就會跟隨實驗員手中的飛行器。

00:07:24.480 --> 00:07:29.840
所以這個實驗員能夠主導這一群飛行器。

00:07:32.000 --> 00:07:37.056
這並不是因為這些飛行器
知道它們該飛往哪裡。

00:07:37.080 --> 00:07:41.400
這隻是因為它們在對
彼此的位置進行交互和反饋。

00:07:43.720 --> 00:07:47.840
（笑聲）

00:07:48.280 --> 00:07:53.520
下一個實驗闡述了第二個自然組織法則。

00:07:54.920 --> 00:07:58.720
這個原則與匿名原則有關。

00:07:59.400 --> 00:08:03.696
重點在於，

00:08:03.720 --> 00:08:07.960
每個飛行器並不知道
附近其他飛行器的身份。

00:08:08.440 --> 00:08:11.056
這些飛行器被要求組成一個圓形陣列，

00:08:11.080 --> 00:08:14.376
不管你增加多少飛行器進去，

00:08:14.400 --> 00:08:16.976
或者拿開多少飛行器，

00:08:17.000 --> 00:08:20.136
每個飛行器都只是在跟附近的飛行器交互。

00:08:20.160 --> 00:08:25.136
它們知道它們需要組成圓陣，

00:08:25.160 --> 00:08:26.936
與其他飛行器進行配合，

00:08:26.960 --> 00:08:30.680
這個過程並不需要中樞協調。

00:08:31.520 --> 00:08:33.936
現在如果我們綜合來看，

00:08:33.960 --> 00:08:37.856
第三個原則是我們最終應用到飛行器上的，

00:08:37.880 --> 00:08:42.176
用數學來描述它們需要組成的陣列形狀。

00:08:42.200 --> 00:08:45.696
這些形狀可以根據一個時間函數進行變化，

00:08:45.720 --> 00:08:50.216
我們會看到這些飛行器從一個圓形陣列開始，

00:08:50.240 --> 00:08:53.496
接著變為長方形陣，然後是一條直線，

00:08:53.520 --> 00:08:54.895
最後變回橢圓形陣。

00:08:54.919 --> 00:08:58.536
它們同樣是瞬間協調來完成這些動作，

00:08:58.560 --> 00:09:01.840
就像自然界的群族一樣。

00:09:03.080 --> 00:09:05.216
那麼為什麼要模仿群族呢？

00:09:05.240 --> 00:09:09.360
我們對兩方面的應用很感興趣。

00:09:10.160 --> 00:09:12.536
首先是農業，

00:09:12.560 --> 00:09:15.920
這可能是世界範圍內最嚴峻的問題。

00:09:16.760 --> 00:09:18.016
你們都知道，

00:09:18.040 --> 00:09:21.560
世界上每七個人中就有一個人營養不良。

00:09:21.920 --> 00:09:25.400
絕大部分可用耕地都已經被開墾耕種。

00:09:25.960 --> 00:09:29.176
世界上大多數系統的效率都在提升，

00:09:29.200 --> 00:09:32.720
但是我們生產系統的效率卻在降低。

00:09:33.080 --> 00:09:37.296
這主要是由於水資源缺乏、
農作物疾病和氣候變化，

00:09:37.320 --> 00:09:38.840
和其他的一些原因。

00:09:39.360 --> 00:09:40.840
那麼機器人能做些什麼呢？

00:09:41.200 --> 00:09:45.816
我們在社區中採用了一種
叫做“精確種植”的方法。

00:09:45.840 --> 00:09:51.216
基本思路是用機器人飛行器在果園中飛行，

00:09:51.240 --> 00:09:54.360
為每一棵農作物搭建精確的模型。

00:09:54.829 --> 00:09:56.496
就像個體化用藥一樣，

00:09:56.520 --> 00:10:01.336
對每個病人要對症下藥，

00:10:01.360 --> 00:10:05.056
我們所做的是給每一棵農作物創建模型，

00:10:05.080 --> 00:10:09.216
並告訴農民每一棵農作物分別需要什麼：

00:10:09.240 --> 00:10:13.680
可能是水、也可能是化肥或者殺蟲劑。

00:10:14.640 --> 00:10:18.256
你們可以看到飛行器正在蘋果園中穿行，

00:10:18.280 --> 00:10:20.536
馬上你們還會看到另外兩台飛行器，

00:10:20.560 --> 00:10:22.370
正在左邊做同樣的工作。

00:10:22.800 --> 00:10:26.456
它們正在創建果園的地圖

00:10:26.480 --> 00:10:29.296
每一棵果樹都將呈現在地圖上。

00:10:29.320 --> 00:10:30.976
（飛行器蜂鳴）

00:10:31.000 --> 00:10:32.896
我們來看看這些地圖吧。

00:10:32.920 --> 00:10:37.216
下一個視頻中你們將看到搭載在飛行器上的攝像機。

00:10:37.240 --> 00:10:40.480
左上方是一個高級彩色攝像機

00:10:41.640 --> 00:10:44.936
中間的是一個紅外線攝像機。

00:10:44.960 --> 00:10:48.736
左下方是一個熱感攝像機。

00:10:48.760 --> 00:10:52.096
當飛行器在飛過果樹時由傳感器採集數據，

00:10:52.120 --> 00:10:58.240
在主面板上你將看到每一棵果樹的三維重建。

00:10:59.640 --> 00:11:03.680
有了這些數據，我們可以做一些研究。

00:11:04.200 --> 00:11:08.456
我們能做的第一件事
也是最重要的事很簡單：

00:11:08.480 --> 00:11:10.920
計算每一棵果樹上果實的數量。

00:11:11.520 --> 00:11:16.056
有了這個，我們可以告訴農民
她的每一棵果樹上都有多少果子，

00:11:16.080 --> 00:11:20.336
由她來估算整個果園的產量，

00:11:20.360 --> 00:11:23.200
從而優化下游產業鏈。

00:11:23.640 --> 00:11:25.256
我們能做的第二件事，

00:11:25.280 --> 00:11:29.776
是對果樹建模，進行三維重建，

00:11:29.800 --> 00:11:32.336
從而估算樹冠的大小，

00:11:32.360 --> 00:11:36.136
將每一棵果樹的樹冠尺寸和樹葉面積做關聯。

00:11:36.160 --> 00:11:38.336
這被稱作是“葉面積指數”。

00:11:38.360 --> 00:11:40.296
如果我們知道一棵樹的葉面積指數，

00:11:40.320 --> 00:11:45.776
就能大概知道這棵果樹在進行多少光合作用，

00:11:45.800 --> 00:11:48.680
於是就能得知這棵果樹是否健康。

00:11:49.520 --> 00:11:53.736
將視覺信息和紅外信息整合起來，

00:11:53.760 --> 00:11:57.056
我們就能計算一些指數，
例如歸一化植被指數（NDVI）。

00:11:57.080 --> 00:11:59.896
在我們的這個案例中，能夠看到，

00:11:59.920 --> 00:12:02.936
有一些作物並不像其他作物那樣健康。

00:12:02.960 --> 00:12:07.016
這在圖像中是很容易辨別的。

00:12:07.040 --> 00:12:09.256
不是在視覺圖像中，而是在

00:12:09.280 --> 00:12:12.056
視覺和紅外線合成的圖像中。

00:12:12.080 --> 00:12:13.416
最後，

00:12:13.440 --> 00:12:17.456
我們很想做的一件事是，
檢測早期的樹葉萎黃病。

00:12:17.480 --> 00:12:18.976
這是一顆橘子樹，

00:12:19.000 --> 00:12:21.560
可以看到泛黃的樹葉。

00:12:21.880 --> 00:12:25.776
飛行器在上空飛行的時候可以
輕易地自動檢測到這一現象，

00:12:25.800 --> 00:12:28.736
然後向農民報告，在果園中的這一區域

00:12:28.760 --> 00:12:30.280
出現了問題。

00:12:30.800 --> 00:12:33.496
這個系統對農業生產非常有用，

00:12:33.520 --> 00:12:39.336
我們估計農業產量將會上升10%，

00:12:39.360 --> 00:12:42.576
更重要的是，通過使用飛行器群族，

00:12:42.600 --> 00:12:45.880
降低25%的水資源用量。

00:12:47.200 --> 00:12:52.936
最後，我希望大家向創造了
未來的人們致以掌聲，

00:12:52.960 --> 00:12:57.880
Yash Mulgaonkar， Sikang Liu
和 Giuseppe Loianno，

00:12:57.920 --> 00:13:01.416
他們負責你們看到的三次演示。

00:13:01.440 --> 00:13:02.616
謝謝！

00:13:02.640 --> 00:13:08.560
（掌聲）

