WEBVTT
Kind: captions
Language: ko

00:00:00.000 --> 00:00:07.000
번역: Jihyeon J. Kim
검토: Gemma Lee

00:00:13.280 --> 00:00:19.086
제 연구실은 여기 날아다니는 것처럼
자동 비행 로봇을 만듭니다.

00:00:20.720 --> 00:00:24.416
오늘날 구매할 수 있는 
상업용 드론과는 달리

00:00:24.440 --> 00:00:27.080
이 로봇은 GPS를 
탑재하고 있지 않습니다.

00:00:28.160 --> 00:00:29.376
GPS없이는

00:00:29.400 --> 00:00:32.680
이런 로봇이 자신의 위치를 
파악하기 힘듭니다.

00:00:34.240 --> 00:00:38.930
이 로봇은 자체 센서와 카메라, 
레이저 스캐너를 가지고

00:00:38.930 --> 00:00:40.670
주변 환경을 탐색합니다.

00:00:40.670 --> 00:00:43.760
환경의 특이사항들을 탐지하고

00:00:43.760 --> 00:00:46.510
그 사항들이 관련있는 곳에서

00:00:46.510 --> 00:00:48.696
삼각측량법을 이용해서 결정합니다.

00:00:48.700 --> 00:00:52.160
그러고 나서 이 특징들을 
뒤에 보시는 것 같은

00:00:52.160 --> 00:00:53.936
지도로 조합할 수 있습니다.

00:00:53.940 --> 00:00:57.860
이 지도는 로봇이 
장애물의 위치를 알아서

00:00:57.860 --> 00:01:00.640
충돌없이 날아다닐 수 있게 합니다.

00:01:01.160 --> 00:01:03.220
다음에 보여 드리고 싶은 것은

00:01:03.220 --> 00:01:06.470
연구실에서 진행했던 몇 가지 실험인데

00:01:06.470 --> 00:01:10.000
이 로봇이 장거리 비행을 
할 수 있는 겁니다.

00:01:10.400 --> 00:01:15.390
보시면 오른쪽 맨 위에 로봇이 
카메라로 보는 것입니다.

00:01:15.390 --> 00:01:19.156
주 화면에는 이건 
4배속으로 돌린 겁니다.

00:01:19.160 --> 00:01:21.811
주 화면에 지도를 
만드는 것이 보입니다.

00:01:21.811 --> 00:01:26.090
이것은 저희 연구실 
복도의 고화질 지도입니다.

00:01:26.090 --> 00:01:28.470
이것이 곧 연구실로 
들어오는게 보일 겁니다.

00:01:28.470 --> 00:01:31.330
어지럽게 널린 물건들을 보고
알 수 있으시죠.

00:01:31.330 --> 00:01:32.410
(웃음)

00:01:32.410 --> 00:01:34.392
여러분께 알려드릴 중요한 점은

00:01:34.392 --> 00:01:40.570
이 로봇들이 5cm 해상도의
고화질 지도를 만들어서

00:01:40.570 --> 00:01:44.770
연구실이나 건물 밖에 있는 사람이

00:01:44.770 --> 00:01:47.980
안에 들어가지도 않고 로봇을 보내고

00:01:47.980 --> 00:01:51.800
건물 안에서 벌어지는 
일을 알아내게 해 줍니다.

00:01:52.400 --> 00:01:54.640
이런 로봇에 한 가지 문제가 있습니다.

00:01:55.600 --> 00:01:57.800
첫 번째 문제는 이것이 매우 큽니다.

00:01:58.120 --> 00:01:59.800
크다보니 무겁습니다.

00:02:00.640 --> 00:02:03.680
이 로봇들은 1파운드 당 
100와트를 소모합니다.

00:02:04.360 --> 00:02:06.640
그래서 임무수행 시간이 매우 짧습니다.

00:02:08.000 --> 00:02:09.450
두 번째 문제는

00:02:09.450 --> 00:02:13.350
이 로봇들이 매우 비싼 데

00:02:13.350 --> 00:02:16.840
내장 센서, 레이저 스캐너, 
카메라와 처리장치가 있습니다.

00:02:17.280 --> 00:02:20.320
그것 때문에 이 로봇가격이 치솟습니다.

00:02:21.440 --> 00:02:24.070
그래서 이런 질문을 해 봤습니다.

00:02:24.070 --> 00:02:27.880
전자제품 매장의 어떤 소비재가

00:02:27.880 --> 00:02:34.200
저렴하고, 가벼우며 내장 
센서와 처리장치가 있을까요?

00:02:36.080 --> 00:02:38.720
그래서 저희가 날아다니는 
전화를 발명했습니다.

00:02:38.720 --> 00:02:40.680
(웃음)

00:02:40.680 --> 00:02:46.870
이 로봇은 매장에서 구입할 수 있는 
삼성 갤럭시 스마트폰을 썼고

00:02:46.870 --> 00:02:50.910
앱스토어에서 앱을 다운로드 
하기만 하면 됩니다.

00:02:50.910 --> 00:02:55.150
로봇이 글자도 인식합니다. 
여기서는 "TED"를 읽죠.

00:02:55.150 --> 00:02:58.100
T와 E의 가장자리를 보며

00:02:58.100 --> 00:03:01.640
자동비행을 하며 삼각측량을 합니다.

00:03:02.720 --> 00:03:05.950
조이스틱이 로봇이 마구 
움직이지 않게 조정합니다.

00:03:05.950 --> 00:03:07.410
쥬세페가 로봇을 끌 수 있죠.

00:03:07.410 --> 00:03:09.080
(웃음)

00:03:10.920 --> 00:03:14.736
이러한 작은 로봇을 제작함과 더불어

00:03:14.740 --> 00:03:19.560
여기서 보시는 이런 
역동적인 행동도 실험합니다.

00:03:19.920 --> 00:03:25.200
이 로봇은 초당 2-3m로 움직이며

00:03:25.200 --> 00:03:28.710
방향을 바꿀 때 공격적으로 
올라가거나 돕니다.

00:03:28.710 --> 00:03:33.000
요점은 더 빨리 갈 수 있고 비구조화된 
환경에서 움직일 수 있는

00:03:33.000 --> 00:03:36.000
더 작은 로봇을 가질 수 
있다는 겁니다.

00:03:37.120 --> 00:03:39.176
다음 영상에서는

00:03:39.180 --> 00:03:45.090
새나 독수리가 우아하게 날개와

00:03:45.090 --> 00:03:49.400
눈, 다리를 조정해서 물 밖으로 
먹이를 잡아 채는 걸 보시듯이

00:03:49.400 --> 00:03:51.300
우리 로봇도 낚시를 할 수 있습니다.

00:03:51.300 --> 00:03:52.830
(웃음)

00:03:52.830 --> 00:03:56.910
이 경우에는 갑자기 필리 
치즈스테이크를 낚아 챕니다.

00:03:56.910 --> 00:03:59.360
(웃음)

00:03:59.680 --> 00:04:02.960
이 로봇이 초당 3m로 
움직이는 걸 보시는데

00:04:02.960 --> 00:04:08.110
걷는 속도보다 빠르며 
팔, 발톱과 비행을

00:04:08.110 --> 00:04:12.280
눈 깜짝할 사이에 조정해서 
이렇게 하는 겁니다.

00:04:14.120 --> 00:04:15.320
다른 실험에서는

00:04:15.320 --> 00:04:19.000
로봇이 비행을 어떻게 조절하여

00:04:19.000 --> 00:04:21.410
부유 하중을 통제하는 지 
보여드리겠습니다.

00:04:21.410 --> 00:04:25.240
창 넓이보다 실제로 더 큰 길이입니다.

00:04:25.680 --> 00:04:27.330
이렇게 하기 위해서

00:04:27.330 --> 00:04:31.060
고도를 높이고 조절하여

00:04:31.060 --> 00:04:33.440
적재 하중을 흔들어 통과합니다.

00:04:38.920 --> 00:04:41.180
물론 이것을 더욱 작게 하고 싶어서

00:04:41.180 --> 00:04:44.240
특히 꿀벌에서 영감을 받았습니다.

00:04:44.240 --> 00:04:47.510
이것은 느린 영상인데, 꿀벌을 보시면

00:04:47.510 --> 00:04:51.280
아주 작은데 관성이 매우 가벼워서

00:04:51.960 --> 00:04:53.110
(웃음)

00:04:53.110 --> 00:04:56.640
가령 제 손에 튕겨도 
신경도 안 씁니다.

00:04:56.640 --> 00:04:59.880
이것은 꿀벌의 행동을 
흉내내는 소형 로봇입니다.

00:05:00.600 --> 00:05:01.760
작을수록 더 좋은 것이

00:05:01.760 --> 00:05:05.340
이렇게 소규모로 하면 
관성이 더 낮아집니다.

00:05:05.340 --> 00:05:06.920
관성이 낮아지면 --

00:05:06.920 --> 00:05:09.800
(윙윙거리는 로봇) (웃음)

00:05:09.800 --> 00:05:12.650
관성이 낮아지면, 
충돌에 저항력이 있습니다.

00:05:12.650 --> 00:05:14.400
그것이 더욱 튼튼하게 해 줍니다.

00:05:15.800 --> 00:05:18.420
저희는 꿀벌같은 소형 로봇을 만듭니다.

00:05:18.420 --> 00:05:21.840
특히 이것은 25g밖에 안 됩니다.

00:05:21.840 --> 00:05:24.040
전력도 6와트만 소모하지요.

00:05:24.440 --> 00:05:26.960
초당 6m까지 움직일 수 있습니다.

00:05:26.960 --> 00:05:29.320
제가 이것을 이 크기에 표준화시키면

00:05:29.320 --> 00:05:33.000
보잉787이 음속의 10배로 
나는 것과 같습니다.

00:05:36.000 --> 00:05:38.070
(웃음)

00:05:38.070 --> 00:05:40.040
제가 예시를 보여드리겠습니다.

00:05:40.840 --> 00:05:46.080
이것이 최초의 계획된 공중 
충돌일텐데요, 1/20 표준속입니다.

00:05:46.080 --> 00:05:48.942
초당 2m의 상대속으로 갑니다.

00:05:48.942 --> 00:05:51.482
이것이 기본 원리를 잘 설명해 줍니다.

00:05:52.200 --> 00:05:57.170
2g짜리 탄소섬유로 두르면 
프로펠러가 엉키는 걸 방지하지만

00:05:57.170 --> 00:06:02.460
기본적으로 충돌이 흡수되고 
로봇이 충돌에 반응합니다.

00:06:02.460 --> 00:06:05.080
매우 작다는 건 또한 
안전하다는 뜻입니다.

00:06:05.400 --> 00:06:07.410
제 연구실에서 이 로봇을 개발했을 때

00:06:07.410 --> 00:06:09.044
이런 대형 로봇도 시작했고

00:06:09.044 --> 00:06:11.880
지금은 이런 소형 로봇에 매진합니다.

00:06:11.880 --> 00:06:15.360
저희가 과거에 주문한 
반창고 수를 그래프로 그리면

00:06:15.360 --> 00:06:17.950
지금은 그래프가 차차 감소했을 겁니다.

00:06:17.950 --> 00:06:19.960
이 로봇이 매우 안전하기 때문입니다.

00:06:20.760 --> 00:06:23.216
소형 크기는 단점이 있습니다.

00:06:23.220 --> 00:06:27.320
자연은 이런 단점들을 여러가지 
방법으로 보상할 방법을 찾았죠.

00:06:27.960 --> 00:06:31.960
기본적인 원리는 큰 집단, 
또는 떼를 짓는 겁니다.

00:06:32.320 --> 00:06:36.270
연구실에서 비슷하게 인공적인 
로봇 떼를 만들어 봤습니다.

00:06:36.270 --> 00:06:37.665
이건 매우 힘들었는데

00:06:37.665 --> 00:06:41.045
로봇의 연결망을 
생각해야 했기 때문입니다.

00:06:41.360 --> 00:06:42.640
각각의 로봇 안에서

00:06:42.640 --> 00:06:48.260
감지, 의사소통, 신호처리의 
상호작용을 생각해야 하는데

00:06:48.260 --> 00:06:53.280
이 연결망은 통제 관리가 
매우 어렵게 됩니다.

00:06:54.160 --> 00:07:00.460
그래서 자연에서 필수적으로 알고리즘을 
짜게 한 세 가지 조직 원리를 뽑았습니다.

00:07:01.640 --> 00:07:06.160
첫 번째 원리는 로봇이 근접한 
로봇을 인지해야 하는 겁니다.

00:07:06.160 --> 00:07:09.640
다른 로봇들을 인식하고 
소통할 수 있어야 합니다.

00:07:10.040 --> 00:07:12.670
이 영상은 그 기본 원리를 보여줍니다.

00:07:12.670 --> 00:07:13.990
로봇이 네 대가 있습니다.

00:07:13.990 --> 00:07:18.280
한 로봇이 인간 조종사에게 
그야 말로 납치되었습니다.

00:07:19.217 --> 00:07:21.456
그러나 로봇이 서로 상호작용하기 때문에

00:07:21.460 --> 00:07:24.430
다른 로봇을 감지하고 
기본적으로 따라갑니다.

00:07:24.430 --> 00:07:29.840
여기 한 명이 이 추종로봇의 
연결망을 주도합니다.

00:07:32.000 --> 00:07:37.050
다시 말하면 모든 로봇이 
어디로 갈지 알기 때문이 아니라

00:07:37.050 --> 00:07:41.400
근접 로봇들의 위치에 
그저 반응하기 때문인 겁니다.

00:07:43.720 --> 00:07:47.840
(웃음)

00:07:48.280 --> 00:07:53.520
다음 실험은 두 번째 
조직 원리를 보여줍니다.

00:07:54.920 --> 00:07:58.720
이 원리는 익명의 
원리와 관계가 있습니다.

00:07:59.400 --> 00:08:03.660
중심 생각은

00:08:03.660 --> 00:08:07.960
로봇들이 다른 로봇의 
정체를 모른다는 것이죠.

00:08:08.440 --> 00:08:11.030
이들이 원형을 만들도록 명령 받으면

00:08:11.030 --> 00:08:14.350
이 과정에 몇 개의 로봇을 투입하거나

00:08:14.350 --> 00:08:16.950
몇 개를 빼든지

00:08:16.950 --> 00:08:20.110
각 로봇은 단지 다른 로봇에 반응합니다.

00:08:20.110 --> 00:08:25.130
원형을 만들어야 하는 사실을 인지하지만

00:08:25.130 --> 00:08:26.930
다른 로봇과 협력하여

00:08:26.930 --> 00:08:30.680
중앙 통제가 없이 모양을 형성합니다.

00:08:31.520 --> 00:08:33.890
이 생각들을 한데 모으면

00:08:33.890 --> 00:08:37.830
세 번째 생각이 기본적으로 
저희는 이 로봇들에게

00:08:37.830 --> 00:08:42.140
실행해야 할 모양의 
수학적 설명을 주는 겁니다.

00:08:42.140 --> 00:08:45.670
이런 모양은 시간의 
함수에 따라 다를 수 있는데

00:08:45.670 --> 00:08:50.190
이 로봇들이 원형으로 움직이기 시작하고

00:08:50.190 --> 00:08:53.470
직사각형 모양으로 
바뀌고 직선으로 쭉 뻗어

00:08:53.470 --> 00:08:54.879
타원형으로 다시 
돌아가는 게 보이실 겁니다.

00:08:54.879 --> 00:08:58.530
로봇들이 순간적인 조정으로 하는 것인데

00:08:58.530 --> 00:09:01.840
자연에서 보는 벌떼와 같은 것이죠.

00:09:03.080 --> 00:09:05.190
왜 떼로 작업하느냐고요?

00:09:05.190 --> 00:09:09.360
저희가 매우 흥미를 갖고 있는 두 가지 
응용방법을 말씀드리겠습니다.

00:09:10.160 --> 00:09:12.530
첫 번째는 농업과 관련되어 있는데

00:09:12.530 --> 00:09:15.920
전 세계적으로 우리가 
당면한 최대의 문제일 겁니다.

00:09:16.760 --> 00:09:18.000
여러분이 잘 아시듯이

00:09:18.000 --> 00:09:21.560
지구상에 7명 중 
한 명이 영양실조입니다.

00:09:21.920 --> 00:09:25.400
경작할 수 있는 땅은 
다 농사짓고 있습니다.

00:09:25.960 --> 00:09:29.140
세계의 대부분 시스템의 
효율성이 향상되고 있지만

00:09:29.140 --> 00:09:32.720
생산 시스템의 효율성은 
실제로 감소하고 있습니다.

00:09:33.080 --> 00:09:37.270
대부분 물 부족, 작물 병, 기후 변화와

00:09:37.270 --> 00:09:38.840
다른 몇 가지들 때문입니다.

00:09:39.360 --> 00:09:40.840
로봇이 무엇을 할 수 있을까요?

00:09:41.200 --> 00:09:45.790
농업계에는 정밀 농법이라고 
하는 방법을 채택합니다.

00:09:45.790 --> 00:09:51.180
기본 원리는 과수원에 로봇을 비행시켜서

00:09:51.180 --> 00:09:54.360
각 작물의 정밀한 
모형을 구축하는 겁니다.

00:09:54.829 --> 00:09:56.460
마치 개인별 맞춤 의학처럼

00:09:56.460 --> 00:10:01.320
개별 환자들을 모두 다르게 
치료하는 것을 상상하시는 것 처럼

00:10:01.320 --> 00:10:05.040
저희가 하고 싶은 것이 
개별 작물의 모형을 만들어서

00:10:05.040 --> 00:10:09.190
농부에게 각 작물이 필요한 
사항을 알려주는 겁니다.

00:10:09.190 --> 00:10:13.680
이 경우에는 물, 비료,
농약을 주는 것이죠.

00:10:14.640 --> 00:10:18.210
여기 보시면 사과 농장을 
비행하는 로봇이 보이는데

00:10:18.210 --> 00:10:20.480
잠시 후에 두 대의 동료 로봇이

00:10:20.480 --> 00:10:22.370
왼쪽에서 같은 일을 하고 
있는게 보일 겁니다.

00:10:22.800 --> 00:10:26.420
이 로봇이 하는 일은 기본적으로 
과수원의 지도를 제작하는 겁니다.

00:10:26.420 --> 00:10:29.270
지도 안에는 과수원의 
모든 작불이 들어 갑니다.

00:10:29.270 --> 00:10:30.940
(윙윙거리는 로봇)

00:10:30.940 --> 00:10:32.890
그 지도가 어떻게 생겼는지 보겠습니다.

00:10:32.890 --> 00:10:37.200
다음 영상에서 이 로봇에 
쓰이는 카메라가 보입니다.

00:10:37.200 --> 00:10:40.480
맨 위 왼쪽에 뛰어난 
컬러 카메라가 있습니다.

00:10:41.640 --> 00:10:44.900
왼쪽 중앙에는 적외선 
카메라가 있습니다.

00:10:44.900 --> 00:10:48.700
아래 왼쪽에는 온도감지 카메라가 있죠.

00:10:48.700 --> 00:10:52.060
주 패널에는 3차원으로 과수원의 모든 
나무가 재구성된 것을 보고 계십니다.

00:10:52.060 --> 00:10:58.240
센서가 나무 사이를 
비행하면서 생긴 것이죠.

00:10:59.640 --> 00:11:03.680
이런 정보를 갖추고 있으면 
몇 가지를 할 수 있습니다.

00:11:04.200 --> 00:11:08.430
가장 중요한 첫 번째는 
매우 단순합니다.

00:11:08.430 --> 00:11:10.920
모든 나무의 열매를 세는 겁니다.

00:11:11.520 --> 00:11:16.010
이렇게 하면 농부에게 
모든 나무의 열매 수를 알려주고

00:11:16.010 --> 00:11:20.290
과수원의 수확량을 추정하게 해 줘서

00:11:20.290 --> 00:11:23.200
생산과정을 최적화 하게 해 줍니다.

00:11:23.640 --> 00:11:25.220
두 번째로 할 수 있는 일은

00:11:25.220 --> 00:11:29.750
작물의 모형을 따서 
3차원으로 재구성하고

00:11:29.750 --> 00:11:32.290
덮개 크기 추정치로

00:11:32.290 --> 00:11:36.110
모든 작물의 잎 개수와 덮개 크기의 
상관관계를 알아 보는 겁니다.

00:11:36.110 --> 00:11:38.300
이것은 잎사귀 지표라고 합니다.

00:11:38.300 --> 00:11:40.260
이런 잎사귀 지표를 아신다면

00:11:40.260 --> 00:11:45.740
모든 작물의 가능한 광합성 
수치를 측정하는 것이고

00:11:45.740 --> 00:11:48.680
그럼 각 나무의 건강정도를 
알 수 있는 겁니다.

00:11:49.520 --> 00:11:53.710
시각 정보와 적외선 정보를 결합하면

00:11:53.710 --> 00:11:57.000
NDVI같은 지표를 
계산해 낼 수 있습니다.

00:11:57.000 --> 00:11:59.870
특히 이 경우에는 실제로

00:11:59.870 --> 00:12:02.910
다른 작물만큼 좋지 않은 
작물이 있음을 알 수 있죠.

00:12:02.910 --> 00:12:06.980
이미지를 통해 쉽게 
구별할 수 있습니다.

00:12:06.980 --> 00:12:09.230
그저 시각 이미지가 아니라

00:12:09.230 --> 00:12:12.030
시각과 적외선 이미지를 
결합하는 것이죠.

00:12:12.030 --> 00:12:13.380
마지막으로

00:12:13.380 --> 00:12:17.440
저희가 흥미를 갖고 있는 것이 
백화 초기상태를 탐지하는 겁니다.

00:12:17.440 --> 00:12:18.930
이것은 오렌지 나무인데

00:12:18.930 --> 00:12:21.560
잎이 황색으로 보이시죠.

00:12:21.880 --> 00:12:25.750
하지만 로봇이 위에서 
비행하면 쉽게 발견하고

00:12:25.750 --> 00:12:28.736
농부에게

00:12:28.740 --> 00:12:30.280
과수원의 어느 부분에 
문제가 있는지 보고합니다.

00:12:30.800 --> 00:12:33.440
이런 시스템은 정말 도움이 되는데

00:12:33.440 --> 00:12:39.290
약 10% 정도 수확량을 향상시킬 
것으로 전망하고 있습니다.

00:12:39.290 --> 00:12:42.570
더욱 중요한 것은 물을 주는 것을

00:12:42.570 --> 00:12:45.880
로봇 떼를 이용하면 
25%정도 절감할 수 있습니다.

00:12:47.200 --> 00:12:52.910
마지막으로 실제로 미래를 만들고 있는 
분들에게 박수를 보내셨으면 좋겠습니다.

00:12:52.910 --> 00:12:57.830
야쉬 물가온카, 시캉 리유와 
쥬세페 로이아노가

00:12:57.830 --> 00:13:01.400
보셨던 세 가지 시범을 
담당해 주셨습니다.

00:13:01.400 --> 00:13:02.610
감사합니다.

00:13:02.610 --> 00:13:08.560
(박수)

