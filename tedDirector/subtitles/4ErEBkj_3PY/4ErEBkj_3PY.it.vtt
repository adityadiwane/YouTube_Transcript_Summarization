WEBVTT
Kind: captions
Language: it

00:00:00.000 --> 00:00:07.000
Traduttore: Daniele Buratti
Revisore: Ana María Pérez

00:00:20.260 --> 00:00:22.260
Buongiorno.

00:00:22.260 --> 00:00:24.260
Oggi mi trovo qui per parlarvi

00:00:24.260 --> 00:00:27.260
di palloni da spiaggia che volano da soli.

00:00:27.260 --> 00:00:31.260
Scherzo, si tratta di agili robot volanti come questo.

00:00:31.260 --> 00:00:34.260
Vorrei dirvi delle difficoltà che abbiamo affrontato per costruirli,

00:00:34.260 --> 00:00:36.260
e di alcune delle incredibili opportunità

00:00:36.260 --> 00:00:38.260
che questa tecnologia offre.

00:00:38.260 --> 00:00:40.260
Questi robot

00:00:40.260 --> 00:00:43.260
sono come gli aeromobili a pilotaggio remoto,

00:00:43.260 --> 00:00:46.260
solo che questi ultimi sono molto grandi,

00:00:46.260 --> 00:00:48.260
pesano qualche tonnellata

00:00:48.260 --> 00:00:50.260
e non sono affatto agili.

00:00:50.260 --> 00:00:52.260
Non sono nemmeno autonomi.

00:00:52.260 --> 00:00:54.260
Infatti molti di questi velivoli

00:00:54.260 --> 00:00:56.260
sono gestiti da personale a terra,

00:00:56.260 --> 00:00:59.260
tra cui diversi piloti,

00:00:59.260 --> 00:01:01.260
operatori di sensori

00:01:01.260 --> 00:01:03.260
e coordinatori di missione.

00:01:03.260 --> 00:01:05.260
Quello che a noi interessa nello sviluppare i nostri robot -

00:01:05.260 --> 00:01:07.260
ecco qui due immagini -

00:01:07.260 --> 00:01:10.260
è di poterli vendere direttamente in negozio.

00:01:10.260 --> 00:01:13.260
Qui vediamo degli elicotteri a quattro rotori,

00:01:13.260 --> 00:01:17.260
lunghi circa un metro

00:01:17.260 --> 00:01:19.260
e dal peso di qualche chilo.

00:01:19.260 --> 00:01:22.260
Abbiamo aggiunto sensori e processori

00:01:22.260 --> 00:01:24.260
per farli volare all'interno di edifici

00:01:24.260 --> 00:01:26.260
senza l'aiuto del GPS.

00:01:26.260 --> 00:01:28.260
Il robot che sto tenendo in mano

00:01:28.260 --> 00:01:30.260
è proprio questo;

00:01:30.260 --> 00:01:33.260
è stato realizzato da due studenti,

00:01:33.260 --> 00:01:35.260
Alex e Daniel.

00:01:35.260 --> 00:01:37.260
Pesa circa

00:01:37.260 --> 00:01:39.260
mezzo etto

00:01:39.260 --> 00:01:41.260
e consuma intorno ai 15 watt di corrente.

00:01:41.260 --> 00:01:43.260
Come potete vedere,

00:01:43.260 --> 00:01:45.260
ha un diametro di circa 20 centimetri.

00:01:45.260 --> 00:01:48.260
Ora vi farò una breve dimostrazione

00:01:48.260 --> 00:01:50.260
del funzionamento del robot.

00:01:50.260 --> 00:01:52.260
Ha quattro rotori.

00:01:52.260 --> 00:01:54.260
Se li fate girare alla stessa velocità

00:01:54.260 --> 00:01:56.260
il robot rimane sospeso.

00:01:56.260 --> 00:01:59.260
Se ne aumentate la velocità

00:01:59.260 --> 00:02:02.260
si alza in verticale.

00:02:02.260 --> 00:02:04.260
Naturalmente se il robot si trova

00:02:04.260 --> 00:02:06.260
in posizione orizzontale,

00:02:06.260 --> 00:02:09.260
l'accelerazione avverrà in quella direzione.

00:02:09.260 --> 00:02:12.260
Per farlo piegare da un lato, ecco il primo modo per farlo.

00:02:12.260 --> 00:02:14.260
In questa immagine

00:02:14.260 --> 00:02:16.260
vedete che il rotore 4 gira più velocemente

00:02:16.260 --> 00:02:18.260
mentre il 2 è più lento.

00:02:18.260 --> 00:02:20.260
In questo caso

00:02:20.260 --> 00:02:23.260
si crea un momento che fa inclinare il robot.

00:02:23.260 --> 00:02:25.260
Allo stesso modo,

00:02:25.260 --> 00:02:28.260
se si aumenta la velocità del rotore tre

00:02:28.260 --> 00:02:30.260
e si riduce quella del rotore uno,

00:02:30.260 --> 00:02:33.260
il robot si sposta in avanti.

00:02:33.260 --> 00:02:35.260
Ed infine,

00:02:35.260 --> 00:02:37.260
se si fanno girare più velocemente

00:02:37.260 --> 00:02:39.260
coppie opposte di rotori,

00:02:39.260 --> 00:02:41.260
il robot si imbarda sull'asse verticale.

00:02:41.260 --> 00:02:43.260
Dunque il processore del robot

00:02:43.260 --> 00:02:46.260
analizza, in pratica, i vari movimenti da effettuare

00:02:46.260 --> 00:02:48.260
e li combina pianificando

00:02:48.260 --> 00:02:51.260
il tipo di impulsi da inviare ai motori,

00:02:51.260 --> 00:02:53.260
600 volte al secondo.

00:02:53.260 --> 00:02:55.260
Questo è il funzionamento di base.

00:02:55.260 --> 00:02:57.260
Uno dei vantaggi del progetto è che,

00:02:57.260 --> 00:02:59.260
riducendo le dimensioni,

00:02:59.260 --> 00:03:02.260
il robot ovviamente guadagna in agilità.

00:03:02.260 --> 00:03:04.260
Qui R indica

00:03:04.260 --> 00:03:06.260
la lunghezza caratteristica del robot.

00:03:06.260 --> 00:03:09.260
Di fatto è la metà del diametro.

00:03:09.260 --> 00:03:12.260
E sono svariati i parametri fisici che cambiano

00:03:12.260 --> 00:03:14.260
riducendo il fattore R.

00:03:14.260 --> 00:03:16.260
Quello più importante

00:03:16.260 --> 00:03:18.260
è l'inerzia o resistenza al movimento.

00:03:18.260 --> 00:03:20.260
Ne risulta che

00:03:20.260 --> 00:03:23.260
l'inerzia, che controlla il movimento angolare,

00:03:23.260 --> 00:03:26.260
diminuisce come quinta potenza di R.

00:03:26.260 --> 00:03:28.260
Perciò più si riduce R

00:03:28.260 --> 00:03:31.260
più si riduce l'inerzia, e in modo esponenziale.

00:03:31.260 --> 00:03:34.260
Il risultato è che l'accelerazione angolare

00:03:34.260 --> 00:03:36.260
indicata dalla lettera alfa

00:03:36.260 --> 00:03:38.260
diventa uno fratto R.

00:03:38.260 --> 00:03:40.260
E' inversamente proporzionale a R.

00:03:40.260 --> 00:03:43.260
Più la si riduce, più aumenta la rapidità della virata.

00:03:43.260 --> 00:03:45.260
Si capisce chiaramente dai video.

00:03:45.260 --> 00:03:48.260
In basso a destra vedete un robot

00:03:48.260 --> 00:03:50.260
che fa un giro su se stesso di 360°

00:03:50.260 --> 00:03:52.260
in meno di mezzo secondo.

00:03:52.260 --> 00:03:55.260
Per eseguire giri multipli ci vuole un po' di più.

00:03:55.260 --> 00:03:57.260
Tutte le manovre ricevono

00:03:57.260 --> 00:03:59.260
un feedback dagli accelerometri

00:03:59.260 --> 00:04:01.260
e dai giroscopi di bordo,

00:04:01.260 --> 00:04:03.260
e calcolano i comandi, come vi dicevo,

00:04:03.260 --> 00:04:05.260
600 volte al secondo

00:04:05.260 --> 00:04:07.260
per stabilizzare il robot.

00:04:07.260 --> 00:04:10.260
A sinistra vedete Daniel che lancia il robot in aria.

00:04:10.260 --> 00:04:12.260
E vedete quanto il controllo del movimento sia totale.

00:04:12.260 --> 00:04:14.260
Non importa come lo si lancia,

00:04:14.260 --> 00:04:18.260
il robot stabilizza la sua traiettoria e torna indietro.

00:04:18.260 --> 00:04:20.260
Ma perché costruiamo questi robot?

00:04:20.260 --> 00:04:23.260
Beh, robot come questi hanno molti impieghi.

00:04:23.260 --> 00:04:26.260
Potreste inviarli all'interno di edifici come questo

00:04:26.260 --> 00:04:29.260
come primo intervento per il controllo di intrusi,

00:04:29.260 --> 00:04:32.260
o magari per cercare delle perdite biochimiche,

00:04:32.260 --> 00:04:34.260
o di gas.

00:04:34.260 --> 00:04:36.260
Si possono usare

00:04:36.260 --> 00:04:38.260
anche per le costruzioni.

00:04:38.260 --> 00:04:42.260
Qui li vedete trasportare travi, colonne,

00:04:42.260 --> 00:04:45.260
e assemblare delle strutture cubiche.

00:04:45.260 --> 00:04:48.260
Vi dirò qualcosa in più su questo.

00:04:48.260 --> 00:04:51.260
I robot si possono impiegare per trasportare materiali.

00:04:51.260 --> 00:04:54.260
E uno dei problemi è rappresentato

00:04:54.260 --> 00:04:56.260
dalla loro modesta capacità di carico.

00:04:56.260 --> 00:04:58.260
Ma si possono combinare diversi robot

00:04:58.260 --> 00:05:00.260
per aumentarla.

00:05:00.260 --> 00:05:02.260
Questa è un'immagine di un nostro recente esperimento -

00:05:02.260 --> 00:05:04.260
beh, non tanto recente, ormai -

00:05:04.260 --> 00:05:07.260
condotto a Sendai dopo il terremoto.

00:05:07.260 --> 00:05:10.260
Questi robot potrebbero volare all'interno di edifici crollati

00:05:10.260 --> 00:05:12.260
per stimare l'entità dei danni causati da disastri naturali,

00:05:12.260 --> 00:05:15.260
o in edifici esposti a radiazioni

00:05:15.260 --> 00:05:18.260
per determinarne il livello di pericolosità.

00:05:19.260 --> 00:05:21.260
Il problema fondamentale

00:05:21.260 --> 00:05:24.260
da risolvere è dare loro autonomia di calcolo

00:05:24.260 --> 00:05:26.260
per stabilire come spostarsi

00:05:26.260 --> 00:05:28.260
dal punto A al punto B.

00:05:28.260 --> 00:05:30.260
Qui le cose si complicano un po'

00:05:30.260 --> 00:05:33.260
per via dell'intrinseca complessità dinamica dei robot.

00:05:33.260 --> 00:05:35.260
Infatti si devono spostare in uno spazio a 12 dimensioni.

00:05:35.260 --> 00:05:37.260
Così ricorriamo a un trucchetto.

00:05:37.260 --> 00:05:40.260
Prendiamo questo spazio curvo 12-dimensionale

00:05:40.260 --> 00:05:42.260
e lo trasformiamo

00:05:42.260 --> 00:05:44.260
in uno a 4 dimensioni.

00:05:44.260 --> 00:05:46.260
Quest'ultimo è costituito

00:05:46.260 --> 00:05:49.260
da X, Y, Z, e dall'angolo di imbardata.

00:05:49.260 --> 00:05:51.260
Quello che fa il robot

00:05:51.260 --> 00:05:55.260
è pianificare la traiettoria più breve e veloce.

00:05:55.260 --> 00:05:57.260
In fisica, come ricorderete,

00:05:57.260 --> 00:05:59.260
abbiamo posizione, derivata, velocità,

00:05:59.260 --> 00:06:01.260
poi accelerazione,

00:06:01.260 --> 00:06:03.260
quindi contrazione

00:06:03.260 --> 00:06:05.260
e poi scatto.

00:06:05.260 --> 00:06:08.260
E questo robot minimizza lo scatto.

00:06:08.260 --> 00:06:10.260
Di fatto produce

00:06:10.260 --> 00:06:12.260
un movimento lineare e aggraziato.

00:06:12.260 --> 00:06:15.260
E lo fa evitando eventuali ostacoli.

00:06:15.260 --> 00:06:18.260
Dunque queste traiettorie a scatto ridotto nello spazio piatto

00:06:18.260 --> 00:06:20.260
vengono adattate

00:06:20.260 --> 00:06:22.260
a questo complicato spazio 12-dimensionale,

00:06:22.260 --> 00:06:24.260
che il robot deve analizzare

00:06:24.260 --> 00:06:26.260
e poi eseguire.

00:06:26.260 --> 00:06:28.260
Lasciate che vi mostri alcuni esempi

00:06:28.260 --> 00:06:30.260
di questo tipo di traiettoria.

00:06:30.260 --> 00:06:32.260
Nel primo video

00:06:32.260 --> 00:06:34.260
vediamo il robot che va da A a B passando

00:06:34.260 --> 00:06:36.260
per un punto intermedio.

00:06:42.260 --> 00:06:44.260
Ovviamente il robot riesce a eseguire

00:06:44.260 --> 00:06:46.260
qualsiasi traiettoria curva.

00:06:46.260 --> 00:06:48.260
Queste sono traiettorie circolari

00:06:48.260 --> 00:06:51.260
che imprimono accelerazioni di due G.

00:06:52.260 --> 00:06:56.260
Le microcamere di bordo dicono al robot

00:06:56.260 --> 00:06:59.260
dove si trova, 100 volte al secondo.

00:06:59.260 --> 00:07:02.260
E gli indicano la posizione degli ostacoli.

00:07:02.260 --> 00:07:04.260
Ostacoli che possono muoversi.

00:07:04.260 --> 00:07:07.260
Qui si vede Daniel mentre lancia un cerchio in aria,

00:07:07.260 --> 00:07:09.260
e il robot che calcola la posizione del cerchio

00:07:09.260 --> 00:07:13.260
per scegliere il momento adatto per attraversarlo.

00:07:13.260 --> 00:07:15.260
Come accademici

00:07:15.260 --> 00:07:18.260
siamo abituati a fare salti mortali per raccogliere fondi per i nostri esperimenti,

00:07:18.260 --> 00:07:21.260
ma qui lo facciamo fare ai robot.

00:07:21.260 --> 00:07:27.260
(Applausi)

00:07:27.260 --> 00:07:29.260
Un'altra cosa che i robot possono fare

00:07:29.260 --> 00:07:32.260
è memorizzare segmenti di traiettoria

00:07:32.260 --> 00:07:34.260
pre-programmati o che apprendono da sé.

00:07:34.260 --> 00:07:36.260
Qui vedete il robot

00:07:36.260 --> 00:07:38.260
che combina un movimento

00:07:38.260 --> 00:07:40.260
per prendere velocità,

00:07:40.260 --> 00:07:43.260
e poi modifica assetto e torna in posizione normale.

00:07:43.260 --> 00:07:46.260
E' obbligato a farlo perché l'apertura attraverso cui

00:07:46.260 --> 00:07:50.260
deve passare è di poco più larga del robot.

00:07:50.260 --> 00:07:53.260
E alla stregua di un tuffatore sul trampolino,

00:07:53.260 --> 00:07:55.260
che salta per prendere lo slancio sufficiente

00:07:55.260 --> 00:07:58.260
per eseguire piroetta e doppia capriola,

00:07:58.260 --> 00:08:00.260
per poi rimettersi in assetto con grazia,

00:08:00.260 --> 00:08:02.260
anche il robot esegue le sue evoluzioni.

00:08:02.260 --> 00:08:05.260
Dunque sa combinare piccoli segmenti di traiettoria

00:08:05.260 --> 00:08:09.260
per eseguire dei compiti alquanto complessi.

00:08:09.260 --> 00:08:11.260
Ma passiamo ad altro.

00:08:11.260 --> 00:08:14.260
Uno degli svantaggi di questi piccoli robot è la loro dimensione.

00:08:14.260 --> 00:08:16.260
Vi dicevo poc'anzi

00:08:16.260 --> 00:08:18.260
che sarebbe possibile utilizzare svariati robottini

00:08:18.260 --> 00:08:21.260
per superare i limiti imposti dalle dimensioni.

00:08:21.260 --> 00:08:23.260
Ma una delle difficoltà

00:08:23.260 --> 00:08:26.260
è come coordinare il loro movimento in gruppo.

00:08:26.260 --> 00:08:28.260
E così abbiamo guardato alla natura.

00:08:28.260 --> 00:08:30.260
Vorrei mostrarvi un video

00:08:30.260 --> 00:08:32.260
sulle formiche del deserto, le aphaenogaster,

00:08:32.260 --> 00:08:35.260
nel laboratorio del Prof.Stephen Pratt, mentre trasportano un oggetto.

00:08:35.260 --> 00:08:37.260
E' un pezzetto di fico.

00:08:37.260 --> 00:08:39.260
Basta che qualsiasi oggetto sia ricoperto di succo di fico

00:08:39.260 --> 00:08:42.260
perché le formiche se lo portino nel loro nido.

00:08:42.260 --> 00:08:45.260
Queste formiche non hanno un coordinamento centrale.

00:08:45.260 --> 00:08:47.260
Si basano sulle loro vicine.

00:08:47.260 --> 00:08:49.260
Nessuna comunicazione esplicita.

00:08:49.260 --> 00:08:51.260
Ma dato che si relazionano alle vicine

00:08:51.260 --> 00:08:53.260
e che sono in contatto con l'oggetto,

00:08:53.260 --> 00:08:56.260
esiste nel gruppo una coordinazione implicita.

00:08:56.260 --> 00:08:58.260
Ed è proprio il tipo di coordinazione

00:08:58.260 --> 00:09:01.260
che serve ai nostri robot.

00:09:01.260 --> 00:09:03.260
Quindi quando un robot

00:09:03.260 --> 00:09:05.260
è circondato da altri robot -

00:09:05.260 --> 00:09:07.260
prendiamo i robot I e J -

00:09:07.260 --> 00:09:09.260
quello che vogliamo che facciano

00:09:09.260 --> 00:09:12.260
è monitorare la distanza reciproca

00:09:12.260 --> 00:09:14.260
mentre volano in formazione.

00:09:14.260 --> 00:09:16.260
E poi vorrete accertarvi

00:09:16.260 --> 00:09:18.260
che la distanza rientri in limiti accettabili.

00:09:18.260 --> 00:09:21.260
Dunque i robot monitorano questo errore

00:09:21.260 --> 00:09:23.260
e ricalcolano i comandi di controllo

00:09:23.260 --> 00:09:25.260
100 volte al secondo,

00:09:25.260 --> 00:09:28.260
il che si traduce in 600 volte al secondo per i comandi dei motori.

00:09:28.260 --> 00:09:30.260
E anche questo deve poter essere fatto

00:09:30.260 --> 00:09:32.260
in maniera decentralizzata.

00:09:32.260 --> 00:09:34.260
Di nuovo, se fate volare grandi quantità di robot,

00:09:34.260 --> 00:09:38.260
è impossibile coordinare centralmente tutte le informazioni

00:09:38.260 --> 00:09:41.260
abbastanza rapidamente da far loro portare a termine il lavoro.

00:09:41.260 --> 00:09:43.260
Inoltre i robot devono basare le loro azioni

00:09:43.260 --> 00:09:45.260
solo su informazioni locali,

00:09:45.260 --> 00:09:47.260
su ciò che percepiscono dai loro vicini.

00:09:47.260 --> 00:09:49.260
Ed infine vogliamo

00:09:49.260 --> 00:09:51.260
che i robot siano agnostici

00:09:51.260 --> 00:09:53.260
nei confronti dei loro vicini.

00:09:53.260 --> 00:09:56.260
E' ciò che chiamiamo anonimato.

00:09:56.260 --> 00:09:58.260
Ora vi mostrerò

00:09:58.260 --> 00:10:00.260
un video

00:10:00.260 --> 00:10:03.260
di 20 piccoli robot

00:10:03.260 --> 00:10:05.260
che volano in formazione.

00:10:05.260 --> 00:10:08.260
Controllano la posizione dei loro vicini.

00:10:08.260 --> 00:10:10.260
Si mantengono in formazione.

00:10:10.260 --> 00:10:12.260
Le formazioni possono cambiare.

00:10:12.260 --> 00:10:14.260
Possono essere disposte

00:10:14.260 --> 00:10:16.260
su un piano orizzontale o tridimensionale.

00:10:16.260 --> 00:10:18.260
Come potete vedere

00:10:18.260 --> 00:10:21.260
cambiano formazione, da una tridimensionale ad una orizzontale.

00:10:21.260 --> 00:10:23.260
E per volare attraverso gli ostacoli

00:10:23.260 --> 00:10:27.260
riescono rapidamente ad adattare la formazione.

00:10:27.260 --> 00:10:30.260
E volano a distanza veramente ravvicinata.

00:10:30.260 --> 00:10:32.260
Come vedete in questo volo a forma di 8,

00:10:32.260 --> 00:10:34.260
volano a pochi centimetri uno dall'altro.

00:10:34.260 --> 00:10:37.260
E malgrado le interazioni aerodinamiche

00:10:37.260 --> 00:10:39.260
delle loro pale,

00:10:39.260 --> 00:10:41.260
il volo resta stabile.

00:10:41.260 --> 00:10:48.260
(Applausi)

00:10:48.260 --> 00:10:50.260
E se riescono a volare in formazione

00:10:50.260 --> 00:10:52.260
saranno anche in grado di sollevare degli oggetti, tutti insieme.

00:10:52.260 --> 00:10:54.260
Vuol dire che potremo

00:10:54.260 --> 00:10:57.260
aumentare di due, tre, quattro volte

00:10:57.260 --> 00:10:59.260
la forza dei robot

00:10:59.260 --> 00:11:01.260
semplicemente facendoli lavorare insieme ai loro vicini.

00:11:01.260 --> 00:11:04.260
Uno degli svantaggi è che, con l'aumentare

00:11:04.260 --> 00:11:06.260
delle dimensioni degli oggetti -

00:11:06.260 --> 00:11:08.260
e dunque con tantissimi robot che trasportano la stessa cosa -

00:11:08.260 --> 00:11:11.260
essenzialmente aumenta l'inerzia,

00:11:11.260 --> 00:11:14.260
e quindi il prezzo da pagare è una minore agilità.

00:11:14.260 --> 00:11:17.260
Ma si guadagna in termini di capacità di carico.

00:11:17.260 --> 00:11:19.260
Vi mostro un'altra applicazione -

00:11:19.260 --> 00:11:21.260
ancora nel nostro laboratorio.

00:11:21.260 --> 00:11:23.260
E' il lavoro di ricerca di un neolaureato, Quentin Lindsey.

00:11:23.260 --> 00:11:26.260
Attraverso il suo algoritmo chiede ai robot

00:11:26.260 --> 00:11:28.260
di costruire in modo autonomo

00:11:28.260 --> 00:11:30.260
delle strutture cubiche

00:11:30.260 --> 00:11:33.260
usando elementi sfusi.

00:11:33.260 --> 00:11:35.260
Dunque l'algoritmo indica al robot

00:11:35.260 --> 00:11:37.260
l'elemento da prelevare,

00:11:37.260 --> 00:11:39.260
quando e dove posizionarlo.

00:11:39.260 --> 00:11:41.260
In questo video,

00:11:41.260 --> 00:11:43.260
velocizzato di 10-14 volte,

00:11:43.260 --> 00:11:46.260
vedete tre strutture differenti che vengono costruite dai robot.

00:11:46.260 --> 00:11:48.260
E fanno tutto da soli,

00:11:48.260 --> 00:11:50.260
l'unica cosa che fa Quentin

00:11:50.260 --> 00:11:52.260
è dar loro una piantina

00:11:52.260 --> 00:11:56.260
del disegno della costruzione.

00:11:56.260 --> 00:11:59.260
Tutti gli esperimenti che avete visto finora,

00:11:59.260 --> 00:12:01.260
tutte queste dimostrazioni,

00:12:01.260 --> 00:12:04.260
sono stati realizzati usando sistemi di motion capture.

00:12:04.260 --> 00:12:06.260
Ma che succede quando uscite dal laboratorio

00:12:06.260 --> 00:12:09.260
e andate nel mondo reale?

00:12:09.260 --> 00:12:12.260
E se non avete un GPS?

00:12:12.260 --> 00:12:14.260
Questo robot

00:12:14.260 --> 00:12:16.260
dispone di una videocamera

00:12:16.260 --> 00:12:19.260
e di un cercatore laser H, uno scansionatore laser.

00:12:19.260 --> 00:12:21.260
Usa questi sensori

00:12:21.260 --> 00:12:23.260
per creare una mappa dell'ambiente circostante.

00:12:23.260 --> 00:12:26.260
Nella mappa sono rappresentate

00:12:26.260 --> 00:12:28.260
porte, finestre,

00:12:28.260 --> 00:12:30.260
persone, mobilio,

00:12:30.260 --> 00:12:32.260
e il robot riesce a calcolare la propria posizione

00:12:32.260 --> 00:12:34.260
rispetto a questi oggetti.

00:12:34.260 --> 00:12:36.260
Quindi non c'è alcun sistema globale di coordinate.

00:12:36.260 --> 00:12:39.260
Questo sistema viene definito dallo stesso robot,

00:12:39.260 --> 00:12:42.260
dalla sua ubicazione e da ciò che vede.

00:12:42.260 --> 00:12:45.260
E naviga in base a questi parametri.

00:12:45.260 --> 00:12:47.260
Ora vi mostrerò un video

00:12:47.260 --> 00:12:49.260
degli algoritmi sviluppati da Frank Shen

00:12:49.260 --> 00:12:51.260
e dal Prof. Nathan Michael,

00:12:51.260 --> 00:12:55.260
in cui un robot entra per la prima volta in un edificio

00:12:55.260 --> 00:12:58.260
e ne ricrea la mappa mentre si sposta.

00:12:58.260 --> 00:13:01.260
Quindi il robot analizza le caratteristiche dell'ambiente.

00:13:01.260 --> 00:13:03.260
Ne realizza una mappa.

00:13:03.260 --> 00:13:05.260
Calcola la sua posizione rispetto agli oggetti

00:13:05.260 --> 00:13:07.260
e ricalcola la propria posizione

00:13:07.260 --> 00:13:09.260
100 volte al secondo,

00:13:09.260 --> 00:13:11.260
permettendoci di usare gli algoritmi di controllo

00:13:11.260 --> 00:13:13.260
che vi descrivevo prima.

00:13:13.260 --> 00:13:15.260
Dunque questo robot viene di fatto comandato

00:13:15.260 --> 00:13:17.260
in remoto da Frank.

00:13:17.260 --> 00:13:19.260
Ma il robot è in grado di capire da solo

00:13:19.260 --> 00:13:21.260
dove deve andare.

00:13:21.260 --> 00:13:23.260
Immaginate che debba inviare il robot in un edificio

00:13:23.260 --> 00:13:25.260
di cui non conosco assolutamente alcuna caratteristica,

00:13:25.260 --> 00:13:27.260
posso chiedere al robot di entrare,

00:13:27.260 --> 00:13:29.260
crearne una mappa

00:13:29.260 --> 00:13:32.260
e tornare da me e dirmi com'è fatto l'edificio.

00:13:32.260 --> 00:13:35.260
Qui il robot non si limita a risolvere il problema

00:13:35.260 --> 00:13:38.260
dello spostamento da A a B su questa mappa,

00:13:38.260 --> 00:13:40.260
ma ricalcola continuamente

00:13:40.260 --> 00:13:42.260
dove si trovi il miglior punto B.

00:13:42.260 --> 00:13:45.260
Essenzialmente sa dove andare

00:13:45.260 --> 00:13:47.260
per cercare i luoghi di cui possiede meno informazioni.

00:13:47.260 --> 00:13:50.260
Ed è così che arricchisce la sua mappa.

00:13:50.260 --> 00:13:52.260
Vi farò vedere

00:13:52.260 --> 00:13:54.260
un'ultima applicazione.

00:13:54.260 --> 00:13:57.260
Questa tecnologia ha svariate applicazioni.

00:13:57.260 --> 00:13:59.260
Noi professori siamo appassionati di sistemi educativi.

00:13:59.260 --> 00:14:01.260
Dei robot così possono realmente cambiare

00:14:01.260 --> 00:14:03.260
il metodo educativo scolastico.

00:14:03.260 --> 00:14:05.260
Ma ci troviamo nella California Meridionale,

00:14:05.260 --> 00:14:07.260
nei pressi di Los Angeles,

00:14:07.260 --> 00:14:09.260
dunque devo concludere

00:14:09.260 --> 00:14:11.260
con qualcosa di divertente.

00:14:11.260 --> 00:14:13.260
Vi mostrerò un video musicale.

00:14:13.260 --> 00:14:16.260
Ecco coloro che l'hanno realizzato,

00:14:16.260 --> 00:14:18.260
Alex e Daniel.

00:14:18.260 --> 00:14:25.260
(Applausi)

00:14:25.260 --> 00:14:27.260
Ma prima vi voglio dire

00:14:27.260 --> 00:14:30.260
che l'hanno prodotto in soli tre giorni,

00:14:30.260 --> 00:14:32.260
dopo aver ricevuto una chiamata da Chris.

00:14:32.260 --> 00:14:34.260
E i robot che vedrete

00:14:34.260 --> 00:14:36.260
sono del tutto autonomi.

00:14:36.260 --> 00:14:39.260
Vedrete nove robot che suonano sei diversi strumenti.

00:14:39.260 --> 00:14:43.260
Ovviamente l'hanno preparato in esclusiva per TED 2012.

00:14:43.260 --> 00:14:46.260
Vediamo.

00:15:19.260 --> 00:15:29.260
(Musica)

00:16:23.260 --> 00:16:40.260
(Applausi)

