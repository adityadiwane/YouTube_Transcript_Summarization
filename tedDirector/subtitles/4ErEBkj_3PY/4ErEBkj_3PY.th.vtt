WEBVTT
Kind: captions
Language: th

00:00:00.000 --> 00:00:07.000
Translator: Unnawut Leepaisalsuwanna
Reviewer: PanaEk Warawit

00:00:20.260 --> 00:00:22.260
อรุณสวัสดิ์ครับ

00:00:22.260 --> 00:00:24.260
ผมมาที่นี่เพื่อเล่าถึง

00:00:24.260 --> 00:00:27.260
ลูกบอลที่บินได้ด้วยตนเอง

00:00:27.260 --> 00:00:31.260
ไม่ใช่ครับ เป็นหุ่นยนต์ที่บินได้คล่องแคล่ว แบบนี้ครับ

00:00:31.260 --> 00:00:34.260
ผมอยากจะเล่าถึงความท้าทายในการสร้างสิ่งนี้

00:00:34.260 --> 00:00:36.260
และโอกาสที่น่าสนใจ

00:00:36.260 --> 00:00:38.260
เกี่ยวกับการนำเทคโนโลยีนี้ไปใช้

00:00:38.260 --> 00:00:40.260
หุ่นยนต์เหล่านี้

00:00:40.260 --> 00:00:43.260
เกี่ยวข้องกับเครื่องบินไร้คนขับ

00:00:43.260 --> 00:00:46.260
แต่เครื่องบินพวกนี้มันใหญ่มาก

00:00:46.260 --> 00:00:48.260
หนักหลายพันปอนด์

00:00:48.260 --> 00:00:50.260
และไม่คล่องแคล่วเอาซะเลย

00:00:50.260 --> 00:00:52.260
มันบินด้วยตนเองไม่ได้ด้วยซ้ำ

00:00:52.260 --> 00:00:54.260
ส่วนใหญ่พาหนะเหล่านี้

00:00:54.260 --> 00:00:56.260
ต้องใช้ผู้บังคับหลายคน

00:00:56.260 --> 00:00:59.260
มีนักบินหลายคน

00:00:59.260 --> 00:01:01.260
มีผู้คุมเซ็นเซอร์

00:01:01.260 --> 00:01:03.260
และผู้อำนวยการภารกิจ

00:01:03.260 --> 00:01:05.260
สิ่งที่พวกเราสนใจ คือการสร้างหุ่นยนต์พวกนี้ --

00:01:05.260 --> 00:01:07.260
อย่างที่เห็นในสองรูปนี้ --

00:01:07.260 --> 00:01:10.260
หุ่นยนต์ที่สามารถหาซื้อได้ทั่วไป

00:01:10.260 --> 00:01:13.260
นี่คือเฮลิคอปเตอร์สี่ใบพัด

00:01:13.260 --> 00:01:17.260
มีขนาดประมาณหนึ่งเมตร

00:01:17.260 --> 00:01:19.260
น้ำหนักหลายปอนด์

00:01:19.260 --> 00:01:22.260
เราประกอบเซ็นเซอร์และหน่วยประมวลผลเข้าไป

00:01:22.260 --> 00:01:24.260
ให้หุ่นยนต์เหล่านี้บินภายในห้องได้

00:01:24.260 --> 00:01:26.260
โดยไม่มี GPS

00:01:26.260 --> 00:01:28.260
หุ่นยนต์ที่ผมถืออยู่

00:01:28.260 --> 00:01:30.260
คือสิ่งนี้

00:01:30.260 --> 00:01:33.260
ซึ่งสร้างโดยนักเรียนสองคน

00:01:33.260 --> 00:01:35.260
อเล็กซ์ และแดเนียล

00:01:35.260 --> 00:01:37.260
น้ำหนักของมัน

00:01:37.260 --> 00:01:39.260
ประมาณ 1 ส่วน 10 ปอนด์

00:01:39.260 --> 00:01:41.260
ใช้ไฟฟ้า 15 วัตต์

00:01:41.260 --> 00:01:43.260
และอย่างที่เห็น

00:01:43.260 --> 00:01:45.260
ความยาวประมาณ 8 นิ้ว

00:01:45.260 --> 00:01:48.260
ผมจะแสดงตัวอย่างสั้นๆ

00:01:48.260 --> 00:01:50.260
ว่ามันทำงานอย่างไร

00:01:50.260 --> 00:01:52.260
มันมีสี่ใบพัด

00:01:52.260 --> 00:01:54.260
ถ้ามันหมุนด้วยความเร็วเท่ากัน

00:01:54.260 --> 00:01:56.260
มันจะบินอยู่กับที่

00:01:56.260 --> 00:01:59.260
ถ้าคุณเพิ่มความเร็วในการหมุน

00:01:59.260 --> 00:02:02.260
มันจะบินสูงขึ้น

00:02:02.260 --> 00:02:04.260
ถ้าเราทำให้มันเอียง

00:02:04.260 --> 00:02:06.260
ไปในแนวนอน

00:02:06.260 --> 00:02:09.260
มันจะเลี้ยวไปทางนั้น

00:02:09.260 --> 00:02:12.260
จะทำให้มันเอียงได้ มีอยู่สองวิธี

00:02:12.260 --> 00:02:14.260
ในรูปนี้

00:02:14.260 --> 00:02:16.260
ใบพัดที่ 4 หมุนเร็วขึ้น

00:02:16.260 --> 00:02:18.260
ในขณะที่ใบพัด 2 หมุนช้าลง

00:02:18.260 --> 00:02:20.260
สิ่งที่เกิดขึ้นคือ

00:02:20.260 --> 00:02:23.260
มันจะม้วนตัวเล็กน้อย

00:02:23.260 --> 00:02:25.260
ในอีกทางหนึ่ง

00:02:25.260 --> 00:02:28.260
ถ้าคุณเร่งใบพัดที่ 3

00:02:28.260 --> 00:02:30.260
และให้ใบพัดที่ 1 หมุนช้าลง

00:02:30.260 --> 00:02:33.260
มันจะเคลื่อนตัวไปข้างหน้า

00:02:33.260 --> 00:02:35.260
และท้ายสุด

00:02:35.260 --> 00:02:37.260
ถ้าคุณปรับให้ใบพัดที่อยู่คู่กัน

00:02:37.260 --> 00:02:39.260
หมุนเร็วกว่าอีกคู่หนึ่ง

00:02:39.260 --> 00:02:41.260
มันก็จะหมุนตัวรอบแกนดิ่ง

00:02:41.260 --> 00:02:43.260
หน่วยประมวลผลที่อยู่บนตัวมัน

00:02:43.260 --> 00:02:46.260
จะคำนวนว่าต้องเคลื่อนที่แบบใด

00:02:46.260 --> 00:02:48.260
เพื่อคำนวนรวมกัน

00:02:48.260 --> 00:02:51.260
แล้วประมวลว่าจะต้องส่งคำสั่งอะไรไปยังมอเตอร์

00:02:51.260 --> 00:02:53.260
600 ครั้งต่อวินาที

00:02:53.260 --> 00:02:55.260
นี่คือการทำงานคร่าวๆ ครับ

00:02:55.260 --> 00:02:57.260
ข้อดีของระบบแบบนี้คือ

00:02:57.260 --> 00:02:59.260
เมื่อคุณย่อชิ้นงานลง

00:02:59.260 --> 00:03:02.260
คุณได้ความคล่องแคล่วกลับมา

00:03:02.260 --> 00:03:04.260
นี่คือ R

00:03:04.260 --> 00:03:06.260
หรือความยาวของหุ่นยนต์

00:03:06.260 --> 00:03:09.260
มีขนาดครึ่งหนึ่งของเส้นผ่านศูนย์กลาง

00:03:09.260 --> 00:03:12.260
ซึ่งจะกระทบตัวแปรหลายอย่าง

00:03:12.260 --> 00:03:14.260
เมื่อคุณใช้ R ที่เล็กลง

00:03:14.260 --> 00:03:16.260
ที่สำคัญคือ

00:03:16.260 --> 00:03:18.260
ความเฉื่อยหรือแรงต้านทานต่อการเคลื่อนไหว

00:03:18.260 --> 00:03:20.260
ผลปรากฎว่า

00:03:20.260 --> 00:03:23.260
แรงเฉื่อย ซึ่งควบคุมการเคลื่อนที่แบบหมุน

00:03:23.260 --> 00:03:26.260
มีค่าเป็น R ยกกำลัง 5

00:03:26.260 --> 00:03:28.260
แปลว่ายิ่งเราทำให้ R เล็กได้เท่าไหร่

00:03:28.260 --> 00:03:31.260
แรงเฉื่อยก็ยิ่งน้อยลง

00:03:31.260 --> 00:03:34.260
ผลลัพธ์คือ ความเร่งเชิงมุม

00:03:34.260 --> 00:03:36.260
ซึ่งแทนที่ด้วยตัวอักษรอัลฟ่า

00:03:36.260 --> 00:03:38.260
เท่ากับ 1 ส่วน R

00:03:38.260 --> 00:03:40.260
มันมีสัดส่วนผกผันกับ R

00:03:40.260 --> 00:03:43.260
ยิ่ง R น้อยลงเท่าไหร่ ยิ่งเลี้ยวได้เร็วขึ้นเท่านั้น

00:03:43.260 --> 00:03:45.260
จะเห็นได้ชัดในวีดีโอนี้

00:03:45.260 --> 00:03:48.260
ที่มุมซ้ายล่างคุณจะเห็นหุ่นยนต์

00:03:48.260 --> 00:03:50.260
ตีลังกา 360 องศา

00:03:50.260 --> 00:03:52.260
ภายในครึ่งวินาที

00:03:52.260 --> 00:03:55.260
ตีลังกาหลายรอบ ใช้เวลามากขึ้นเล็กน้อย

00:03:55.260 --> 00:03:57.260
ในที่นี้หน่วยประมวลผล

00:03:57.260 --> 00:03:59.260
ได้รับข้อมูลจากมาตรความเร่ง

00:03:59.260 --> 00:04:01.260
และมาตรการหมุนที่อยู่บนเครื่อง

00:04:01.260 --> 00:04:03.260
เพื่อนำมาคำนวนคำสั่ง

00:04:03.260 --> 00:04:05.260
600 ครั้งต่อวินาที

00:04:05.260 --> 00:04:07.260
เพื่อทรงตัวหุ่นยนต์

00:04:07.260 --> 00:04:10.260
ด้านซ้ายมือคุณจะเห็นแดเนียลโยนมันขึ้นฟ้า

00:04:10.260 --> 00:04:12.260
เห็นความแม่นยำของการควบคุมไหมครับ

00:04:12.260 --> 00:04:14.260
ไม่ว่าคุณจะโยนมันอย่างไร

00:04:14.260 --> 00:04:18.260
มันจะทรงตัวด้วยตนเอง แล้วบินกลับมาหาเขา

00:04:18.260 --> 00:04:20.260
ทำไมต้องสร้างหุ่นยนต์แบบนี้ล่ะ

00:04:20.260 --> 00:04:23.260
เราสามารถนำไปใช้ได้หลายวิธีครับ

00:04:23.260 --> 00:04:26.260
ส่งมันเข้าไปในตึกแบบนี้

00:04:26.260 --> 00:04:29.260
เพื่อค้นหาผู้บุกรุก

00:04:29.260 --> 00:04:32.260
หรือหาการรั่วไหลของสารเคมี

00:04:32.260 --> 00:04:34.260
หรือแก๊สพิษ

00:04:34.260 --> 00:04:36.260
นอกจากนั้นยังสามารถ

00:04:36.260 --> 00:04:38.260
ใช้ในการก่อสร้างอีกด้วย

00:04:38.260 --> 00:04:42.260
นี่คือตัวอย่างการขนย้ายคาน เสา

00:04:42.260 --> 00:04:45.260
เพื่อก่อสร้างโครงสร้างจตุรัส

00:04:45.260 --> 00:04:48.260
ผมจะอธิบายต่ออีกสักหน่อยครับ

00:04:48.260 --> 00:04:51.260
เราสามารถใช้มันเพื่อขนย้ายสิ่งของ

00:04:51.260 --> 00:04:54.260
แต่ปัญหาหนึ่งคือ

00:04:54.260 --> 00:04:56.260
มันรับน้ำหนักได้ไม่มาก

00:04:56.260 --> 00:04:58.260
ซึ่งเราสามารถใช้หุ่นยนต์หลายๆตัว

00:04:58.260 --> 00:05:00.260
เพื่อขนย้ายสิ่งของที่หนักขึ้นได้

00:05:00.260 --> 00:05:02.260
นี่คือการทดลองล่าสุด --

00:05:02.260 --> 00:05:04.260
ซึ่งไม่ใช่ล่าสุดอีกต่อไปแล้ว --

00:05:04.260 --> 00:05:07.260
ไม่นานหลังจากแผ่นดินไหวที่เซนได

00:05:07.260 --> 00:05:10.260
เราสามารถส่งหุ่นยนต์เข้าไปในซากปรักหักพัง

00:05:10.260 --> 00:05:12.260
เพื่อประเมินความเสียหาย

00:05:12.260 --> 00:05:15.260
หรือส่งไปในเตาปฏิกรณ์

00:05:15.260 --> 00:05:18.260
เพื่อวัดกัมมันตภาพรังสี

00:05:19.260 --> 00:05:21.260
หนึ่งในปัญหาพื้นฐาน

00:05:21.260 --> 00:05:24.260
เกี่ยวกับการทำงานโดยไร้ผู้คุม

00:05:24.260 --> 00:05:26.260
นั่นคือการคำนวนวิธีการ

00:05:26.260 --> 00:05:28.260
เดินทางจากจุด A ไปยังจุด B ให้ได้

00:05:28.260 --> 00:05:30.260
ซึ่งค่อนข้างท้าทายครับ

00:05:30.260 --> 00:05:33.260
เพราะการเคลื่อนไหวมีความซับซ้อน

00:05:33.260 --> 00:05:35.260
มันมีพื้นที่ 12 มิติ

00:05:35.260 --> 00:05:37.260
เราใช้กลเล็กน้อย

00:05:37.260 --> 00:05:40.260
เราใช้พื้นที่ 12 มิตินี้

00:05:40.260 --> 00:05:42.260
นำมาแปลงรูป

00:05:42.260 --> 00:05:44.260
ให้กลายเป็นพื้นที่ 4 มิติ

00:05:44.260 --> 00:05:46.260
และพื้นที่ 4 มิตินั้น

00:05:46.260 --> 00:05:49.260
มีแกน X Y Z และมุมหัน

00:05:49.260 --> 00:05:51.260
สิ่งที่หุ่นยนต์พวกนี้ทำ

00:05:51.260 --> 00:05:55.260
คือการวางแผนวิถีแบบ minimum snap trajectory

00:05:55.260 --> 00:05:57.260
รื้อฟื้นวิชาฟิสิกส์เล็กน้อยครับ

00:05:57.260 --> 00:05:59.260
คุณมีตำแหน่ง อนุพันธ์ ความเร็ว

00:05:59.260 --> 00:06:01.260
และความเร่ง

00:06:01.260 --> 00:06:03.260
แรงกระตุก

00:06:03.260 --> 00:06:05.260
และแรงกระชาก

00:06:05.260 --> 00:06:08.260
มันลดแรงกระชากให้เหลือน้อยที่สุด

00:06:08.260 --> 00:06:10.260
ซึ่งทำให้

00:06:10.260 --> 00:06:12.260
เกิดการเคลื่อนไหวที่นุ่มนวล

00:06:12.260 --> 00:06:15.260
เพื่อหลบหลีกสิ่งกีดขวาง

00:06:15.260 --> 00:06:18.260
วีถีการกระชากที่น้อยที่สุดแบบนี้

00:06:18.260 --> 00:06:20.260
ถูกแปลงรูปให้กลับไป

00:06:20.260 --> 00:06:22.260
เป็นพื้นที่ 12 มิติที่ซับซ้อน

00:06:22.260 --> 00:06:24.260
ที่หุ่นพวกนี้ต้องทำ

00:06:24.260 --> 00:06:26.260
เพื่อการควบคุม และการปฏิบัติหน้าที่

00:06:26.260 --> 00:06:28.260
ผมจะยกตัวอย่างให้ดู

00:06:28.260 --> 00:06:30.260
ว่ามันทำงานอย่างไร

00:06:30.260 --> 00:06:32.260
ในวีดีโอแรกนี้

00:06:32.260 --> 00:06:34.260
คุณจะเห็นหุ่นยนต์บินจากจุด A ไปจุด B

00:06:34.260 --> 00:06:36.260
ผ่านจุดระหว่างทาง

00:06:42.260 --> 00:06:44.260
หุ่นยนต์ตัวนี้สามารถ

00:06:44.260 --> 00:06:46.260
เคลื่อนไหวในวิถีโค้งแบบใดก็ได้

00:06:46.260 --> 00:06:48.260
นี่คือวิถีโค้งหนึ่ง

00:06:48.260 --> 00:06:51.260
มีแรงดึงประมาณ 2G

00:06:52.260 --> 00:06:56.260
ในรูปนี้เรามีกล้องจับการเคลื่อนไหวอยู่ด้านบน

00:06:56.260 --> 00:06:59.260
ที่บอกตำแหน่งของหุ่นยนต์ 100 ครั้งต่อวินาที

00:06:59.260 --> 00:07:02.260
พร้อมทั้งบอกหุ่นพวกนี้ให้ทราบถึงสิ่งกีดขวาง

00:07:02.260 --> 00:07:04.260
และสิ่งกีดขวางอาจเคลื่อนที่อยู่ก็เป็นได้

00:07:04.260 --> 00:07:07.260
ในที่นี้คุณจะเห็นแดเนียลโยนห่วงขึ้นกลางอากาศ

00:07:07.260 --> 00:07:09.260
ในขณะที่หุ่นยนต์คำนวนตำแหน่งของห่วง

00:07:09.260 --> 00:07:13.260
เพื่อหาวิธีลอดห่วงที่ดีที่สุด

00:07:13.260 --> 00:07:15.260
ในฐานะนักวิชาการ

00:07:15.260 --> 00:07:18.260
เราถูกสอนให้กระโดดลอดห่วงเสมอ เพื่อหาทุนทำการทดลอง

00:07:18.260 --> 00:07:21.260
เราเลยสอนหุ่นยนต์เราตามนั้น

00:07:21.260 --> 00:07:27.260
(เสียงปรบมือ)

00:07:27.260 --> 00:07:29.260
อีกความสามารถหนึ่งของหุ่นยนต์นี้

00:07:29.260 --> 00:07:32.260
มันสามารถจดจำวิถี

00:07:32.260 --> 00:07:34.260
ซึ่งมันได้เรียนรู้ หรือถูกตั้งให้มัน

00:07:34.260 --> 00:07:36.260
คุณจะเห็นมัน

00:07:36.260 --> 00:07:38.260
รวมการเคลื่อนไหว

00:07:38.260 --> 00:07:40.260
ที่สร้างโมเมนตัม

00:07:40.260 --> 00:07:43.260
เพื่อเปลี่ยนการทรงตัว แล้วคืนรูปเดิม

00:07:43.260 --> 00:07:46.260
มันต้องทำเพราะความกว้างของช่องทาง

00:07:46.260 --> 00:07:50.260
กว้างกว่าความยาวของมันเพียงเล็กน้อย

00:07:50.260 --> 00:07:53.260
เหมือนนักโดดน้ำที่ยืนบนแผ่นกระดาน

00:07:53.260 --> 00:07:55.260
ต้องกระโดดขึ้นเพื่อสร้างโมเมนตัม

00:07:55.260 --> 00:07:58.260
ตีลังกาสองรอบครึ่ง

00:07:58.260 --> 00:08:00.260
แล้วคืนสู่สภาวะปกติ

00:08:00.260 --> 00:08:02.260
มันกำลังทำตามนั้นเลยครับ

00:08:02.260 --> 00:08:05.260
มันรู้ว่าต้องดัดแปลงวิถีต่างๆอย่างไร

00:08:05.260 --> 00:08:09.260
เพื่อปฏิบัติในสิ่งที่ยากขึ้น

00:08:09.260 --> 00:08:11.260
ในอีกมุมหนึ่ง

00:08:11.260 --> 00:08:14.260
ข้อเสียของหุ่นยนต์พวกนี้คือขนาดของมัน

00:08:14.260 --> 00:08:16.260
ดังที่ผมบอกข้างต้น

00:08:16.260 --> 00:08:18.260
เราอาจต้องใช้หุ่นยนต์หลายๆ ตัว

00:08:18.260 --> 00:08:21.260
เพื่อแก้ปัญหาเรื่องขนาด

00:08:21.260 --> 00:08:23.260
ความยากอย่างหนึ่งคือ

00:08:23.260 --> 00:08:26.260
เราจะประสานงานมันอย่างไร

00:08:26.260 --> 00:08:28.260
เราเลยหันไปหาธรรมชาติ

00:08:28.260 --> 00:08:30.260
นี่คือคลิป

00:08:30.260 --> 00:08:32.260
มดทะเลทรายที่กำลังขนย้ายสิ่งของ

00:08:32.260 --> 00:08:35.260
ภายใต้ห้องทดลองของศาสตราจารย์ Stephen Pratt

00:08:35.260 --> 00:08:37.260
นี่คือผลมะเดื่อ

00:08:37.260 --> 00:08:39.260
คุณสามารถทาอะไรก็ได้ด้วยน้ำมะเดื่อ

00:08:39.260 --> 00:08:42.260
มดเหล่านี้จะนำมันกลับไปที่รัง

00:08:42.260 --> 00:08:45.260
มดเหล่านี้ไม่มีศูนย์กลางประสานงาน

00:08:45.260 --> 00:08:47.260
มันใช้ความรู้สึกเพื่อรับรู้

00:08:47.260 --> 00:08:49.260
ไม่มีการสื่อสารตายตัว

00:08:49.260 --> 00:08:51.260
แต่การใช้ประสาทสัมผัสกับมดตัวอื่นๆ

00:08:51.260 --> 00:08:53.260
และใช้ประสาทสัมผัสกับสิ่งของ

00:08:53.260 --> 00:08:56.260
มันสามารถประสานงานภายในกลุ่มได้

00:08:56.260 --> 00:08:58.260
นี่คือการประสานงาน

00:08:58.260 --> 00:09:01.260
ที่เราต้องการให้หุ่นของเราทำได้

00:09:01.260 --> 00:09:03.260
เมื่อเรามีหุ่นยนต์

00:09:03.260 --> 00:09:05.260
ที่รายล้อมด้วยหุ่นตัวอื่นๆ --

00:09:05.260 --> 00:09:07.260
ลองดูหุ่นยนต์ I กับ J นะครับ --

00:09:07.260 --> 00:09:09.260
สิ่งที่เราต้องการคือ

00:09:09.260 --> 00:09:12.260
ให้มันคอยสอดส่องระยะห่าง

00:09:12.260 --> 00:09:14.260
ในขณะที่มันบินเป็นฝูง

00:09:14.260 --> 00:09:16.260
และคุณต้องการมั่นใจว่า

00:09:16.260 --> 00:09:18.260
ระยะห่างอยู่ในระดับที่ปลอดภัย

00:09:18.260 --> 00:09:21.260
มันจะคอยควบคุมระยะคลาดเคลื่อน

00:09:21.260 --> 00:09:23.260
แล้วคำนวนการเคลื่อนไหว

00:09:23.260 --> 00:09:25.260
100 ครั้งต่อวินาที

00:09:25.260 --> 00:09:28.260
ซึ่งถูกแปลงเป็น 600 คำสั่งต่อวินาที ไปยังมอเตอร์

00:09:28.260 --> 00:09:30.260
ซึ่งทั้งหมดนี้ต้องทำ

00:09:30.260 --> 00:09:32.260
โดยไร้ศูนย์กลาง

00:09:32.260 --> 00:09:34.260
แน่นอนว่าถ้าคุณมีหุ่นยนต์จำนวนมาก

00:09:34.260 --> 00:09:38.260
คุณไม่สามารถใช้ศูนย์กลาง

00:09:38.260 --> 00:09:41.260
เพื่อประสานงานที่เร็วพอได้

00:09:41.260 --> 00:09:43.260
หุ่นยนต์เหล่านี้ต้องขับเคลื่อน

00:09:43.260 --> 00:09:45.260
ด้วยข้อมูลจากตัวมันเอง

00:09:45.260 --> 00:09:47.260
เกี่ยวกับที่อยู่ของหุ่นรอบๆ ตัว

00:09:47.260 --> 00:09:49.260
และสุดท้าย

00:09:49.260 --> 00:09:51.260
เราต้องการให้มันเป็นอิสระ

00:09:51.260 --> 00:09:53.260
ไม่จำเป็นต้องรู้ว่าสิ่งรอบตัวคืออะไร

00:09:53.260 --> 00:09:56.260
ซึ่งเราเรียกว่า สภาวะนิรนาม

00:09:56.260 --> 00:09:58.260
สิ่งที่ผมอยากแสดงต่อไป

00:09:58.260 --> 00:10:00.260
คือวีดีโอ

00:10:00.260 --> 00:10:03.260
หุ่นยนต์จำนวน 20 ตัว

00:10:03.260 --> 00:10:05.260
บินในลักษณะฝูง

00:10:05.260 --> 00:10:08.260
มันกำลังเฝ้าดูตำแหน่งของเพื่อนๆ

00:10:08.260 --> 00:10:10.260
คงตำแหน่งของตัวเองในฝูง

00:10:10.260 --> 00:10:12.260
เราสามารถเปลี่ยนรูปแบบได้

00:10:12.260 --> 00:10:14.260
ไม่ว่าจะเป็นในแนวระนาบ

00:10:14.260 --> 00:10:16.260
หรือในระดับสามมิติ

00:10:16.260 --> 00:10:18.260
คุณจะเห็นได้ว่า

00:10:18.260 --> 00:10:21.260
มันสามารถแปรขบวนจากสามมิติ กลายเป็นสองมิติ

00:10:21.260 --> 00:10:23.260
และสามารถปรับเปลี่ยนขบวน

00:10:23.260 --> 00:10:27.260
เพื่อบินผ่านสิ่งกีดขวาง

00:10:27.260 --> 00:10:30.260
หุ่นยนต์พวกนี้บินใกล้ชิดกันมาก

00:10:30.260 --> 00:10:32.260
ดังที่เห็นในการบินเป็นเลขแปด

00:10:32.260 --> 00:10:34.260
เข้าใกล้กันในระดับนิ้วเลยทีเดียว

00:10:34.260 --> 00:10:37.260
ทั้งๆ ที่มีผลทางกลศาสตร์

00:10:37.260 --> 00:10:39.260
ระหว่างใบพัดของแต่ละลำ

00:10:39.260 --> 00:10:41.260
มันก็ยังสามารถทรงตัวและเคลื่อนที่ได้

00:10:41.260 --> 00:10:48.260
(เสียงปรบมือ)

00:10:48.260 --> 00:10:50.260
เมื่อคุณสามารถบินเป็นฝูงได้

00:10:50.260 --> 00:10:52.260
คุณก็สามารถจับให้มันยกสิ่งของร่วมกันได้

00:10:52.260 --> 00:10:54.260
นี่แสดงให้เห็นว่า

00:10:54.260 --> 00:10:57.260
เราสามารถเพิ่มความแข็งแรงเป็นสอง สาม หรือสี่เท่า

00:10:57.260 --> 00:10:59.260
ในการยกของได้

00:10:59.260 --> 00:11:01.260
เพียงแค่จับมันประสานงานกัน

00:11:01.260 --> 00:11:04.260
แต่ข้อเสียหนึ่งคือ

00:11:04.260 --> 00:11:06.260
เมื่อคุณทำให้ขอบเขตใหญ่ขึ้น --

00:11:06.260 --> 00:11:08.260
คุณต้องใช้หุ่นยนต์หลายตัวเพื่อขนย้ายของชิ้นเดียว

00:11:08.260 --> 00:11:11.260
ซึ่งคุณกำลังเพิ่มแรงเฉื่อย

00:11:11.260 --> 00:11:14.260
ทำให้สูญเสียความคล่องแคล่วไป

00:11:14.260 --> 00:11:17.260
แต่คุณก็ได้รับการขนย้ายน้ำหนักที่มากขึ้นกลับมา

00:11:17.260 --> 00:11:19.260
อีกหนึ่งการใช้งานคือ

00:11:19.260 --> 00:11:21.260
ในห้องทดลองของเรา

00:11:21.260 --> 00:11:23.260
นักเรียนปริญญาโทชื่อว่า Quentin Lindsey

00:11:23.260 --> 00:11:26.260
ได้สร้างอัลกอริทึมที่สอนหุ่นยนต์เหล่านี้

00:11:26.260 --> 00:11:28.260
ให้สร้างสิ่งก่อสร้าง

00:11:28.260 --> 00:11:30.260
ทรงลูกเต๋าขึ้น

00:11:30.260 --> 00:11:33.260
ด้วยเสาค้ำแบบนี้

00:11:33.260 --> 00:11:35.260
อัลกอริทึมของเขาสอนหุ่นยนต์

00:11:35.260 --> 00:11:37.260
ว่าต้องหยิบอะไรขึ้น

00:11:37.260 --> 00:11:39.260
หยิบเมื่อไหร่ และวางที่ไหน

00:11:39.260 --> 00:11:41.260
ในวีดีโอนี้ --

00:11:41.260 --> 00:11:43.260
เราเร่งความเร็ว 10 เท่า 14 เท่า --

00:11:43.260 --> 00:11:46.260
คุณจะเห็นสิ่งก่อสร้างรูปแบบต่างๆ สร้างโดยหุ่นยนต์

00:11:46.260 --> 00:11:48.260
และแน่นอน ทุกอย่างเกิดขึ้นโดยอัตโนมัติ

00:11:48.260 --> 00:11:50.260
สิ่งที่ Quentin ต้องทำ

00:11:50.260 --> 00:11:52.260
คือป้อนพิมพ์เขียว

00:11:52.260 --> 00:11:56.260
สิ่งที่เขาต้องการสร้างเท่านั้น

00:11:56.260 --> 00:11:59.260
การทดลองที่คุณเห็นทั้งหมด

00:11:59.260 --> 00:12:01.260
ตัวอย่างที่ผมได้แสดง

00:12:01.260 --> 00:12:04.260
ได้การช่วยเหลือจากระบบจับการเคลื่อนไหว

00:12:04.260 --> 00:12:06.260
แต่ถ้าเราลองนำไปทดลองข้างนอก

00:12:06.260 --> 00:12:09.260
ในโลกแห่งความเป็นจริง

00:12:09.260 --> 00:12:12.260
และถ้าไม่มี GPS

00:12:12.260 --> 00:12:14.260
หุ่นยนต์เหล่านี้

00:12:14.260 --> 00:12:16.260
ถูกติดตั้งด้วยกล้อง

00:12:16.260 --> 00:12:19.260
และเครื่องสแกนเลเซอร์

00:12:19.260 --> 00:12:21.260
มันใช้เซ็นเซอร์เหล่านี้

00:12:21.260 --> 00:12:23.260
เพื่อวาดผังของสิ่งแวดล้อมรอบตัว

00:12:23.260 --> 00:12:26.260
มันสามารถสร้างแผนที่

00:12:26.260 --> 00:12:28.260
ประกอบไปด้วยประตู หน้าต่าง

00:12:28.260 --> 00:12:30.260
ผู้คน เฟอร์นิเจอร์

00:12:30.260 --> 00:12:32.260
และคำนวนตำแหน่งของตนเอง

00:12:32.260 --> 00:12:34.260
จากสิ่งรอบๆ ตัว

00:12:34.260 --> 00:12:36.260
มันไม่จำเป็นต้องมีระบบพิกัดกลาง

00:12:36.260 --> 00:12:39.260
ระบบพิกัดถูกกำหนดโดยตัวมันเอง

00:12:39.260 --> 00:12:42.260
โดยที่ที่มันอยู่ และสิ่งที่มันเห็น

00:12:42.260 --> 00:12:45.260
และมันเคลื่อนที่ไปตามสิ่งที่มันเห็น

00:12:45.260 --> 00:12:47.260
ผมอยากแสดงคลิปหนึ่ง

00:12:47.260 --> 00:12:49.260
ของอัลกอริทึมที่สร้างโดย Frank Shen

00:12:49.260 --> 00:12:51.260
และศาสตราจารย์ Nathan Micheal

00:12:51.260 --> 00:12:55.260
ขณะที่หุ่นยนต์เข้าสู่ตึกแห่งหนึ่งเป็นครั้งแรก

00:12:55.260 --> 00:12:58.260
และสร้างแผนที่นี้ขึ้นมาทันที

00:12:58.260 --> 00:13:01.260
มันสามารถคำนวนสิ่งต่างๆรอบตัว

00:13:01.260 --> 00:13:03.260
แล้วสร้างแผนที่ขึ้น

00:13:03.260 --> 00:13:05.260
คำนวนว่ามันอยู่ใกล้กับอะไร

00:13:05.260 --> 00:13:07.260
เพื่อคำนวนที่ตั้งของมัน

00:13:07.260 --> 00:13:09.260
100 ครั้งต่อวินาที

00:13:09.260 --> 00:13:11.260
ซึ่งทำให้เราสามารถใช้อัลกอริทึมควบคุม

00:13:11.260 --> 00:13:13.260
ดังที่ผมอธิบายก่อนหน้านี้

00:13:13.260 --> 00:13:15.260
หุ่นยนต์ตัวนี้ถูกควบคุมทางไกล

00:13:15.260 --> 00:13:17.260
โดย Frank

00:13:17.260 --> 00:13:19.260
แต่มันยังสามารถคำนวนเองได้

00:13:19.260 --> 00:13:21.260
หากต้องการให้มันเดินทางเอง

00:13:21.260 --> 00:13:23.260
ถ้าผมจะส่งหุ่นยนต์เข้าไปในสิ่งก่อสร้างหนึ่ง

00:13:23.260 --> 00:13:25.260
แต่ผมไม่รู้ว่าข้างในเป็นอย่างไร

00:13:25.260 --> 00:13:27.260
ผมสามารถสั่งให้มันเข้าไป

00:13:27.260 --> 00:13:29.260
สร้างแผนที่

00:13:29.260 --> 00:13:32.260
แล้วกลับมาบอกว่าภายในของตึกนั้นเป็นอย่างไร

00:13:32.260 --> 00:13:35.260
มันไม่ได้แก้โจทย์เพียงแค่ว่า

00:13:35.260 --> 00:13:38.260
จะเดินทางจากจุด A ไปจุด B ได้อย่างไร

00:13:38.260 --> 00:13:40.260
แต่มันยังสามารถ

00:13:40.260 --> 00:13:42.260
คำนวนว่า B อยู่ที่ไหนได้ตลอดเวลา

00:13:42.260 --> 00:13:45.260
มันรู้ว่าที่ไหน

00:13:45.260 --> 00:13:47.260
ที่มันรู้จักน้อยที่สุด

00:13:47.260 --> 00:13:50.260
และนั่นคือวิธีที่มันสร้างแผนที่

00:13:50.260 --> 00:13:52.260
ท้ายสุดนี้

00:13:52.260 --> 00:13:54.260
ผมมีการใช้งานสุดท้าย

00:13:54.260 --> 00:13:57.260
จากหลายๆ การประยุกต์ใช้จากเทคโนโลยีนี้

00:13:57.260 --> 00:13:59.260
ผมเป็นศาสตราจารย์ และเราหลงใหลในการศึกษา

00:13:59.260 --> 00:14:01.260
หุ่นยนต์เหล่านี้สามารถเปลี่ยน

00:14:01.260 --> 00:14:03.260
การเรียนการสอนจากอนุบาลถึงมัธยมได้

00:14:03.260 --> 00:14:05.260
แต่เราอยู่ในแคลิฟอร์เนียตอนใต้

00:14:05.260 --> 00:14:07.260
ใกล้ลอสแองเจลีส

00:14:07.260 --> 00:14:09.260
ผมเลยต้องทิ้งท้าย

00:14:09.260 --> 00:14:11.260
ด้วยสิ่งที่เกี่ยวกับความบันเทิง

00:14:11.260 --> 00:14:13.260
ผมอยากจบด้วยมิวสิควีดีโอ

00:14:13.260 --> 00:14:16.260
ผมขอแนะนำผู้กำกับ อเล็กซ์และแดเนียล

00:14:16.260 --> 00:14:18.260
ผู้สร้างวีดีโอนี้ขึ้น

00:14:18.260 --> 00:14:25.260
(เสียงปรบมือ)

00:14:25.260 --> 00:14:27.260
ก่อนที่ผมจะเปิดวีดีโอ

00:14:27.260 --> 00:14:30.260
ผมต้องบอกว่าพวกเขาทำขึ้นภายในสามวัน

00:14:30.260 --> 00:14:32.260
หลังจากที่ผมได้คำเชิญจากคริส

00:14:32.260 --> 00:14:34.260
และหุ่นยนต์ในวีดีโอนี้

00:14:34.260 --> 00:14:36.260
ทำงานอัตโนมัติทั้งหมด

00:14:36.260 --> 00:14:39.260
คุณจะเห็นหุ่นยนต์ 9 ตัว เล่นเครื่องดนตรี 6 ชนิด

00:14:39.260 --> 00:14:43.260
แน่นอน เราทำเพื่อ TED2012 โดยเฉพาะ

00:14:43.260 --> 00:14:46.260
เรามาดูกันครับ

00:15:19.260 --> 00:15:29.260
(เสียงดนตรี)

00:16:23.260 --> 00:16:40.260
(เสียงปรบมือ)

