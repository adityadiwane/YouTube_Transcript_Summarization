WEBVTT
Kind: captions
Language: uk

00:00:00.000 --> 00:00:07.000
Перекладач: Hanna Leliv
Утверджено: Khrystyna Romashko

00:00:20.260 --> 00:00:22.260
Доброго ранку.

00:00:22.260 --> 00:00:24.260
Сьогодні я розповім

00:00:24.260 --> 00:00:27.260
про автономні, летючі пляжні м'ячики.

00:00:27.260 --> 00:00:31.260
Та ні, про таких спритних повітряних роботів як оцей.

00:00:31.260 --> 00:00:34.260
Я розповім про труднощі зі створенням таких роботів

00:00:34.260 --> 00:00:36.260
і про неймовірні можливості

00:00:36.260 --> 00:00:38.260
цієї технології.

00:00:38.260 --> 00:00:40.260
Ці роботи

00:00:40.260 --> 00:00:43.260
відносяться до безпілотних літальних апаратів.

00:00:43.260 --> 00:00:46.260
Але ці літаки великі.

00:00:46.260 --> 00:00:48.260
Вони важать тисячі фунтів

00:00:48.260 --> 00:00:50.260
і, звісно ж, зовсім не маневрені.

00:00:50.260 --> 00:00:52.260
Навіть не автономні.

00:00:52.260 --> 00:00:54.260
Насправді цими літаками здебільшого

00:00:54.260 --> 00:00:56.260
керує льотний екіпаж,

00:00:56.260 --> 00:00:59.260
до якого входять кілька пілотів,

00:00:59.260 --> 00:01:01.260
оператори вимірювальної апаратури

00:01:01.260 --> 00:01:03.260
і координатори завдань.

00:01:03.260 --> 00:01:05.260
Нас цікавить розробка ось таких роботів --

00:01:05.260 --> 00:01:07.260
і ще два зображення --

00:01:07.260 --> 00:01:10.260
роботів, яких можна купити готовими в магазині.

00:01:10.260 --> 00:01:13.260
Це гелікоптери з чотирма тяговими ґвинтами,

00:01:13.260 --> 00:01:17.260
які мають близько метра в масштабі

00:01:17.260 --> 00:01:19.260
і важать кілька фунтів.

00:01:19.260 --> 00:01:22.260
Ми допасовуємо до них давачі та процесори,

00:01:22.260 --> 00:01:24.260
і ці роботи можуть літати у приміщенні

00:01:24.260 --> 00:01:26.260
без системи глобального позиціювання (GPS).

00:01:26.260 --> 00:01:28.260
У руці я тримаю

00:01:28.260 --> 00:01:30.260
саме такого робота.

00:01:30.260 --> 00:01:33.260
Його створили два студенти,

00:01:33.260 --> 00:01:35.260
Алекс і Деніел.

00:01:35.260 --> 00:01:37.260
Він важить трошки більше,

00:01:37.260 --> 00:01:39.260
ніж одна десята фунта.

00:01:39.260 --> 00:01:41.260
І має потужність 15 ват.

00:01:41.260 --> 00:01:43.260
Як бачите,

00:01:43.260 --> 00:01:45.260
робот має близько восьми дюймів у діаметрі.

00:01:45.260 --> 00:01:48.260
Зараз я швиденько поясню,

00:01:48.260 --> 00:01:50.260
як ці роботи працюють.

00:01:50.260 --> 00:01:52.260
Отож, він має чотири тягові ґвинти.

00:01:52.260 --> 00:01:54.260
Якщо запустити ці ґвинти з однаковою швидкістю,

00:01:54.260 --> 00:01:56.260
робот зависне у повітрі.

00:01:56.260 --> 00:01:59.260
Якщо пришвидшити рух кожного ґвинта,

00:01:59.260 --> 00:02:02.260
то робот злетить угору і розженеться.

00:02:02.260 --> 00:02:04.260
Звичайно, якби робота нахилити

00:02:04.260 --> 00:02:06.260
під певним кутом до горизонталі,

00:02:06.260 --> 00:02:09.260
то він би розігнався у заданому керунку.

00:02:09.260 --> 00:02:12.260
Існує два способи нахилити робота.

00:02:12.260 --> 00:02:14.260
На цьому малюнку видно,

00:02:14.260 --> 00:02:16.260
що тяговий ґвинт номер чотири крутиться швидше,

00:02:16.260 --> 00:02:18.260
а ґвинт номер два -- повільніше.

00:02:18.260 --> 00:02:20.260
У такому випадку, у певну мить

00:02:20.260 --> 00:02:23.260
робот повертається навколо поздовжньої осі.

00:02:23.260 --> 00:02:25.260
І навпаки:

00:02:25.260 --> 00:02:28.260
якщо прискорити ґвинт номер три

00:02:28.260 --> 00:02:30.260
і сповільнити ґвинт номер один,

00:02:30.260 --> 00:02:33.260
робот повернеться навколо поперечної осі.

00:02:33.260 --> 00:02:35.260
Врешті-решт,

00:02:35.260 --> 00:02:37.260
якщо прискорити протилежну

00:02:37.260 --> 00:02:39.260
пару ґвинтів,

00:02:39.260 --> 00:02:41.260
тоді робот повернеться навколо вертикальної осі.

00:02:41.260 --> 00:02:43.260
Бортовий процесор

00:02:43.260 --> 00:02:46.260
дивиться, які рухи потрібно виконати,

00:02:46.260 --> 00:02:48.260
поєднує ці рухи

00:02:48.260 --> 00:02:51.260
і посилає відповідні команди двигуну

00:02:51.260 --> 00:02:53.260
600 разів за секунду.

00:02:53.260 --> 00:02:55.260
Ось так усе працює.

00:02:55.260 --> 00:02:57.260
Такий дизайн має одну суттєву перевагу --

00:02:57.260 --> 00:02:59.260
якщо зменшити масштаб,

00:02:59.260 --> 00:03:02.260
робот стає більш маневреним.

00:03:02.260 --> 00:03:04.260
Символ R

00:03:04.260 --> 00:03:06.260
позначає характерну довжину робота.

00:03:06.260 --> 00:03:09.260
Це половина діаметра.

00:03:09.260 --> 00:03:12.260
Якщо зменшити R,

00:03:12.260 --> 00:03:14.260
то зміняться інші фізичні параметри.

00:03:14.260 --> 00:03:16.260
Найважливіший серед них --

00:03:16.260 --> 00:03:18.260
сила інерції або опір руху.

00:03:18.260 --> 00:03:20.260
Виявилося, що

00:03:20.260 --> 00:03:23.260
сила інерції, яка регулює кутовий рух,

00:03:23.260 --> 00:03:26.260
зростає прямо пропорційно R в п'ятому степені.

00:03:26.260 --> 00:03:28.260
Тобто, чим R менше,

00:03:28.260 --> 00:03:31.260
тим більше зменшується сила інерції.

00:03:31.260 --> 00:03:34.260
Як наслідок, кутове прискорення,

00:03:34.260 --> 00:03:36.260
позначене грецькою літерою альфа,

00:03:36.260 --> 00:03:38.260
дорівнює одиниці над R.

00:03:38.260 --> 00:03:40.260
Воно обернено пропорційне R.

00:03:40.260 --> 00:03:43.260
Чим менше кутове прискорення, тим швидше поверне гелікоптер.

00:03:43.260 --> 00:03:45.260
На відео це добре видно.

00:03:45.260 --> 00:03:48.260
У правому нижньому куті робот

00:03:48.260 --> 00:03:50.260
перевертається на 360 градусів

00:03:50.260 --> 00:03:52.260
за менш, ніж півсекунди.

00:03:52.260 --> 00:03:55.260
Серія переворотів триває трошки довше.

00:03:55.260 --> 00:03:57.260
Бортові процесори

00:03:57.260 --> 00:03:59.260
отримують дані від давачів прискорення

00:03:59.260 --> 00:04:01.260
і бортових гіроскопів

00:04:01.260 --> 00:04:03.260
і обчислюють команди, як я вже казав,

00:04:03.260 --> 00:04:05.260
600 разів за секунду,

00:04:05.260 --> 00:04:07.260
щоб робот залишався стійким.

00:04:07.260 --> 00:04:10.260
Ліворуч Деніел підкидає робота в повітря.

00:04:10.260 --> 00:04:12.260
Відразу видно, наскільки надійний контроль.

00:04:12.260 --> 00:04:14.260
Хоч би як ви його підкинули,

00:04:14.260 --> 00:04:18.260
робот вирівнюється і повертається до Деніела.

00:04:18.260 --> 00:04:20.260
Навіщо потрібні такі роботи?

00:04:20.260 --> 00:04:23.260
Роботів можна використати з різною метою.

00:04:23.260 --> 00:04:26.260
Їх можна першими послати всередину будівлі,

00:04:26.260 --> 00:04:29.260
щоб перевірити, чи ніхто не вдерся у чужий простір,

00:04:29.260 --> 00:04:32.260
або виявити витік біохімічних

00:04:32.260 --> 00:04:34.260
чи газоподібних речовин.

00:04:34.260 --> 00:04:36.260
Крім цього, вони можуть

00:04:36.260 --> 00:04:38.260
допомогти під час будівництва.

00:04:38.260 --> 00:04:42.260
Ось роботи переносять бруси та колони

00:04:42.260 --> 00:04:45.260
і складають кубовидні структури.

00:04:45.260 --> 00:04:48.260
Я розповім про це детальніше.

00:04:48.260 --> 00:04:51.260
Роботи можуть переносити вантажі.

00:04:51.260 --> 00:04:54.260
Тому ці малі роботи мають одну проблему --

00:04:54.260 --> 00:04:56.260
чисту вантажопідйомність.

00:04:56.260 --> 00:04:58.260
Тож, якщо ви хочете перенести вантаж,

00:04:58.260 --> 00:05:00.260
вам потрібно багато роботів.

00:05:00.260 --> 00:05:02.260
Недавно ми провели один експеримент --

00:05:02.260 --> 00:05:04.260
ну не так уже й недавно --

00:05:04.260 --> 00:05:07.260
у місті Сендай, яке пережило землетрус.

00:05:07.260 --> 00:05:10.260
Таких роботів можна посилати у зруйновані будівлі,

00:05:10.260 --> 00:05:12.260
щоб оцінити наслідки стихійного лиха,

00:05:12.260 --> 00:05:15.260
або в будівлю реактора,

00:05:15.260 --> 00:05:18.260
щоб скласти радіаційну карту.

00:05:19.260 --> 00:05:21.260
Якщо роботи автономні,

00:05:21.260 --> 00:05:24.260
то їхня найважливіша місія --

00:05:24.260 --> 00:05:26.260
визначити,

00:05:26.260 --> 00:05:28.260
як дістатися від пункту А до пункту Б.

00:05:28.260 --> 00:05:30.260
Клопітке завдання,

00:05:30.260 --> 00:05:33.260
бо динамічні властивості робота досить складні.

00:05:33.260 --> 00:05:35.260
По суті, роботи живуть у 12-вимірному просторі.

00:05:35.260 --> 00:05:37.260
Тоді ми вдамося до хитрощів.

00:05:37.260 --> 00:05:40.260
Візьмемо цей викривлений 12-вимірний простір

00:05:40.260 --> 00:05:42.260
і перетворимо його

00:05:42.260 --> 00:05:44.260
на чотиривимірну площину.

00:05:44.260 --> 00:05:46.260
А та чотиривимірна площина

00:05:46.260 --> 00:05:49.260
складається з X, Y, Z і кута відхилення.

00:05:49.260 --> 00:05:51.260
Отож, робот складає так звану

00:05:51.260 --> 00:05:55.260
мінімальну траєкторію автоматичного вирівнювання.

00:05:55.260 --> 00:05:57.260
Пригадаймо собі фізику:

00:05:57.260 --> 00:05:59.260
у вас є позиція, похідна, швидкість,

00:05:59.260 --> 00:06:01.260
далі прискорення,

00:06:01.260 --> 00:06:03.260
потім поштовх

00:06:03.260 --> 00:06:05.260
і, врешті, автоматичне вирівнювання.

00:06:05.260 --> 00:06:08.260
Робот згладжує вирівнювання.

00:06:08.260 --> 00:06:10.260
Як наслідок, робот

00:06:10.260 --> 00:06:12.260
рухається плавно і ґраціозно,

00:06:12.260 --> 00:06:15.260
оминаючи перешкоди.

00:06:15.260 --> 00:06:18.260
Мінімальні траєкторії автоматичного вирівнювання на площині

00:06:18.260 --> 00:06:20.260
перетворюються назад

00:06:20.260 --> 00:06:22.260
у складний 12-вимірний простір,

00:06:22.260 --> 00:06:24.260
оскільки це необхідно роботу

00:06:24.260 --> 00:06:26.260
для контролю і виконання дій.

00:06:26.260 --> 00:06:28.260
Зараз я покажу вам,

00:06:28.260 --> 00:06:30.260
як виглядають мінімальні траєкторії автоматичного вирівнювання.

00:06:30.260 --> 00:06:32.260
На першому відео

00:06:32.260 --> 00:06:34.260
робот рухається з пункту А до пункту Б

00:06:34.260 --> 00:06:36.260
через проміжний пункт.

00:06:42.260 --> 00:06:44.260
Очевидно, що робот здатний

00:06:44.260 --> 00:06:46.260
пройти будь-яку вигнуту траєкторію.

00:06:46.260 --> 00:06:48.260
Це кругові траєкторії.

00:06:48.260 --> 00:06:51.260
Прискорення робота дорівнює майже два G.

00:06:52.260 --> 00:06:56.260
Нагорі знаходяться підвісні камери захоплення руху,

00:06:56.260 --> 00:06:59.260
які 100 разів на секунду повідомляють роботу, де він є.

00:06:59.260 --> 00:07:02.260
Вони також повідомляють про перешкоди.

00:07:02.260 --> 00:07:04.260
Перешкоди бувають рухомі.

00:07:04.260 --> 00:07:07.260
Ось Деніел підкидає обруч,

00:07:07.260 --> 00:07:09.260
а робот вираховує розміщення обруча

00:07:09.260 --> 00:07:13.260
і визначає, як краще крізь нього пролетіти.

00:07:13.260 --> 00:07:15.260
Ми, науковці,

00:07:15.260 --> 00:07:18.260
вже навчилися стрибати крізь обручі, щоб зібрати гроші для лабораторії,

00:07:18.260 --> 00:07:21.260
а тепер передаємо ці знання роботам.

00:07:21.260 --> 00:07:27.260
(Оплески)

00:07:27.260 --> 00:07:29.260
А ще робот пам'ятає

00:07:29.260 --> 00:07:32.260
відрізки траєкторії,

00:07:32.260 --> 00:07:34.260
які він вивчає або на які запрограмований.

00:07:34.260 --> 00:07:36.260
Перед вами робот,

00:07:36.260 --> 00:07:38.260
який починає рухатися,

00:07:38.260 --> 00:07:40.260
набирає швидкість,

00:07:40.260 --> 00:07:43.260
потім змінює напрям і вирівнюється.

00:07:43.260 --> 00:07:46.260
Він мусить так робити, бо отвір у вікні

00:07:46.260 --> 00:07:50.260
завширшки майже як сам робот.

00:07:50.260 --> 00:07:53.260
Мені спадає на думку стрибун у воду, який стає на трамплін,

00:07:53.260 --> 00:07:55.260
стрибає з нього, щоб набрати швидкість,

00:07:55.260 --> 00:07:58.260
потім робить пірует і сальто на два з половиною оберти,

00:07:58.260 --> 00:08:00.260
а потім ґраціозно випрямляється.

00:08:00.260 --> 00:08:02.260
Робот займається практично тим самим.

00:08:02.260 --> 00:08:05.260
Він знає, як поєднати окремі відрізки траєкторії,

00:08:05.260 --> 00:08:09.260
щоби справитися із цими непростими завданнями.

00:08:09.260 --> 00:08:11.260
Тепер поговоримо про інше.

00:08:11.260 --> 00:08:14.260
Малі роботи мають ще один недолік -- розмір.

00:08:14.260 --> 00:08:16.260
Як я вже казав,

00:08:16.260 --> 00:08:18.260
нам потрібно чимало роботів,

00:08:18.260 --> 00:08:21.260
щоб розв'язати цю проблему.

00:08:21.260 --> 00:08:23.260
Тоді постає питання:

00:08:23.260 --> 00:08:26.260
як управляти цілою групою роботів?

00:08:26.260 --> 00:08:28.260
Ми запозичили досвід у природи.

00:08:28.260 --> 00:08:30.260
Я покажу вам відео з лабораторії професора Стівена Пратта,

00:08:30.260 --> 00:08:32.260
на якому пустельні мурахи Aphaenogaster

00:08:32.260 --> 00:08:35.260
несуть один об'єкт.

00:08:35.260 --> 00:08:37.260
Це шматочок інжиру.

00:08:37.260 --> 00:08:39.260
Можна взяти будь-який предмет, помащений соком інжиру,

00:08:39.260 --> 00:08:42.260
і мурахи потягнуть його до свого гнізда.

00:08:42.260 --> 00:08:45.260
Ці мурахи не мають центрального координатора.

00:08:45.260 --> 00:08:47.260
Вони відчувають своїх сусідів.

00:08:47.260 --> 00:08:49.260
Між ними немає вираженого зв'язку.

00:08:49.260 --> 00:08:51.260
Але вони відчувають своїх сусідів

00:08:51.260 --> 00:08:53.260
і відчувають об'єкт,

00:08:53.260 --> 00:08:56.260
і тому налагодили непрямий зв'язок у групі.

00:08:56.260 --> 00:08:58.260
Ми б хотіли, щоб наші роботи

00:08:58.260 --> 00:09:01.260
мали таку ж координацію.

00:09:01.260 --> 00:09:03.260
Ось у нас є робот,

00:09:03.260 --> 00:09:05.260
оточений сусідами --

00:09:05.260 --> 00:09:07.260
погляньмо на робота I і робота J.

00:09:07.260 --> 00:09:09.260
Ми хочемо, щоб роботи

00:09:09.260 --> 00:09:12.260
слідкували за відстанню між ними,

00:09:12.260 --> 00:09:14.260
коли вони летять групою.

00:09:14.260 --> 00:09:16.260
Роботи повинні впевнитися,

00:09:16.260 --> 00:09:18.260
що ця відстань не перевищує допустимий рівень.

00:09:18.260 --> 00:09:21.260
Вони слідкують за цим

00:09:21.260 --> 00:09:23.260
і обчислюють контрольні сигнали

00:09:23.260 --> 00:09:25.260
100 разів за секунду,

00:09:25.260 --> 00:09:28.260
а ті згодом перетворюються у команди для двигуна 600 разів за секунду.

00:09:28.260 --> 00:09:30.260
Знову ж таки, потрібне

00:09:30.260 --> 00:09:32.260
децентралізоване управління.

00:09:32.260 --> 00:09:34.260
Якщо у вас сила-силенна роботів,

00:09:34.260 --> 00:09:38.260
то інформацію неможливо координувати з центру достатньо швидко,

00:09:38.260 --> 00:09:41.260
щоб роботи виконали завдання.

00:09:41.260 --> 00:09:43.260
До того ж, роботи повинні керуватися

00:09:43.260 --> 00:09:45.260
місцевими даними,

00:09:45.260 --> 00:09:47.260
які вони отримали від сусіда.

00:09:47.260 --> 00:09:49.260
Врешті-решт,

00:09:49.260 --> 00:09:51.260
ми наполягаємо, щоб роботи ігнорували,

00:09:51.260 --> 00:09:53.260
хто їхні сусіди.

00:09:53.260 --> 00:09:56.260
Так звана анонімність.

00:09:56.260 --> 00:09:58.260
А зараз я покажу вам

00:09:58.260 --> 00:10:00.260
відео, на якому

00:10:00.260 --> 00:10:03.260
20 малих роботів

00:10:03.260 --> 00:10:05.260
летять одним строєм.

00:10:05.260 --> 00:10:08.260
Вони стежать за позицією сусідів.

00:10:08.260 --> 00:10:10.260
Вони тримаються разом.

00:10:10.260 --> 00:10:12.260
Стрій змінюється.

00:10:12.260 --> 00:10:14.260
Він буває двовимірний

00:10:14.260 --> 00:10:16.260
або тривимірний.

00:10:16.260 --> 00:10:18.260
Як бачите,

00:10:18.260 --> 00:10:21.260
роботи переходять від тривимірного строю до двовимірного.

00:10:21.260 --> 00:10:23.260
Якщо потрібно пролетіти крізь перешкоди,

00:10:23.260 --> 00:10:27.260
роботи змінюють стрій на лету.

00:10:27.260 --> 00:10:30.260
Знову ж таки, роботи знаходяться дуже близько один до одного.

00:10:30.260 --> 00:10:32.260
Коли вони летять "вісімкою",

00:10:32.260 --> 00:10:34.260
то дуже тісно наближаються один до одного.

00:10:34.260 --> 00:10:37.260
І, незважаючи на аеродинамічний взаємозв'язок

00:10:37.260 --> 00:10:39.260
ґвинтових лопатей,

00:10:39.260 --> 00:10:41.260
вони утримують рівновагу.

00:10:41.260 --> 00:10:48.260
(Оплески)

00:10:48.260 --> 00:10:50.260
Отож, роботи вже навчилися літати строєм.

00:10:50.260 --> 00:10:52.260
Тепер вони можуть разом піднімати предмети.

00:10:52.260 --> 00:10:54.260
Таким чином

00:10:54.260 --> 00:10:57.260
ми удвічі, утричі, а то й у чотири рази збільшимо

00:10:57.260 --> 00:10:59.260
силу робота.

00:10:59.260 --> 00:11:01.260
Всього лиш об'єднавши їх у команди.

00:11:01.260 --> 00:11:04.260
Проте існує один недолік.

00:11:04.260 --> 00:11:06.260
Ми збільшуємо кількість роботів,

00:11:06.260 --> 00:11:08.260
які несуть один і той же предмет,

00:11:08.260 --> 00:11:11.260
і тим самим підсилюємо інерцію.

00:11:11.260 --> 00:11:14.260
Жертвуємо маневреністю роботів.

00:11:14.260 --> 00:11:17.260
Натомість збільшуємо чисту вантажопідйомність.

00:11:17.260 --> 00:11:19.260
Я покажу вам ще один спосіб застосування роботів.

00:11:19.260 --> 00:11:21.260
Знову в нашій лабораторії.

00:11:21.260 --> 00:11:23.260
Це робота аспіранта Квентіна Ліндсі.

00:11:23.260 --> 00:11:26.260
По суті, його алгоритм вказує роботам,

00:11:26.260 --> 00:11:28.260
як самостійно збудувати

00:11:28.260 --> 00:11:30.260
кубічні структури

00:11:30.260 --> 00:11:33.260
зі схожих на балки частин.

00:11:33.260 --> 00:11:35.260
Його алгоритм каже роботу,

00:11:35.260 --> 00:11:37.260
яку частину підняти,

00:11:37.260 --> 00:11:39.260
і коли та куди її поставити.

00:11:39.260 --> 00:11:41.260
На цьому відео ви бачите --

00:11:41.260 --> 00:11:43.260
з прискоренням у 10, 14 разів --

00:11:43.260 --> 00:11:46.260
як роботи будують три окремі структури.

00:11:46.260 --> 00:11:48.260
Повторюю -- вони працюють самостійно.

00:11:48.260 --> 00:11:50.260
Єдине завдання Квентіна --

00:11:50.260 --> 00:11:52.260
завдати їм план

00:11:52.260 --> 00:11:56.260
проекту, який він хоче збудувати.

00:11:56.260 --> 00:11:59.260
Усі експерименти, які ви бачили,

00:11:59.260 --> 00:12:01.260
усі ці покази,

00:12:01.260 --> 00:12:04.260
були виконані за допомогою систем захоплення руху.

00:12:04.260 --> 00:12:06.260
А що трапиться, коли ви вийдете з лабораторії

00:12:06.260 --> 00:12:09.260
у справжній світ?

00:12:09.260 --> 00:12:12.260
А якщо там не буде GPS?

00:12:12.260 --> 00:12:14.260
Насправді, цей робот

00:12:14.260 --> 00:12:16.260
оснащений камерою

00:12:16.260 --> 00:12:19.260
і лазерним шукачем, лазерним сканером.

00:12:19.260 --> 00:12:21.260
За допомогою цих давачів

00:12:21.260 --> 00:12:23.260
він створює карту середовища.

00:12:23.260 --> 00:12:26.260
На карту нанесені різні деталі --

00:12:26.260 --> 00:12:28.260
як-от дверні отвори, вікна,

00:12:28.260 --> 00:12:30.260
люди, меблі.

00:12:30.260 --> 00:12:32.260
Тоді робот визначає своє розташування

00:12:32.260 --> 00:12:34.260
відносно цих деталей.

00:12:34.260 --> 00:12:36.260
Отож, глобальної системи координат не існує.

00:12:36.260 --> 00:12:39.260
Система координат залежить від робота,

00:12:39.260 --> 00:12:42.260
від того, де він знаходиться, і що бачить перед собою.

00:12:42.260 --> 00:12:45.260
Робот рухається залежно від цих даних.

00:12:45.260 --> 00:12:47.260
Зараз я покажу вам відео

00:12:47.260 --> 00:12:49.260
про алгоритми, які розробили Франк Шен

00:12:49.260 --> 00:12:51.260
і професор Натан Майкл.

00:12:51.260 --> 00:12:55.260
На відео робот уперше потрапляє у приміщення

00:12:55.260 --> 00:12:58.260
і на лету створює карту.

00:12:58.260 --> 00:13:01.260
Таким чином, робот визначає окремі деталі.

00:13:01.260 --> 00:13:03.260
Він створює карту.

00:13:03.260 --> 00:13:05.260
Далі визначає своє розташування відносно тих деталей

00:13:05.260 --> 00:13:07.260
і оцінює своє становище

00:13:07.260 --> 00:13:09.260
100 разів за секунду.

00:13:09.260 --> 00:13:11.260
Отож, ми маємо змогу застосувати алгоритми контролю,

00:13:11.260 --> 00:13:13.260
які я описав раніше.

00:13:13.260 --> 00:13:15.260
По суті, робот отримує команди від Франка

00:13:15.260 --> 00:13:17.260
на відстані.

00:13:17.260 --> 00:13:19.260
Водночас, він здатний самостійно визначити,

00:13:19.260 --> 00:13:21.260
куди йому треба рухатися.

00:13:21.260 --> 00:13:23.260
Припустімо, мені потрібно відправити роботів у цей будинок,

00:13:23.260 --> 00:13:25.260
але я не маю найменшого уявлення, як він виглядає.

00:13:25.260 --> 00:13:27.260
Тому я посилаю туди робота,

00:13:27.260 --> 00:13:29.260
він створює карту,

00:13:29.260 --> 00:13:32.260
а потім повертається і повідомляє, як виглядає будинок.

00:13:32.260 --> 00:13:35.260
У цьому випадку, робот не тільки розв'язує проблему,

00:13:35.260 --> 00:13:38.260
як потрапити з пункту А до пункту Б на цій карті.

00:13:38.260 --> 00:13:40.260
Він ще й визначає,

00:13:40.260 --> 00:13:42.260
де щоразу знаходиться найкращий пункт Б.

00:13:42.260 --> 00:13:45.260
Тобто він знає, де шукати

00:13:45.260 --> 00:13:47.260
невідомі місця.

00:13:47.260 --> 00:13:50.260
І таким чином наповнює карту.

00:13:50.260 --> 00:13:52.260
Насамкінець я розповім вам

00:13:52.260 --> 00:13:54.260
про ще один спосіб застосування роботів.

00:13:54.260 --> 00:13:57.260
А цих способів є чимало.

00:13:57.260 --> 00:13:59.260
Я професор, а в нашому колі вболівають за освіту.

00:13:59.260 --> 00:14:01.260
Роботи можуть кардинально змінити

00:14:01.260 --> 00:14:03.260
підхід до навчання у школі.

00:14:03.260 --> 00:14:05.260
Але ми зараз у південній Каліфорнії

00:14:05.260 --> 00:14:07.260
поблизу Лос-Анджелеса,

00:14:07.260 --> 00:14:09.260
тому я мушу завершити промову

00:14:09.260 --> 00:14:11.260
чимось веселим.

00:14:11.260 --> 00:14:13.260
І тому покажу вам музичне відео.

00:14:13.260 --> 00:14:16.260
Дозвольте представити вам творців цього відео --

00:14:16.260 --> 00:14:18.260
Алекса та Деніела.

00:14:18.260 --> 00:14:25.260
(Оплески)

00:14:25.260 --> 00:14:27.260
І ще хочу зауважити,

00:14:27.260 --> 00:14:30.260
що вони створили цей ролик за три останні дні

00:14:30.260 --> 00:14:32.260
після того, як їм зателефонував Кріс.

00:14:32.260 --> 00:14:34.260
Роботи, які грають у відео,

00:14:34.260 --> 00:14:36.260
цілком самостійні.

00:14:36.260 --> 00:14:39.260
Ви побачите, як дев'ять роботів грають на шести різних інструментах.

00:14:39.260 --> 00:14:43.260
Звичайно, це відео знято спеціально для TED 2012.

00:14:43.260 --> 00:14:46.260
Дивимось.

00:15:19.260 --> 00:15:29.260
(Музика)

00:16:23.260 --> 00:16:40.260
(Оплески)

