WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:07.000
翻译人员: Xiaoqiao Xie
校对人员: Angelia King

00:00:20.260 --> 00:00:22.260
早上好

00:00:22.260 --> 00:00:24.260
我今天想谈谈

00:00:24.260 --> 00:00:27.260
自主飞行沙滩球

00:00:27.260 --> 00:00:31.260
其实，是小型飞行器，像这一个

00:00:31.260 --> 00:00:34.260
我想和大家谈谈设计这些飞行器时的挑战

00:00:34.260 --> 00:00:36.260
和使用这些飞行器能给我们带来的

00:00:36.260 --> 00:00:38.260
很多用处

00:00:38.260 --> 00:00:40.260
这些飞行器

00:00:40.260 --> 00:00:43.260
源于无人驾驶的飞行器

00:00:43.260 --> 00:00:46.260
但是那些都体积很大

00:00:46.260 --> 00:00:48.260
通常上万磅重

00:00:48.260 --> 00:00:50.260
毫无灵活型可言

00:00:50.260 --> 00:00:52.260
它们也不是真的自主飞行的

00:00:52.260 --> 00:00:54.260
事实上，很多这些飞行器

00:00:54.260 --> 00:00:56.260
都是受飞行团队控制的

00:00:56.260 --> 00:00:59.260
包括好几个飞行员

00:00:59.260 --> 00:01:01.260
感应雷达操作员

00:01:01.260 --> 00:01:03.260
和团队协调员

00:01:03.260 --> 00:01:05.260
我们想设计的飞行器是这样的——

00:01:05.260 --> 00:01:07.260
这里有两张照片——

00:01:07.260 --> 00:01:10.260
是你能够在超市里买到的那种小飞行器

00:01:10.260 --> 00:01:13.260
小型直升机，四个螺旋桨

00:01:13.260 --> 00:01:17.260
不超过一米长

00:01:17.260 --> 00:01:19.260
只不过几磅重

00:01:19.260 --> 00:01:22.260
我们把它们稍微改造一下，加上感应器和处理器，

00:01:22.260 --> 00:01:24.260
它们就可以在室内飞

00:01:24.260 --> 00:01:26.260
用不着导航系统

00:01:26.260 --> 00:01:28.260
我现在拿着的这个飞行器

00:01:28.260 --> 00:01:30.260
是其中之一

00:01:30.260 --> 00:01:33.260
是两个学生做出来的

00:01:33.260 --> 00:01:35.260
艾利克斯和丹尼尔

00:01:35.260 --> 00:01:37.260
这个仅仅比零点一磅

00:01:37.260 --> 00:01:39.260
稍微重一点

00:01:39.260 --> 00:01:41.260
只需要大约十五瓦的电源

00:01:41.260 --> 00:01:43.260
你能看到

00:01:43.260 --> 00:01:45.260
它的直径大约只有八个英寸

00:01:45.260 --> 00:01:48.260
让我给你们快速解释一下

00:01:48.260 --> 00:01:50.260
这些飞行器是怎么工作的

00:01:50.260 --> 00:01:52.260
它有四个螺旋桨

00:01:52.260 --> 00:01:54.260
当四个螺旋桨转速相同

00:01:54.260 --> 00:01:56.260
这个飞行器就浮在空中

00:01:56.260 --> 00:01:59.260
当所有螺旋桨的速度提升时

00:01:59.260 --> 00:02:02.260
这个飞行器就加速升高

00:02:02.260 --> 00:02:04.260
当然了，如果飞行器已经是倾斜的

00:02:04.260 --> 00:02:06.260
向着地平线侧过来

00:02:06.260 --> 00:02:09.260
就会向这个方向加速

00:02:09.260 --> 00:02:12.260
怎么能让它侧过来呢，有两个途径

00:02:12.260 --> 00:02:14.260
从这张照片

00:02:14.260 --> 00:02:16.260
你能看到四号螺旋桨旋转加速

00:02:16.260 --> 00:02:18.260
同时二号螺旋桨转速变慢

00:02:18.260 --> 00:02:20.260
这时

00:02:20.260 --> 00:02:23.260
飞行器就能向一边倒

00:02:23.260 --> 00:02:25.260
反之亦然

00:02:25.260 --> 00:02:28.260
当三号螺旋桨加速

00:02:28.260 --> 00:02:30.260
一号减速时

00:02:30.260 --> 00:02:33.260
飞行器就向前倒

00:02:33.260 --> 00:02:35.260
最后

00:02:35.260 --> 00:02:37.260
如果任意两端的螺旋桨的转速

00:02:37.260 --> 00:02:39.260
大于另两端的螺旋桨的转速

00:02:39.260 --> 00:02:41.260
飞行器就能原地旋转

00:02:41.260 --> 00:02:43.260
所以装在飞行器上的处理器

00:02:43.260 --> 00:02:46.260
基本上能判断需要执行哪些动作

00:02:46.260 --> 00:02:48.260
然后把它们组合起来

00:02:48.260 --> 00:02:51.260
决定给螺旋桨下什么指令

00:02:51.260 --> 00:02:53.260
一秒钟六百次

00:02:53.260 --> 00:02:55.260
简单地说这些飞行器就是这么工作的

00:02:55.260 --> 00:02:57.260
这个设计的一个好处

00:02:57.260 --> 00:02:59.260
就是小巧

00:02:59.260 --> 00:03:02.260
这些飞行器很灵活

00:03:02.260 --> 00:03:04.260
这里的R

00:03:04.260 --> 00:03:06.260
是飞行器的长度

00:03:06.260 --> 00:03:09.260
其实是半径

00:03:09.260 --> 00:03:12.260
当半径变小时

00:03:12.260 --> 00:03:14.260
很多物理参数都会变

00:03:14.260 --> 00:03:16.260
最重要的一个参数是

00:03:16.260 --> 00:03:18.260
惯性， 也就是对于运动的阻力

00:03:18.260 --> 00:03:20.260
结果是

00:03:20.260 --> 00:03:23.260
惯性决定角速度

00:03:23.260 --> 00:03:26.260
它是半径的五次方函数

00:03:26.260 --> 00:03:28.260
当半径变得越来越小时

00:03:28.260 --> 00:03:31.260
惯性越来越快地减小

00:03:31.260 --> 00:03:34.260
另一个结果是角速度的加速度

00:03:34.260 --> 00:03:36.260
也就是这里的希腊字母alpha

00:03:36.260 --> 00:03:38.260
等于一除以半径

00:03:38.260 --> 00:03:40.260
也就是半径的倒数

00:03:40.260 --> 00:03:43.260
当半径越小时飞行器能转弯越快

00:03:43.260 --> 00:03:45.260
这个视频清楚地显示

00:03:45.260 --> 00:03:48.260
大家看右下角的飞行器

00:03:48.260 --> 00:03:50.260
正在做一个三百六十度翻转

00:03:50.260 --> 00:03:52.260
只需要不到半秒

00:03:52.260 --> 00:03:55.260
连续翻转，稍微时间长一点

00:03:55.260 --> 00:03:57.260
这里飞行器上用的处理器

00:03:57.260 --> 00:03:59.260
能够从飞行器上的加速度计

00:03:59.260 --> 00:04:01.260
和陀螺仪得到反馈信息

00:04:01.260 --> 00:04:03.260
然后算出，就像我刚才讲的

00:04:03.260 --> 00:04:05.260
一秒钟六百个指令

00:04:05.260 --> 00:04:07.260
来稳定控制这个飞行器

00:04:07.260 --> 00:04:10.260
在左边你能看到丹尼尔把飞行器抛到空中

00:04:10.260 --> 00:04:12.260
你能看到飞行器的控制有多快

00:04:12.260 --> 00:04:14.260
不管你怎么扔

00:04:14.260 --> 00:04:18.260
飞行器都能恢复平衡飞回来

00:04:18.260 --> 00:04:20.260
为什么我们要设计这种飞行器呢？

00:04:20.260 --> 00:04:23.260
因为这样的飞行器有很多用处

00:04:23.260 --> 00:04:26.260
你能把它们放进像这样的大楼里

00:04:26.260 --> 00:04:29.260
作为报警器去寻找入侵者

00:04:29.260 --> 00:04:32.260
寻找生化泄漏

00:04:32.260 --> 00:04:34.260
或者煤气泄漏

00:04:34.260 --> 00:04:36.260
你还能用它们

00:04:36.260 --> 00:04:38.260
建摩天大楼呢

00:04:38.260 --> 00:04:42.260
这里是飞行器在搬梁运柱

00:04:42.260 --> 00:04:45.260
架构一个立方体的建筑

00:04:45.260 --> 00:04:48.260
这里我想和大家介绍一下

00:04:48.260 --> 00:04:51.260
这些机器人能被用来运货

00:04:51.260 --> 00:04:54.260
当然一个问题是这些小飞行器

00:04:54.260 --> 00:04:56.260
担不了多少重量

00:04:56.260 --> 00:04:58.260
你可能需要很多飞行器

00:04:58.260 --> 00:05:00.260
来搬运重物

00:05:00.260 --> 00:05:02.260
我们新做了个实验——

00:05:02.260 --> 00:05:04.260
其实不那么新了——

00:05:04.260 --> 00:05:07.260
在日本仙台，地震后不久

00:05:07.260 --> 00:05:10.260
我们能把这些飞行器

00:05:10.260 --> 00:05:12.260
送进倒塌的楼房

00:05:12.260 --> 00:05:15.260
或者核反应堆大楼

00:05:15.260 --> 00:05:18.260
来探测放射性强度

00:05:19.260 --> 00:05:21.260
一个根本的问题

00:05:21.260 --> 00:05:24.260
是当这些飞行器需要自控飞行，

00:05:24.260 --> 00:05:26.260
它们自己得弄明白

00:05:26.260 --> 00:05:28.260
怎么从一个地点到另一个地点

00:05:28.260 --> 00:05:30.260
这就变得有点难度了

00:05:30.260 --> 00:05:33.260
因为这些飞行器的动力学是很复杂的

00:05:33.260 --> 00:05:35.260
事实上它们总在对付十二维的空间

00:05:35.260 --> 00:05:37.260
这里我们用了一点小技巧

00:05:37.260 --> 00:05:40.260
我们拿这个十二位的空间

00:05:40.260 --> 00:05:42.260
把它们转换成

00:05:42.260 --> 00:05:44.260
平的四维空间

00:05:44.260 --> 00:05:46.260
这个四维空间

00:05:46.260 --> 00:05:49.260
包括了横轴，纵轴和竖轴，还有旋转轴

00:05:49.260 --> 00:05:51.260
这些飞行器只需要

00:05:51.260 --> 00:05:55.260
计划一件事，我们管它叫最小化加加加速度轨道

00:05:55.260 --> 00:05:57.260
提醒大家一点点物理学

00:05:57.260 --> 00:05:59.260
这里我们有位置向量，导数，速度

00:05:59.260 --> 00:06:01.260
和加速度

00:06:01.260 --> 00:06:03.260
还有加加速度

00:06:03.260 --> 00:06:05.260
还有加加加速度

00:06:05.260 --> 00:06:08.260
这个飞行器把加加加速度最小化

00:06:08.260 --> 00:06:10.260
基本上它的工作是

00:06:10.260 --> 00:06:12.260
创造一个光滑优雅的运动曲线

00:06:12.260 --> 00:06:15.260
这样来绕开障碍物

00:06:15.260 --> 00:06:18.260
所以这个四维平面中，这个飞行器使用

00:06:18.260 --> 00:06:20.260
最小化加加加速度轨道， 然后转换回到

00:06:20.260 --> 00:06:22.260
复杂的十二维空间

00:06:22.260 --> 00:06:24.260
飞行器必须这样做来

00:06:24.260 --> 00:06:26.260
获得控制和执行动作

00:06:26.260 --> 00:06:28.260
让我给大家看几个例子

00:06:28.260 --> 00:06:30.260
这些最小化加加加速度轨道是什么样的

00:06:30.260 --> 00:06:32.260
这是第一个视频

00:06:32.260 --> 00:06:34.260
这个飞行器从一个地点飞到另一个地点

00:06:34.260 --> 00:06:36.260
中间经停一下

00:06:42.260 --> 00:06:44.260
显然这个飞行器能

00:06:44.260 --> 00:06:46.260
飞出一个曲线轨道

00:06:46.260 --> 00:06:48.260
还有这样的打圈的轨道

00:06:48.260 --> 00:06:51.260
这里飞行器对抗两倍的重力

00:06:52.260 --> 00:06:56.260
它们上方还有一个动感监控摄像机，每秒一百幅画面

00:06:56.260 --> 00:06:59.260
来告诉这些飞行器它们的位置

00:06:59.260 --> 00:07:02.260
也能告诉这些飞行器障碍物在哪里

00:07:02.260 --> 00:07:04.260
障碍物移动都不要紧

00:07:04.260 --> 00:07:07.260
当丹尼尔把套圈扔到空中

00:07:07.260 --> 00:07:09.260
飞行器就开始计算套圈的位置

00:07:09.260 --> 00:07:13.260
试图预测怎么才能最有效地钻过去

00:07:13.260 --> 00:07:15.260
作为一个科研人员

00:07:15.260 --> 00:07:18.260
我们总在试图钻出重重圈套，拿到更多经费

00:07:18.260 --> 00:07:21.260
甚至训练了我们的飞行器也来做这个

00:07:21.260 --> 00:07:27.260
（掌声）

00:07:27.260 --> 00:07:29.260
另一个飞行器能做的事情

00:07:29.260 --> 00:07:32.260
是当我们预先编入一些轨迹

00:07:32.260 --> 00:07:34.260
或者它自己学着走过的，它能够记住

00:07:34.260 --> 00:07:36.260
这里大家能看到

00:07:36.260 --> 00:07:38.260
飞行器能够（在预设轨迹上）加上一个动作

00:07:38.260 --> 00:07:40.260
积聚动量

00:07:40.260 --> 00:07:43.260
改变它的定向，再回到预设轨迹上来

00:07:43.260 --> 00:07:46.260
它必须这样做因为这个窗上的缝隙

00:07:46.260 --> 00:07:50.260
只比它的宽度大一点点

00:07:50.260 --> 00:07:53.260
所以就像是一个跳水运动员

00:07:53.260 --> 00:07:55.260
从跳板上起跳，聚集动量，

00:07:55.260 --> 00:07:58.260
做个旋转，两圈半

00:07:58.260 --> 00:08:00.260
然后优雅地回到平衡

00:08:00.260 --> 00:08:02.260
这个飞行器是自主这样做的

00:08:02.260 --> 00:08:05.260
它知道怎么把小段的轨迹组合起来

00:08:05.260 --> 00:08:09.260
来做这些高难度的技巧

00:08:09.260 --> 00:08:11.260
现在我想换个话题谈谈这些小型飞行器

00:08:11.260 --> 00:08:14.260
的不足之处，就是体积小

00:08:14.260 --> 00:08:16.260
我已经提过

00:08:16.260 --> 00:08:18.260
我们需要使用很多飞行器

00:08:18.260 --> 00:08:21.260
来克服体积小的不便

00:08:21.260 --> 00:08:23.260
一个难点是

00:08:23.260 --> 00:08:26.260
怎么使得这些飞行器集体飞行？

00:08:26.260 --> 00:08:28.260
我们在大自然中寻找答案

00:08:28.260 --> 00:08:30.260
我想给大家看一个视频

00:08:30.260 --> 00:08:32.260
是关于Aphaenogaster沙漠蚁的

00:08:32.260 --> 00:08:35.260
在史狄文·普热特教授的实验室里，这些蚂蚁一起搬运重物

00:08:35.260 --> 00:08:37.260
这是一个无花果

00:08:37.260 --> 00:08:39.260
事实上无论什么东西，只要蘸上无花果汁

00:08:39.260 --> 00:08:42.260
这些蚂蚁都会把它们带回巢去

00:08:42.260 --> 00:08:45.260
这些蚂蚁没有任何中央调控

00:08:45.260 --> 00:08:47.260
它们是靠感应邻近的蚂蚁

00:08:47.260 --> 00:08:49.260
它们也没有明确的交流

00:08:49.260 --> 00:08:51.260
但是因为它们能够感应邻近的蚂蚁

00:08:51.260 --> 00:08:53.260
也能感应抬着的重物

00:08:53.260 --> 00:08:56.260
整群的蚂蚁有默契

00:08:56.260 --> 00:08:58.260
这样的协调

00:08:58.260 --> 00:09:01.260
正是飞行器需要的

00:09:01.260 --> 00:09:03.260
当一个飞行器

00:09:03.260 --> 00:09:05.260
被其他飞行器环绕时——

00:09:05.260 --> 00:09:07.260
让我们注意 I 和 J 这两个——

00:09:07.260 --> 00:09:09.260
当它们成群飞行时

00:09:09.260 --> 00:09:12.260
我们希望这两个飞行器

00:09:12.260 --> 00:09:14.260
能够监控它们之间的距离

00:09:14.260 --> 00:09:16.260
我们需要确定

00:09:16.260 --> 00:09:18.260
这个距离是在可接受的范围里的

00:09:18.260 --> 00:09:21.260
飞行器要检测这个变化

00:09:21.260 --> 00:09:23.260
在控制指令中计算进去

00:09:23.260 --> 00:09:25.260
也是每秒一百次

00:09:25.260 --> 00:09:28.260
这个控制指令每秒会被送到马达六百次

00:09:28.260 --> 00:09:30.260
所以这个程序

00:09:30.260 --> 00:09:32.260
是分散化执行的

00:09:32.260 --> 00:09:34.260
再有，如果你有很多很多飞行器

00:09:34.260 --> 00:09:38.260
要完成集体飞行任务，能足够快地集中协调所有这些信息

00:09:38.260 --> 00:09:41.260
是几乎不可能的

00:09:41.260 --> 00:09:43.260
加上这些飞行器只能

00:09:43.260 --> 00:09:45.260
依靠局部的信息来决定做什么动作

00:09:45.260 --> 00:09:47.260
也就是要靠感应邻近的飞行器

00:09:47.260 --> 00:09:49.260
最后

00:09:49.260 --> 00:09:51.260
我们希望这些机器人

00:09:51.260 --> 00:09:53.260
不知道它们的邻居是谁

00:09:53.260 --> 00:09:56.260
也就是匿名飞行

00:09:56.260 --> 00:09:58.260
下一个我想给大家展示的

00:09:58.260 --> 00:10:00.260
是这段视频

00:10:00.260 --> 00:10:03.260
这二十个小型飞行器

00:10:03.260 --> 00:10:05.260
成群飞行

00:10:05.260 --> 00:10:08.260
它们在监测邻居的位置

00:10:08.260 --> 00:10:10.260
维持群队

00:10:10.260 --> 00:10:12.260
群队的形状还能变

00:10:12.260 --> 00:10:14.260
它们可以在一个平面上飞

00:10:14.260 --> 00:10:16.260
也可以上中下地飞

00:10:16.260 --> 00:10:18.260
大家可以看到

00:10:18.260 --> 00:10:21.260
它们能从上中下的群队变成平面的

00:10:21.260 --> 00:10:23.260
在飞越障碍物的时候

00:10:23.260 --> 00:10:27.260
它们能边飞边变换队形

00:10:27.260 --> 00:10:30.260
我想强调，这些飞行器距离都很近

00:10:30.260 --> 00:10:32.260
比如这个群队，八架飞行器

00:10:32.260 --> 00:10:34.260
相互距离不过几英寸

00:10:34.260 --> 00:10:37.260
尽管在空气动力学上

00:10:37.260 --> 00:10:39.260
这些螺旋桨相互干扰

00:10:39.260 --> 00:10:41.260
它们还是能够维持平稳飞行

00:10:41.260 --> 00:10:48.260
（掌声）

00:10:48.260 --> 00:10:50.260
现在它们会成群飞了

00:10:50.260 --> 00:10:52.260
它们就可以合作抬重物

00:10:52.260 --> 00:10:54.260
这里展示的是

00:10:54.260 --> 00:10:57.260
我们能够把飞行器的能力

00:10:57.260 --> 00:10:59.260
翻倍，翻三倍，四倍

00:10:59.260 --> 00:11:01.260
仅仅通过让它们和邻居合作，大家可以看到

00:11:01.260 --> 00:11:04.260
这样做的一个不便之处

00:11:04.260 --> 00:11:06.260
就是当加大数量时——

00:11:06.260 --> 00:11:08.260
比如使用很多飞行器来抬一个物体

00:11:08.260 --> 00:11:11.260
你其实是加大了惯性

00:11:11.260 --> 00:11:14.260
这样它们就不够灵活了，这是一个代价

00:11:14.260 --> 00:11:17.260
但是你可以增加载荷承载量

00:11:17.260 --> 00:11:19.260
另一个我想给大家展示的用处是——

00:11:19.260 --> 00:11:21.260
这是在我们实验室

00:11:21.260 --> 00:11:23.260
这是研究生昆汀·林夕的工作

00:11:23.260 --> 00:11:26.260
他的算法程序告诉这些飞行器

00:11:26.260 --> 00:11:28.260
怎么使用桁架结构

00:11:28.260 --> 00:11:30.260
自动建造

00:11:30.260 --> 00:11:33.260
一个立方体

00:11:33.260 --> 00:11:35.260
他的算法程序告诉这些机器人

00:11:35.260 --> 00:11:37.260
该用哪一块

00:11:37.260 --> 00:11:39.260
什么时候用，用在哪里

00:11:39.260 --> 00:11:41.260
从这个视频我们可以看到——

00:11:41.260 --> 00:11:43.260
这个视频是十倍或者十四倍速度播放的——

00:11:43.260 --> 00:11:46.260
大家可以看到飞行器在搭建很不一样的构架

00:11:46.260 --> 00:11:48.260
并且，所有的运动都是自主的

00:11:48.260 --> 00:11:50.260
昆汀仅仅是

00:11:50.260 --> 00:11:52.260
给它们一个蓝图

00:11:52.260 --> 00:11:56.260
也就是他想建的设计

00:11:56.260 --> 00:11:59.260
所有这里展示的实验

00:11:59.260 --> 00:12:01.260
所有这些演习

00:12:01.260 --> 00:12:04.260
都是靠着它们自己的动感检测摄像机完成的

00:12:04.260 --> 00:12:06.260
那么，当它们离开实验室

00:12:06.260 --> 00:12:09.260
来到真实世界的时候，又怎么样呢？

00:12:09.260 --> 00:12:12.260
没有卫星导航会怎么样？

00:12:12.260 --> 00:12:14.260
这个飞行器

00:12:14.260 --> 00:12:16.260
其实装有一个摄像机

00:12:16.260 --> 00:12:19.260
和一个激光测距仪，一个激光扫描仪

00:12:19.260 --> 00:12:21.260
它可以使用这些探测装置

00:12:21.260 --> 00:12:23.260
来描绘周围的环境的地图

00:12:23.260 --> 00:12:26.260
这个地图包括很多细节——

00:12:26.260 --> 00:12:28.260
玄关，窗户

00:12:28.260 --> 00:12:30.260
人，家具——

00:12:30.260 --> 00:12:32.260
还能弄清楚相对于这些东西

00:12:32.260 --> 00:12:34.260
它自己在哪里

00:12:34.260 --> 00:12:36.260
所以这里没有整体的协调系统

00:12:36.260 --> 00:12:39.260
这个协调系统是靠飞行器自己来完成的

00:12:39.260 --> 00:12:42.260
它自己在哪里，前面有什么

00:12:42.260 --> 00:12:45.260
还能利用周围环境为自己找到出路

00:12:45.260 --> 00:12:47.260
这里我想给大家再看一段视频

00:12:47.260 --> 00:12:49.260
这个算法程序是法兰克·沈

00:12:49.260 --> 00:12:51.260
和南希·麦克教授编的

00:12:51.260 --> 00:12:55.260
当这个飞行器第一次飞入一个建筑

00:12:55.260 --> 00:12:58.260
它是怎么边飞边画地图的

00:12:58.260 --> 00:13:01.260
这个飞行器弄明白了这些细节

00:13:01.260 --> 00:13:03.260
开始画地图

00:13:03.260 --> 00:13:05.260
弄明白了相对这些细节，自己在哪里，

00:13:05.260 --> 00:13:07.260
然后自我定位

00:13:07.260 --> 00:13:09.260
全以每秒一百次的速度发生

00:13:09.260 --> 00:13:11.260
这就给我们一个机会来控制这些算法

00:13:11.260 --> 00:13:13.260
像我之前讲过的

00:13:13.260 --> 00:13:15.260
所以这个机器人其实是

00:13:15.260 --> 00:13:17.260
被法兰克遥控的

00:13:17.260 --> 00:13:19.260
但是它自己也可以弄明白

00:13:19.260 --> 00:13:21.260
怎么飞

00:13:21.260 --> 00:13:23.260
假设我想放一个这样的飞行器进一幢楼

00:13:23.260 --> 00:13:25.260
我并不知道里面是什么样的

00:13:25.260 --> 00:13:27.260
我可以让它飞进去

00:13:27.260 --> 00:13:29.260
创造一个地图

00:13:29.260 --> 00:13:32.260
然后飞回来告诉我里面是什么样的

00:13:32.260 --> 00:13:35.260
所以，这个飞行器不仅仅解决了

00:13:35.260 --> 00:13:38.260
怎么从一点到另一点的问题

00:13:38.260 --> 00:13:40.260
还能够随时知道

00:13:40.260 --> 00:13:42.260
最好的目标在哪里

00:13:42.260 --> 00:13:45.260
基本上，它知道该去搜索哪里

00:13:45.260 --> 00:13:47.260
因为那里的信息是最“未知”的

00:13:47.260 --> 00:13:50.260
这就是它怎么填充这个地图

00:13:50.260 --> 00:13:52.260
这里我想展示给大家

00:13:52.260 --> 00:13:54.260
最后一个用途

00:13:54.260 --> 00:13:57.260
当然这个技术有很多很多用途

00:13:57.260 --> 00:13:59.260
我是个教授，我们很关心教育

00:13:59.260 --> 00:14:01.260
这样的飞行器其实可以改变

00:14:01.260 --> 00:14:03.260
我们的小学和中学教育

00:14:03.260 --> 00:14:05.260
我们在南加州

00:14:05.260 --> 00:14:07.260
离洛杉矶很近

00:14:07.260 --> 00:14:09.260
所以我不得不

00:14:09.260 --> 00:14:11.260
放点娱乐元素进去

00:14:11.260 --> 00:14:13.260
我想给大家看一个音乐视频

00:14:13.260 --> 00:14:16.260
我想向你们介绍艾利克斯和丹尼尔，

00:14:16.260 --> 00:14:18.260
他们是导演兼制作

00:14:18.260 --> 00:14:25.260
（掌声）

00:14:25.260 --> 00:14:27.260
在我播放这个视频前

00:14:27.260 --> 00:14:30.260
我想告诉大家这是他们在过去三天做出来的

00:14:30.260 --> 00:14:32.260
因为主持人克瑞斯给我打了个电话

00:14:32.260 --> 00:14:34.260
在这个视频中表演的飞行器

00:14:34.260 --> 00:14:36.260
全是靠自控表演的

00:14:36.260 --> 00:14:39.260
你能看到九个机器人，演奏六种不同乐器

00:14:39.260 --> 00:14:43.260
当然了，这是为了今年的TED2012特别制作的

00:14:43.260 --> 00:14:46.260
请欣赏

00:15:19.260 --> 00:15:29.260
（音乐）

00:16:23.260 --> 00:16:40.260
（掌声）

