WEBVTT
Kind: captions
Language: ru

00:00:00.000 --> 00:00:07.000
Переводчик: Olga Dmitrochenkova
Редактор: Aliaksandr Autayeu

00:00:20.260 --> 00:00:22.260
Доброе утро.

00:00:22.260 --> 00:00:24.260
Сегодня я расскажу вам

00:00:24.260 --> 00:00:27.260
о самоуправляемых летающих пляжных мячах.

00:00:27.260 --> 00:00:31.260
Шутка. Я расскажу о вот таких быстрых авиароботах.

00:00:31.260 --> 00:00:34.260
Вы узнаете о проблемах их создания

00:00:34.260 --> 00:00:36.260
и о некоторых потрясающих возможностях

00:00:36.260 --> 00:00:38.260
применения этой технологии.

00:00:38.260 --> 00:00:40.260
Эти роботы —

00:00:40.260 --> 00:00:43.260
беспилотные летательные аппараты.

00:00:43.260 --> 00:00:46.260
Однако вот эти транспортные средства довольно большие,

00:00:46.260 --> 00:00:48.260
весят тысячи килограммов

00:00:48.260 --> 00:00:50.260
и медленны.

00:00:50.260 --> 00:00:52.260
Они даже не самоуправляемые.

00:00:52.260 --> 00:00:54.260
Многие из них

00:00:54.260 --> 00:00:56.260
управляются командами

00:00:56.260 --> 00:00:59.260
из нескольких пилотов,

00:00:59.260 --> 00:01:01.260
операторов аппаратуры

00:01:01.260 --> 00:01:03.260
и координаторов полёта.

00:01:03.260 --> 00:01:05.260
Мы заинтересованы в разработке роботов,

00:01:05.260 --> 00:01:07.260
которые вы сможете купить в магазине —

00:01:07.260 --> 00:01:10.260
вот ещё несколько изображений.

00:01:10.260 --> 00:01:13.260
Это вертолёты с четырьмя несущими винтами.

00:01:13.260 --> 00:01:17.260
Их длина составляет около метра,

00:01:17.260 --> 00:01:19.260
а вес — несколько килограммов.

00:01:19.260 --> 00:01:22.260
Мы устанавливаем датчики и процессоры,

00:01:22.260 --> 00:01:24.260
и роботы обретают возможность летать

00:01:24.260 --> 00:01:26.260
в помещении без GPS.

00:01:26.260 --> 00:01:28.260
В моих руках робот,

00:01:28.260 --> 00:01:30.260
созданный

00:01:30.260 --> 00:01:33.260
двумя студентами —

00:01:33.260 --> 00:01:35.260
Алексом и Даниэлем.

00:01:35.260 --> 00:01:37.260
Он весит чуть более

00:01:37.260 --> 00:01:39.260
нескольких десятков граммов

00:01:39.260 --> 00:01:41.260
и потребляет около 15 Вт энергии.

00:01:41.260 --> 00:01:43.260
Как вы можете видеть,

00:01:43.260 --> 00:01:45.260
он около 20 см в диаметре.

00:01:45.260 --> 00:01:48.260
Позвольте вкратце рассказать вам,

00:01:48.260 --> 00:01:50.260
как работают эти роботы.

00:01:50.260 --> 00:01:52.260
У робота есть 4 несущих винта.

00:01:52.260 --> 00:01:54.260
Если они вращаются на одной скорости,

00:01:54.260 --> 00:01:56.260
робот парит в воздухе.

00:01:56.260 --> 00:01:59.260
Если вы увеличиваете скорость каждого винта,

00:01:59.260 --> 00:02:02.260
робот ускоряется и летит вверх.

00:02:02.260 --> 00:02:04.260
Естественно, если робот был наклонён

00:02:04.260 --> 00:02:06.260
по отношению к горизонту,

00:02:06.260 --> 00:02:09.260
ускорение будет происходить в этом направлении.

00:02:09.260 --> 00:02:12.260
Есть 2 способа его наклонить.

00:02:12.260 --> 00:02:14.260
На этом изображении видно,

00:02:14.260 --> 00:02:16.260
что винт №4 вращается быстрее,

00:02:16.260 --> 00:02:18.260
а винт №2 вращается медленнее.

00:02:18.260 --> 00:02:20.260
Именно это создаёт момент,

00:02:20.260 --> 00:02:23.260
при котором робот наклоняется.

00:02:23.260 --> 00:02:25.260
Второй способ таков:

00:02:25.260 --> 00:02:28.260
увеличиваем скорость вращения винта №3

00:02:28.260 --> 00:02:30.260
и уменьшаем скорость вращения винта №1,

00:02:30.260 --> 00:02:33.260
и робот наклоняется вперёд.

00:02:33.260 --> 00:02:35.260
Наконец, если вы вращаете

00:02:35.260 --> 00:02:37.260
одну противоположную пару винтов

00:02:37.260 --> 00:02:39.260
с большей скоростью, чем другую,

00:02:39.260 --> 00:02:41.260
робот вращается по вертикальной оси.

00:02:41.260 --> 00:02:43.260
Встроенный в робот процессор определяет,

00:02:43.260 --> 00:02:46.260
какие движения надо выполнить,

00:02:46.260 --> 00:02:48.260
сопоставляет эти движения и решает,

00:02:48.260 --> 00:02:51.260
какие команды отправить на винты,

00:02:51.260 --> 00:02:53.260
посылая 600 команд в секунду.

00:02:53.260 --> 00:02:55.260
Вот как это работает.

00:02:55.260 --> 00:02:57.260
Одно из преимуществ этой модели —

00:02:57.260 --> 00:02:59.260
её естественная быстрота

00:02:59.260 --> 00:03:02.260
при уменьшении размеров.

00:03:02.260 --> 00:03:04.260
R на этом изображении —

00:03:04.260 --> 00:03:06.260
характерная длина робота.

00:03:06.260 --> 00:03:09.260
Это половина его диаметра.

00:03:09.260 --> 00:03:12.260
Множество физических параметров изменяются

00:03:12.260 --> 00:03:14.260
при уменьшении R.

00:03:14.260 --> 00:03:16.260
Самый главный из них —

00:03:16.260 --> 00:03:18.260
это инерция или сопротивление движению.

00:03:18.260 --> 00:03:20.260
Оказывается, что инерция,

00:03:20.260 --> 00:03:23.260
регулирующая угловое движение,

00:03:23.260 --> 00:03:26.260
пропорциональна R в пятой степени.

00:03:26.260 --> 00:03:28.260
Уменьшая R,

00:03:28.260 --> 00:03:31.260
мы значительно уменьшаем и инерцию.

00:03:31.260 --> 00:03:34.260
Угловое ускорение,

00:03:34.260 --> 00:03:36.260
обозначенное греческой буквой альфа,

00:03:36.260 --> 00:03:38.260
рассчитывается по формуле 1/R.

00:03:38.260 --> 00:03:40.260
Оно обратно пропорционально R.

00:03:40.260 --> 00:03:43.260
Чем оно меньше, тем быстрее вы можете вращаться.

00:03:43.260 --> 00:03:45.260
Вот видео, демонстрирующее этот процесс.

00:03:45.260 --> 00:03:48.260
Внизу справа вы видите робота,

00:03:48.260 --> 00:03:50.260
выполняющего переворот на 360°

00:03:50.260 --> 00:03:52.260
менее чем за полсекунды.

00:03:52.260 --> 00:03:55.260
Несколько переворотов — чуть больше времени.

00:03:55.260 --> 00:03:57.260
Встроенные процессоры получают

00:03:57.260 --> 00:03:59.260
информацию от датчиков ускорения

00:03:59.260 --> 00:04:01.260
и гироскопов на борту.

00:04:01.260 --> 00:04:03.260
Как я уже сказал, они рассчитывают

00:04:03.260 --> 00:04:05.260
и посылают 600 команд в секунду,

00:04:05.260 --> 00:04:07.260
чтобы поддержать устойчивость робота.

00:04:07.260 --> 00:04:10.260
Слева вы видите, как Даниэль подбрасывает робота в воздух.

00:04:10.260 --> 00:04:12.260
Посмотрите, насколько надёжен его контроль.

00:04:12.260 --> 00:04:14.260
Независимо от того, как вы его бросаете,

00:04:14.260 --> 00:04:18.260
роботу удаётся вернуться в исходное положение.

00:04:18.260 --> 00:04:20.260
Для чего нужны такие роботы?

00:04:20.260 --> 00:04:23.260
У них много областей применения.

00:04:23.260 --> 00:04:26.260
Мы можем заслать их в здания

00:04:26.260 --> 00:04:29.260
для поиска злоумышленников,

00:04:29.260 --> 00:04:32.260
обнаружения биохимических или

00:04:32.260 --> 00:04:34.260
газообразных утечек.

00:04:34.260 --> 00:04:36.260
Их можно также использовать

00:04:36.260 --> 00:04:38.260
в строительстве объектов.

00:04:38.260 --> 00:04:42.260
Вот роботы, переносящие балки, колонны

00:04:42.260 --> 00:04:45.260
и создающие кубообразные структуры.

00:04:45.260 --> 00:04:48.260
Чуть позже я вернусь к этому.

00:04:48.260 --> 00:04:51.260
Роботов можно использовать для переводки грузов.

00:04:51.260 --> 00:04:54.260
Недостатком этих маленьких роботов является

00:04:54.260 --> 00:04:56.260
их полезная грузоподъёмность.

00:04:56.260 --> 00:04:58.260
Поэтому вам могут понадобиться

00:04:58.260 --> 00:05:00.260
несколько роботов для работы.

00:05:00.260 --> 00:05:02.260
Вот недавно проведённый нами эксперимент,

00:05:02.260 --> 00:05:04.260
хотя он не такой уж и недавний.

00:05:04.260 --> 00:05:07.260
Это было в Сендае сразу после землетрясения.

00:05:07.260 --> 00:05:10.260
Роботы могут быть отправлены в разрушенные здания

00:05:10.260 --> 00:05:12.260
для оценки ущерба после стихийных бедствий;

00:05:12.260 --> 00:05:15.260
или посланы в заражённые радиацией здания

00:05:15.260 --> 00:05:18.260
для определения уровня радиации.

00:05:19.260 --> 00:05:21.260
Чтобы быть самоуправляющимся,

00:05:21.260 --> 00:05:24.260
роботу необходимо решить одну из ключевых проблем,

00:05:24.260 --> 00:05:26.260
а именно — понять,

00:05:26.260 --> 00:05:28.260
как добраться из точки А в точку Б.

00:05:28.260 --> 00:05:30.260
Это совсем не простая задача,

00:05:30.260 --> 00:05:33.260
поскольку динамика этого робота довольно сложна.

00:05:33.260 --> 00:05:35.260
Эти роботы живут в 12-мерном пространстве.

00:05:35.260 --> 00:05:37.260
Мы пошли на маленькую хитрость:

00:05:37.260 --> 00:05:40.260
взяли изогнутое 12-мерное пространство

00:05:40.260 --> 00:05:42.260
и преобразили его

00:05:42.260 --> 00:05:44.260
в плоское 4-мерное пространство.

00:05:44.260 --> 00:05:46.260
4-мерное пространство

00:05:46.260 --> 00:05:49.260
состоит из X, Y, Z и угла рыскания.

00:05:49.260 --> 00:05:51.260
Задача робота — спланировать

00:05:51.260 --> 00:05:55.260
минимальную и быструю траекторию.

00:05:55.260 --> 00:05:57.260
Напомню вам физику:

00:05:57.260 --> 00:05:59.260
существуют производные позиции —

00:05:59.260 --> 00:06:01.260
скорость, затем ускорение,

00:06:01.260 --> 00:06:03.260
а потом рывок

00:06:03.260 --> 00:06:05.260
и толчок.

00:06:05.260 --> 00:06:08.260
Робот минимизирует эффект толчка

00:06:08.260 --> 00:06:10.260
и таким образом делает

00:06:10.260 --> 00:06:12.260
движения гладкими и изящными.

00:06:12.260 --> 00:06:15.260
Он также избегает препятствия.

00:06:15.260 --> 00:06:18.260
Минимальные траектории в плоском пространстве

00:06:18.260 --> 00:06:20.260
затем преобразуются обратно

00:06:20.260 --> 00:06:22.260
в сложное 12-мерное пространство,

00:06:22.260 --> 00:06:24.260
которым робот должен владеть

00:06:24.260 --> 00:06:26.260
для контроля и выполнения задач.

00:06:26.260 --> 00:06:28.260
Позвольте показать вам,

00:06:28.260 --> 00:06:30.260
как выглядят эти минимальные траектории.

00:06:30.260 --> 00:06:32.260
В первом видео вы видите,

00:06:32.260 --> 00:06:34.260
как робот движется из точки А в точку Б

00:06:34.260 --> 00:06:36.260
через промежуточную точку.

00:06:42.260 --> 00:06:44.260
Роботы, естественно, способны

00:06:44.260 --> 00:06:46.260
выполнять любые кривые траектории.

00:06:46.260 --> 00:06:48.260
В этих круговых траекториях

00:06:48.260 --> 00:06:51.260
ускорение робота равно почти двум g.

00:06:52.260 --> 00:06:56.260
На борту есть камеры захвата движения,

00:06:56.260 --> 00:06:59.260
сообщающие роботу его местоположение 100 раз в секунду.

00:06:59.260 --> 00:07:02.260
Они также указывают ему на препятствия.

00:07:02.260 --> 00:07:04.260
Препятствия могут перемещаться.

00:07:04.260 --> 00:07:07.260
Посмотрите, Даниэль подбрасывает обруч,

00:07:07.260 --> 00:07:09.260
робот рассчитывает положение обруча

00:07:09.260 --> 00:07:13.260
и вычисляет, как лучше преодолеть его.

00:07:13.260 --> 00:07:15.260
Учёные часто из кожи вон лезут,

00:07:15.260 --> 00:07:18.260
добиваясь финансирования своих лабораторий.

00:07:18.260 --> 00:07:21.260
Поэтому и наши роботы умеют это делать.

00:07:21.260 --> 00:07:27.260
(Аплодисменты)

00:07:27.260 --> 00:07:29.260
Ещё робот может запоминать

00:07:29.260 --> 00:07:32.260
заученные или запрограммированные

00:07:32.260 --> 00:07:34.260
части траектории.

00:07:34.260 --> 00:07:36.260
Здесь мы видим, как робот

00:07:36.260 --> 00:07:38.260
сочетает движение,

00:07:38.260 --> 00:07:40.260
создающее импульс,

00:07:40.260 --> 00:07:43.260
меняет ориентацию и затем обретает равновесие.

00:07:43.260 --> 00:07:46.260
Это нужно, потому что проём окна

00:07:46.260 --> 00:07:50.260
лишь немного шире робота.

00:07:50.260 --> 00:07:53.260
Ныряльщик на трамплине отталкивается от него,

00:07:53.260 --> 00:07:55.260
чтобы набрать движущую силу,

00:07:55.260 --> 00:07:58.260
делает пируэт в два с половиной оборота

00:07:58.260 --> 00:08:00.260
и затем изящно выпрямляется.

00:08:00.260 --> 00:08:02.260
По сути, наш робот делает то же самое.

00:08:02.260 --> 00:08:05.260
Робот знает, как соотнести части траекторий

00:08:05.260 --> 00:08:09.260
для выполнения сложных задач.

00:08:09.260 --> 00:08:11.260
Сменим тему.

00:08:11.260 --> 00:08:14.260
Одним из недостатков маленьких роботов является их размер.

00:08:14.260 --> 00:08:16.260
Как я уже отметил,

00:08:16.260 --> 00:08:18.260
нам может понадобиться множество роботов

00:08:18.260 --> 00:08:21.260
для решения этой проблемы.

00:08:21.260 --> 00:08:23.260
Возникает вопрос:

00:08:23.260 --> 00:08:26.260
как скоординировать их работу?

00:08:26.260 --> 00:08:28.260
Мы воспользовались примером из природы.

00:08:28.260 --> 00:08:30.260
В этом видео

00:08:30.260 --> 00:08:32.260
пустынные муравьи Aphaenogaster

00:08:32.260 --> 00:08:35.260
переносят объект в лаборатории Стивена Прата.

00:08:35.260 --> 00:08:37.260
Это кусок фигового дерева.

00:08:37.260 --> 00:08:39.260
Можете дать им любой объект, покрытый

00:08:39.260 --> 00:08:42.260
соком инжира, и они отнесут его в муравейник.

00:08:42.260 --> 00:08:45.260
Эти муравьи не имеют центрального координатора.

00:08:45.260 --> 00:08:47.260
Они ощущают своих соседей

00:08:47.260 --> 00:08:49.260
без явной передачи информации.

00:08:49.260 --> 00:08:51.260
Поскольку они ощущают соседей

00:08:51.260 --> 00:08:53.260
и ощущают сам объект,

00:08:53.260 --> 00:08:56.260
в группе происходит неявная координация.

00:08:56.260 --> 00:08:58.260
Мы бы хотели, чтобы наши роботы

00:08:58.260 --> 00:09:01.260
имели именно такую согласованность.

00:09:01.260 --> 00:09:03.260
Когда у нас есть робот,

00:09:03.260 --> 00:09:05.260
окружённый соседями —

00:09:05.260 --> 00:09:07.260
взгляните на роботов I и J —

00:09:07.260 --> 00:09:09.260
мы хотим, чтобы роботы

00:09:09.260 --> 00:09:12.260
следили за расстоянием между собой

00:09:12.260 --> 00:09:14.260
при полёте в строю.

00:09:14.260 --> 00:09:16.260
Нужно убедиться,

00:09:16.260 --> 00:09:18.260
что расстояние между ними достаточное.

00:09:18.260 --> 00:09:21.260
Опять же, роботы отслеживают погрешность

00:09:21.260 --> 00:09:23.260
и рассчитывают управляющие команды

00:09:23.260 --> 00:09:25.260
100 раз в секунду,

00:09:25.260 --> 00:09:28.260
переводя их затем в 600 моторных команд в секунду.

00:09:28.260 --> 00:09:30.260
Это должно быть сделано

00:09:30.260 --> 00:09:32.260
в децентрализованном порядке.

00:09:32.260 --> 00:09:34.260
Если у вас много роботов,

00:09:34.260 --> 00:09:38.260
невозможно централизованно скоординировать информацию

00:09:38.260 --> 00:09:41.260
настолько быстро, чтобы роботы смогли выполнить задачу.

00:09:41.260 --> 00:09:43.260
К тому же, действия роботов зависят

00:09:43.260 --> 00:09:45.260
только от местной информации,

00:09:45.260 --> 00:09:47.260
от их ощущения соседей.

00:09:47.260 --> 00:09:49.260
Наконец, мы хотим,

00:09:49.260 --> 00:09:51.260
чтобы роботам было всё равно,

00:09:51.260 --> 00:09:53.260
кто является их соседом.

00:09:53.260 --> 00:09:56.260
Именно это мы называем анонимностью.

00:09:56.260 --> 00:09:58.260
Сейчас я покажу вам

00:09:58.260 --> 00:10:00.260
видео

00:10:00.260 --> 00:10:03.260
20-ти роботов, выполняющих

00:10:03.260 --> 00:10:05.260
полёт в строю.

00:10:05.260 --> 00:10:08.260
Они отслеживают позицию соседей.

00:10:08.260 --> 00:10:10.260
Они не нарушают строй,

00:10:10.260 --> 00:10:12.260
даже если их порядок меняется.

00:10:12.260 --> 00:10:14.260
Структура может быть как плоской,

00:10:14.260 --> 00:10:16.260
так и трёхмерной.

00:10:16.260 --> 00:10:18.260
Вы можете видеть,

00:10:18.260 --> 00:10:21.260
они переходят от трёхмерной структуры к плоской.

00:10:21.260 --> 00:10:23.260
Для преодоления препятствия

00:10:23.260 --> 00:10:27.260
роботы адаптируются на лету.

00:10:27.260 --> 00:10:30.260
Они расположены очень близко друг к другу.

00:10:30.260 --> 00:10:32.260
При выполнении «восьмёрки», они

00:10:32.260 --> 00:10:34.260
пролетают в нескольких сантиметрах друг от друга.

00:10:34.260 --> 00:10:37.260
Несмотря на аэродинамическое взаимодействие

00:10:37.260 --> 00:10:39.260
их лопастей,

00:10:39.260 --> 00:10:41.260
они поддерживают стабильный полёт.

00:10:41.260 --> 00:10:48.260
(Аплодисменты)

00:10:48.260 --> 00:10:50.260
Если роботы умеют летать в строю,

00:10:50.260 --> 00:10:52.260
они могут и поднимать объекты сообща.

00:10:52.260 --> 00:10:54.260
Это означает,

00:10:54.260 --> 00:10:57.260
что мы можем увеличить в 2, 3 или 4 раза

00:10:57.260 --> 00:10:59.260
силу роботов, заставляя их

00:10:59.260 --> 00:11:01.260
объединяться с соседями, как вот здесь.

00:11:01.260 --> 00:11:04.260
Но если мы утяжеляем переносимые предметы,

00:11:04.260 --> 00:11:06.260
появляются некоторые недостатки:

00:11:06.260 --> 00:11:08.260
объект несут несколько роботов,

00:11:08.260 --> 00:11:11.260
поэтому увеличивается инерция, и роботы

00:11:11.260 --> 00:11:14.260
становятся менее быстрыми — такой исход неизбежен.

00:11:14.260 --> 00:11:17.260
Но мы выигрываем в плане полезной грузоподъёмности.

00:11:17.260 --> 00:11:19.260
Хочу показать вам ещё одну работу

00:11:19.260 --> 00:11:21.260
нашей лаборатории.

00:11:21.260 --> 00:11:23.260
Это работа аспиранта Квентина Линдси.

00:11:23.260 --> 00:11:26.260
Созданный им алгоритм говорит роботам,

00:11:26.260 --> 00:11:28.260
как самостоятельно строить

00:11:28.260 --> 00:11:30.260
кубообразные структуры

00:11:30.260 --> 00:11:33.260
из таких элементов, как балки.

00:11:33.260 --> 00:11:35.260
Алгоритм сообщает роботу,

00:11:35.260 --> 00:11:37.260
какую балку взять,

00:11:37.260 --> 00:11:39.260
где и когда её опустить.

00:11:39.260 --> 00:11:41.260
Из этого видео, ускоренного

00:11:41.260 --> 00:11:43.260
в 10 и в 14 раз, видно,

00:11:43.260 --> 00:11:46.260
как роботы строят 3 разные конструкции.

00:11:46.260 --> 00:11:48.260
Они полностью автономны,

00:11:48.260 --> 00:11:50.260
Квентин должен всего лишь

00:11:50.260 --> 00:11:52.260
дать им план конструкции,

00:11:52.260 --> 00:11:56.260
которую он хочет построить.

00:11:56.260 --> 00:11:59.260
Все увиденные вами эксперименты,

00:11:59.260 --> 00:12:01.260
все наглядные представления

00:12:01.260 --> 00:12:04.260
были сделаны с помощью системы захвата движения.

00:12:04.260 --> 00:12:06.260
Что же происходит, если мы покидаем

00:12:06.260 --> 00:12:09.260
лабораторию и выходим на улицу, в реальный мир?

00:12:09.260 --> 00:12:12.260
Как быть, если нет GPS?

00:12:12.260 --> 00:12:14.260
Этот робот оснащён

00:12:14.260 --> 00:12:16.260
камерой и лазерным дальномером,

00:12:16.260 --> 00:12:19.260
лазерным сканирующим устройством.

00:12:19.260 --> 00:12:21.260
Он использует датчики

00:12:21.260 --> 00:12:23.260
для построения карты окружающей среды.

00:12:23.260 --> 00:12:26.260
Карта состоит из таких объектов,

00:12:26.260 --> 00:12:28.260
как двери, окна,

00:12:28.260 --> 00:12:30.260
люди, мебель.

00:12:30.260 --> 00:12:32.260
Она также определяет положение робота

00:12:32.260 --> 00:12:34.260
по отношению к этим объектам.

00:12:34.260 --> 00:12:36.260
Это не глобальная система координат.

00:12:36.260 --> 00:12:39.260
Это система координат, определённая роботом,

00:12:39.260 --> 00:12:42.260
его положением и ориентацией в пространстве.

00:12:42.260 --> 00:12:45.260
Он двигается согласно этим показателям.

00:12:45.260 --> 00:12:47.260
Хочу показать вам видео алгоритмов,

00:12:47.260 --> 00:12:49.260
разработанных Франком Шеном

00:12:49.260 --> 00:12:51.260
и профессором Натаном Майклом.

00:12:51.260 --> 00:12:55.260
Здесь видно, как робот впервые попадает в здание

00:12:55.260 --> 00:12:58.260
и на лету создаёт карту местности.

00:12:58.260 --> 00:13:01.260
Робот определяет объекты вокруг.

00:13:01.260 --> 00:13:03.260
Он создаёт карту и определяет

00:13:03.260 --> 00:13:05.260
своё положение по отношению к объектам;

00:13:05.260 --> 00:13:07.260
он обновляет своё положение

00:13:07.260 --> 00:13:09.260
100 раз в секунду, что позволяет нам

00:13:09.260 --> 00:13:11.260
использовать алгоритмы управления,

00:13:11.260 --> 00:13:13.260
о которых я вам уже рассказал.

00:13:13.260 --> 00:13:15.260
Этот робот дистанционно

00:13:15.260 --> 00:13:17.260
управлялся Франком.

00:13:17.260 --> 00:13:19.260
Но он также мог решать сам,

00:13:19.260 --> 00:13:21.260
куда направиться.

00:13:21.260 --> 00:13:23.260
Предположим, меня отправили

00:13:23.260 --> 00:13:25.260
исследовать незнакомое мне здание.

00:13:25.260 --> 00:13:27.260
Я могу заслать туда робота,

00:13:27.260 --> 00:13:29.260
который создаст карту

00:13:29.260 --> 00:13:32.260
и сообщит мне, как выглядит здание.

00:13:32.260 --> 00:13:35.260
Здесь робот не только определяет,

00:13:35.260 --> 00:13:38.260
как добраться из точки А в точку Б по карте,

00:13:38.260 --> 00:13:40.260
но также вычисляет лучшую

00:13:40.260 --> 00:13:42.260
точку Б в каждый момент времени.

00:13:42.260 --> 00:13:45.260
Он знает, куда направиться

00:13:45.260 --> 00:13:47.260
для поиска слабоизученных мест.

00:13:47.260 --> 00:13:50.260
Вот как он заполняет карту.

00:13:50.260 --> 00:13:52.260
Напоследок расскажу вам

00:13:52.260 --> 00:13:54.260
ещё об одном приложении.

00:13:54.260 --> 00:13:57.260
У него есть много сфер применения.

00:13:57.260 --> 00:13:59.260
Я профессор, и мы увлечены образованием.

00:13:59.260 --> 00:14:01.260
Такие роботы могут значительно изменить

00:14:01.260 --> 00:14:03.260
наше среднее образование.

00:14:03.260 --> 00:14:05.260
Но мы сейчас в Южной Калифорнии,

00:14:05.260 --> 00:14:07.260
близко к Лос-Анджелесу,

00:14:07.260 --> 00:14:09.260
поэтому я должен закончить

00:14:09.260 --> 00:14:11.260
чем-то из области развлечений.

00:14:11.260 --> 00:14:13.260
Хочу закончить этим музыкальным видео.

00:14:13.260 --> 00:14:16.260
Представляю вам Алекса и Даниэля,

00:14:16.260 --> 00:14:18.260
его создателей.

00:14:18.260 --> 00:14:25.260
(Аплодисменты)

00:14:25.260 --> 00:14:27.260
Перед просмотром хочу

00:14:27.260 --> 00:14:30.260
сказать, что они создали его за 3 дня,

00:14:30.260 --> 00:14:32.260
после того, как им позвонил Крис.

00:14:32.260 --> 00:14:34.260
Роботы в этом видео

00:14:34.260 --> 00:14:36.260
полностью самоуправляемы.

00:14:36.260 --> 00:14:39.260
9 роботов будут играть на 6-ти музыкальных инструментах.

00:14:39.260 --> 00:14:43.260
Это сделано специально для TED 2012.

00:14:43.260 --> 00:14:46.260
Давайте посмотрим.

00:15:19.260 --> 00:15:29.260
(Музыка)

00:16:23.260 --> 00:16:40.260
(Аплодисменты)

