WEBVTT
Kind: captions
Language: pt

00:00:00.000 --> 00:00:07.000
Tradutor: Isabel Villan
Revisor: Viviane Ferraz Matos

00:00:20.260 --> 00:00:22.260
Bom dia.

00:00:22.260 --> 00:00:24.260
Estou aqui hoje para falar

00:00:24.260 --> 00:00:27.260
sobre bolas de praia autônomas e voadoras.

00:00:27.260 --> 00:00:31.260
Não, robôs aéreos ágeis como este.

00:00:31.260 --> 00:00:34.260
Gostaria de falar um pouco sobre os desafios na construção deles

00:00:34.260 --> 00:00:36.260
e algumas oportunidades maravilhosas

00:00:36.260 --> 00:00:38.260
para aplicação dessa tecnologia.

00:00:38.260 --> 00:00:40.260
Bem, esses robôs

00:00:40.260 --> 00:00:43.260
estão relacionados a veículos aéreos não tripulados.

00:00:43.260 --> 00:00:46.260
Entretanto, os veículos que você vê aqui são grandes.

00:00:46.260 --> 00:00:48.260
Pesam milhares de quilos,

00:00:48.260 --> 00:00:50.260
de forma nenhuma são ágeis.

00:00:50.260 --> 00:00:52.260
Não são nem mesmo autônomos.

00:00:52.260 --> 00:00:54.260
Na verdade, muitos desses veículos

00:00:54.260 --> 00:00:56.260
são operados por tripulações

00:00:56.260 --> 00:00:59.260
que podem incluir múltiplos pilotos,

00:00:59.260 --> 00:01:01.260
operadores de sensores

00:01:01.260 --> 00:01:03.260
e coordenadores de missão.

00:01:03.260 --> 00:01:05.260
Aquilo em que estamos interessados é desenvolver robôs como este --

00:01:05.260 --> 00:01:07.260
e aqui estão mais duas imagens --

00:01:07.260 --> 00:01:10.260
de robôs que você pode comprar nas prateleiras.

00:01:10.260 --> 00:01:13.260
Assim, esses são helicópteros com quatro rotores

00:01:13.260 --> 00:01:17.260
e têm mais ou menos um metro

00:01:17.260 --> 00:01:19.260
e pesam vários quilos.

00:01:19.260 --> 00:01:22.260
Então, nós os reajustamos com sensores e processadores,

00:01:22.260 --> 00:01:24.260
e esses robôs podem voar dentro de edificações

00:01:24.260 --> 00:01:26.260
sem GPS.

00:01:26.260 --> 00:01:28.260
O robô que tenho em minha mão

00:01:28.260 --> 00:01:30.260
é esse,

00:01:30.260 --> 00:01:33.260
e foi criado por dois estudantes,

00:01:33.260 --> 00:01:35.260
Alex e Daniel.

00:01:35.260 --> 00:01:37.260
Então, este pesa um pouco mais

00:01:37.260 --> 00:01:39.260
que um décimo de uma libra.

00:01:39.260 --> 00:01:41.260
Consome mais ou menos 15 watts de energia.

00:01:41.260 --> 00:01:43.260
E, como podem ver,

00:01:43.260 --> 00:01:45.260
tem aproximadamente oito polegadas de diâmetro.

00:01:45.260 --> 00:01:48.260
Então, deixem-me expor um rápido tutorial

00:01:48.260 --> 00:01:50.260
de como esses robôs funcionam.

00:01:50.260 --> 00:01:52.260
Este tem quatro rotores.

00:01:52.260 --> 00:01:54.260
Se você gira esses rotores na mesma velocidade,

00:01:54.260 --> 00:01:56.260
o robô paira.

00:01:56.260 --> 00:01:59.260
Se você aumenta a velocidade de cada um desses rotores,

00:01:59.260 --> 00:02:02.260
então o robô voa, acelera.

00:02:02.260 --> 00:02:04.260
Claro, se o robô estivesse inclinado,

00:02:04.260 --> 00:02:06.260
inclinado na horizontal,

00:02:06.260 --> 00:02:09.260
então ele aceleraria nessa direção.

00:02:09.260 --> 00:02:12.260
Assim, para incliná-lo, há duas maneiras de fazer isso.

00:02:12.260 --> 00:02:14.260
Nesta figura,

00:02:14.260 --> 00:02:16.260
você vê que o rotor quatro está girando mais rápido

00:02:16.260 --> 00:02:18.260
e o rotor dois está girando mais lentamente.

00:02:18.260 --> 00:02:20.260
E quando isso acontece,

00:02:20.260 --> 00:02:23.260
há movimento que faz com que o robô rodopie.

00:02:23.260 --> 00:02:25.260
E, por outro lado,

00:02:25.260 --> 00:02:28.260
se você aumenta a velocidade do rotor três

00:02:28.260 --> 00:02:30.260
e diminui a velocidade do rotor um.

00:02:30.260 --> 00:02:33.260
então o robõ arremete para frente.

00:02:33.260 --> 00:02:35.260
E, finalmente,

00:02:35.260 --> 00:02:37.260
se você gira pares opostos de rotores

00:02:37.260 --> 00:02:39.260
mais rápido que o outro par,

00:02:39.260 --> 00:02:41.260
então o robô dá uma guinada sobre o eixo vertical.

00:02:41.260 --> 00:02:43.260
Assim, um processador a bordo

00:02:43.260 --> 00:02:46.260
essencialmente observa quais movimentos precisam ser executados

00:02:46.260 --> 00:02:48.260
e combina esses movimentos

00:02:48.260 --> 00:02:51.260
e determina quais comandos enviar aos motores,

00:02:51.260 --> 00:02:53.260
600 vezes por segundo.

00:02:53.260 --> 00:02:55.260
Isso é basicamente como essa coisa opera.

00:02:55.260 --> 00:02:57.260
Dessa forma uma das vantagens deste desenho

00:02:57.260 --> 00:02:59.260
é, quando você diminui o tamanho das coisas,

00:02:59.260 --> 00:03:02.260
o robô naturalmente se torna ágil.

00:03:02.260 --> 00:03:04.260
Então, R aqui

00:03:04.260 --> 00:03:06.260
é o comprimento característico do robô.

00:03:06.260 --> 00:03:09.260
É realmente metade do diâmetro.

00:03:09.260 --> 00:03:12.260
E há muitos parâmetros físicos que se alteram

00:03:12.260 --> 00:03:14.260
à medida que você reduz R.

00:03:14.260 --> 00:03:16.260
Aquele que é o mais importante

00:03:16.260 --> 00:03:18.260
é a inércia ou a resistência ao movimento.

00:03:18.260 --> 00:03:20.260
Acontece que

00:03:20.260 --> 00:03:23.260
a inércia, que governa o movimento angular,

00:03:23.260 --> 00:03:26.260
funciona como a quinta força de R.

00:03:26.260 --> 00:03:28.260
Portanto, quanto menor for R,

00:03:28.260 --> 00:03:31.260
mais acentuadamente se reduz a inércia.

00:03:31.260 --> 00:03:34.260
Assim, como resultado, a aceleração angular,

00:03:34.260 --> 00:03:36.260
representada aqui pela letra grega alfa,

00:03:36.260 --> 00:03:38.260
fica um sobre R.

00:03:38.260 --> 00:03:40.260
É inversamente proporcional a R.

00:03:40.260 --> 00:03:43.260
Quanto menor ela for, mais rapidamente você pode virar.

00:03:43.260 --> 00:03:45.260
Assim, isso deveria estar claro nesses vídeos.

00:03:45.260 --> 00:03:48.260
Na base direita você vê um robô

00:03:48.260 --> 00:03:50.260
realizando um voo de 360 graus

00:03:50.260 --> 00:03:52.260
em menos da metade de um segundo.

00:03:52.260 --> 00:03:55.260
Múltiplos voos, um pouco mais de tempo.

00:03:55.260 --> 00:03:57.260
Então, aqui os processadores a bordo

00:03:57.260 --> 00:03:59.260
estão recebendo dados dos acelerômetros

00:03:59.260 --> 00:04:01.260
e giroscópios a bordo

00:04:01.260 --> 00:04:03.260
e calculando, como eu disse anteriormente,

00:04:03.260 --> 00:04:05.260
comandos 600 vezes por segundo

00:04:05.260 --> 00:04:07.260
para estabilizar este robô.

00:04:07.260 --> 00:04:10.260
Então, à esquerda, você vê Daniel lançando este robô no ar.

00:04:10.260 --> 00:04:12.260
E ele demonstra quão resistente é o controle.

00:04:12.260 --> 00:04:14.260
Não importa como você o lança,

00:04:14.260 --> 00:04:18.260
o robô se recupera e volta para ele.

00:04:18.260 --> 00:04:20.260
Por que construir robôs como este?

00:04:20.260 --> 00:04:23.260
Bem, robôs como este têm muitas aplicações.

00:04:23.260 --> 00:04:26.260
Você pode enviá-los para o interior de edifícios como este

00:04:26.260 --> 00:04:29.260
como primeiros atendentes para procurar por intrusos,

00:04:29.260 --> 00:04:32.260
talvez procurar por vazamentos químicos,

00:04:32.260 --> 00:04:34.260
vazamentos de gás.

00:04:34.260 --> 00:04:36.260
Você também pode usá-los

00:04:36.260 --> 00:04:38.260
para aplicações como construção.

00:04:38.260 --> 00:04:42.260
Assim, aqui estão robôs carregando feixes, colunas

00:04:42.260 --> 00:04:45.260
e montando estruturas semelhantes a cubos.

00:04:45.260 --> 00:04:48.260
Vou contar-lhes um pouco mais sobre isso.

00:04:48.260 --> 00:04:51.260
Os robôs podem ser usados para transportar carga.

00:04:51.260 --> 00:04:54.260
Um dos problemas com estes pequenos robôs

00:04:54.260 --> 00:04:56.260
é a capacidade deles de transportar carga útil.

00:04:56.260 --> 00:04:58.260
Assim você pode querer múltíplos robôs

00:04:58.260 --> 00:05:00.260
transportando carga útil.

00:05:00.260 --> 00:05:02.260
Esta é uma fotografia de um experimento recente que fizemos --

00:05:02.260 --> 00:05:04.260
na verdade não mais tão recente --

00:05:04.260 --> 00:05:07.260
em Sendai, logo depois do terremoto.

00:05:07.260 --> 00:05:10.260
Dessa forma, robôs como este poderiam ser enviados para edifícios desmoronados

00:05:10.260 --> 00:05:12.260
para avaliar os danos depois de desastres naturais,

00:05:12.260 --> 00:05:15.260
ou ser enviados para edifícios com radiação

00:05:15.260 --> 00:05:18.260
para mapear os níveis de radiação.

00:05:19.260 --> 00:05:21.260
Então um problema fundamental

00:05:21.260 --> 00:05:24.260
que os robôs têm que resolver, se são autônomos,

00:05:24.260 --> 00:05:26.260
é essencialmente determinar

00:05:26.260 --> 00:05:28.260
como ir do ponto A ao ponto B.

00:05:28.260 --> 00:05:30.260
Isso se torna desafiador

00:05:30.260 --> 00:05:33.260
porque a dinâmica desse robô é bastante complicada.

00:05:33.260 --> 00:05:35.260
De fato, eles vivem em um espaço de 12 dimensões.

00:05:35.260 --> 00:05:37.260
Portanto usamos um pequeno truque.

00:05:37.260 --> 00:05:40.260
Pegamos esse espaço curvo de 12 dimensões

00:05:40.260 --> 00:05:42.260
e o transformamos

00:05:42.260 --> 00:05:44.260
em um espaço plano de 4 dimensões.

00:05:44.260 --> 00:05:46.260
E esse espaço de quatro dimensões

00:05:46.260 --> 00:05:49.260
consiste em X, Y, Z e o ângulo da guinada.

00:05:49.260 --> 00:05:51.260
E o que esse robô faz

00:05:51.260 --> 00:05:55.260
é planejar o que chamamos de trajetória com salto mínimo.

00:05:55.260 --> 00:05:57.260
Assim, para lembrar-lhes a física,

00:05:57.260 --> 00:05:59.260
você tem posição, derivativo, velocidade,

00:05:59.260 --> 00:06:01.260
aceleração

00:06:01.260 --> 00:06:03.260
então vem empuxo

00:06:03.260 --> 00:06:05.260
e depois vem salto.

00:06:05.260 --> 00:06:08.260
Assim este robô minimiza o salto.

00:06:08.260 --> 00:06:10.260
O que ele efetivamente faz

00:06:10.260 --> 00:06:12.260
é produzir um movimento suave e gracioso.

00:06:12.260 --> 00:06:15.260
E ele faz isso evitando obstáculos.

00:06:15.260 --> 00:06:18.260
Então essas trajetórias com salto mínimo nesse espaço plano

00:06:18.260 --> 00:06:20.260
são transformadas

00:06:20.260 --> 00:06:22.260
nesse complicado espaço de 12 dimensões,

00:06:22.260 --> 00:06:24.260
que o robô deve ter

00:06:24.260 --> 00:06:26.260
para controle e execução.

00:06:26.260 --> 00:06:28.260
Deixem-me mostrar-lhes alguns exemplos

00:06:28.260 --> 00:06:30.260
de como são essas trajetórias com salto mínimo.

00:06:30.260 --> 00:06:32.260
E no primeiro vídeo,

00:06:32.260 --> 00:06:34.260
vocês verão o robô indo do ponto A ao ponto B

00:06:34.260 --> 00:06:36.260
através de um ponto intermediário.

00:06:42.260 --> 00:06:44.260
Dessa forma o robô é obviamente capaz

00:06:44.260 --> 00:06:46.260
de executar qualquer trajetória curva.

00:06:46.260 --> 00:06:48.260
Estas são trajetórias circulares

00:06:48.260 --> 00:06:51.260
nas quais o robô puxa cerca de 2 G.

00:06:52.260 --> 00:06:56.260
Aqui no topo você tem câmeras que captam movimentos

00:06:56.260 --> 00:06:59.260
que dizem ao robô onde ele está 100 vezes por segundo.

00:06:59.260 --> 00:07:02.260
Também dizem ao robô onde esses obstáculos estão.

00:07:02.260 --> 00:07:04.260
E os obstáculos podem estar se movendo.

00:07:04.260 --> 00:07:07.260
E aqui você vê Daniel atirar este aro no ar,

00:07:07.260 --> 00:07:09.260
enquanto o robô está calculando a posição do aro

00:07:09.260 --> 00:07:13.260
e tentando determinar a melhor forma de passar pelo aro.

00:07:13.260 --> 00:07:15.260
Então, como acadêmicos,

00:07:15.260 --> 00:07:18.260
somos sempre treinados a ser capazes de saltar por aros para levantar fundos para nossos laboratórios,

00:07:18.260 --> 00:07:21.260
e conseguimos que nossos robôs fizessem isso.

00:07:21.260 --> 00:07:27.260
(Aplausos)

00:07:27.260 --> 00:07:29.260
Uma outra coisa que o robô pode fazer

00:07:29.260 --> 00:07:32.260
é lembrar partes da trajetória

00:07:32.260 --> 00:07:34.260
que ele aprende ou é pré-programada.

00:07:34.260 --> 00:07:36.260
Assim, aqui você vê o robô

00:07:36.260 --> 00:07:38.260
combinando um movimento

00:07:38.260 --> 00:07:40.260
que constrói impulso

00:07:40.260 --> 00:07:43.260
e muda sua direção e então se recupera.

00:07:43.260 --> 00:07:46.260
Ele tem que fazer isso porque a abertura na janela

00:07:46.260 --> 00:07:50.260
é apenas ligeiramente maior que a largura do robô.

00:07:50.260 --> 00:07:53.260
Exatamente como um mergulhador se posiciona no trampolim

00:07:53.260 --> 00:07:55.260
e então salta dele para ganhar impulso,

00:07:55.260 --> 00:07:58.260
faz esta pirueta, estes dois saltos mortais

00:07:58.260 --> 00:08:00.260
e elegantemente se recupera,

00:08:00.260 --> 00:08:02.260
este robô está basicamente fazendo isso.

00:08:02.260 --> 00:08:05.260
Ele sabe como combinar pequenos pedaços e partes das trajetórias

00:08:05.260 --> 00:08:09.260
para executar essas tarefas relativamente difíceis.

00:08:09.260 --> 00:08:11.260
Quero mudar o foco do assunto.

00:08:11.260 --> 00:08:14.260
Uma das desvantagens desses pequenos robôs é o seu tamanho.

00:08:14.260 --> 00:08:16.260
E eu lhes disse anteriormente

00:08:16.260 --> 00:08:18.260
que podemos querer empregar muitos e muitos desses robôs

00:08:18.260 --> 00:08:21.260
para superar as limitações de tamanho.

00:08:21.260 --> 00:08:23.260
Portanto, uma dificuldade

00:08:23.260 --> 00:08:26.260
é: como você coordena muitos desses robôs?

00:08:26.260 --> 00:08:28.260
Então, nesse ponto olhamos para a natureza.

00:08:28.260 --> 00:08:30.260
Dessa forma, quero mostrar-lhes um clipe

00:08:30.260 --> 00:08:32.260
de formigas Aphaenogaster do deserto,

00:08:32.260 --> 00:08:35.260
no laboratório do professor Stephen Pratt, carregando um objeto.

00:08:35.260 --> 00:08:37.260
Isto é, na verdade, um pedaço de figo.

00:08:37.260 --> 00:08:39.260
De fato, você pega qualquer objeto recoberto com suco de figo

00:08:39.260 --> 00:08:42.260
e as formigas o carregarão de volta ao ninho.

00:08:42.260 --> 00:08:45.260
Estas formigas não têm nenhum coordenador central.

00:08:45.260 --> 00:08:47.260
Elas sentem seus vizinhos.

00:08:47.260 --> 00:08:49.260
Não há comunicação explícita.

00:08:49.260 --> 00:08:51.260
Mas, porque elas percebem os vizinhos

00:08:51.260 --> 00:08:53.260
e porque percebem o objeto,

00:08:53.260 --> 00:08:56.260
elas têm coordenação implícita através do grupo.

00:08:56.260 --> 00:08:58.260
Este é o tipo de coordenação

00:08:58.260 --> 00:09:01.260
que queremos que nossos robôs tenham.

00:09:01.260 --> 00:09:03.260
Então, quando temos um robô

00:09:03.260 --> 00:09:05.260
que está rodeado por vizinhos --

00:09:05.260 --> 00:09:07.260
vamos olhar para o robô I e o robô J --

00:09:07.260 --> 00:09:09.260
o que queremos que os robôs façam

00:09:09.260 --> 00:09:12.260
é monitorar o espaço entre eles,

00:09:12.260 --> 00:09:14.260
enquanto voam em formação.

00:09:14.260 --> 00:09:16.260
Portanto você quer ter certeza

00:09:16.260 --> 00:09:18.260
de que esse espaço está dentro de níveis aceitáveis.

00:09:18.260 --> 00:09:21.260
Novamente os robôs monitoram esse erro

00:09:21.260 --> 00:09:23.260
e calculam os comandos de controle

00:09:23.260 --> 00:09:25.260
100 vezes por segundo,

00:09:25.260 --> 00:09:28.260
que, então, traduz para o motor comandos 600 vezes por segundo.

00:09:28.260 --> 00:09:30.260
Isso também tem que ser feito

00:09:30.260 --> 00:09:32.260
de uma forma descentralizada.

00:09:32.260 --> 00:09:34.260
Novamente, se você tem muitos e muitos robôs,

00:09:34.260 --> 00:09:38.260
é impossível coordenar toda essa informação centralmente

00:09:38.260 --> 00:09:41.260
rápido o bastante para que os robôs realizem a tarefa.

00:09:41.260 --> 00:09:43.260
Acrescente-se que os robôs têm que basear suas ações

00:09:43.260 --> 00:09:45.260
apenas em informações locais,

00:09:45.260 --> 00:09:47.260
o que eles percebem de seus vizinhos.

00:09:47.260 --> 00:09:49.260
E então finalmente,

00:09:49.260 --> 00:09:51.260
insistimos para que os robôs sejam agnósticos

00:09:51.260 --> 00:09:53.260
para quem são seus vizinhos.

00:09:53.260 --> 00:09:56.260
Isto é o que chamamos anonimato.

00:09:56.260 --> 00:09:58.260
O que quero lhes mostrar a seguir

00:09:58.260 --> 00:10:00.260
é um vídeo

00:10:00.260 --> 00:10:03.260
de 20 desses pequenos robôs

00:10:03.260 --> 00:10:05.260
voando em formação.

00:10:05.260 --> 00:10:08.260
Eles estão monitorando a posição de seus vizinhos.

00:10:08.260 --> 00:10:10.260
Estão mantendo a formação.

00:10:10.260 --> 00:10:12.260
As formações podem mudar.

00:10:12.260 --> 00:10:14.260
Elas podem ser formações planas,

00:10:14.260 --> 00:10:16.260
podem ser formações tridimensionais.

00:10:16.260 --> 00:10:18.260
Como podem ver aqui,

00:10:18.260 --> 00:10:21.260
eles desabam de uma formação tridimensional para uma formação plana.

00:10:21.260 --> 00:10:23.260
E para voar através de obstáculos,

00:10:23.260 --> 00:10:27.260
eles podem adaptar as formações durante o voo.

00:10:27.260 --> 00:10:30.260
Esses robôs vêm realmente muito perto.

00:10:30.260 --> 00:10:32.260
Como podem ver neste voo em forma de oito,

00:10:32.260 --> 00:10:34.260
eles vêm a polegadas um do outro

00:10:34.260 --> 00:10:37.260
E apesar das interações aerodinâmicas

00:10:37.260 --> 00:10:39.260
dessas lâminas de propulsão,

00:10:39.260 --> 00:10:41.260
eles são capazes de manter voo estável.

00:10:41.260 --> 00:10:48.260
(Aplausos)

00:10:48.260 --> 00:10:50.260
Assim, quando você sabe como voar em formação,

00:10:50.260 --> 00:10:52.260
você pode realmente apanhar objetos em cooperação.

00:10:52.260 --> 00:10:54.260
Dessa forma, isso mostra

00:10:54.260 --> 00:10:57.260
que podemos dobrar, triplicar, quadruplicar

00:10:57.260 --> 00:10:59.260
a força do robô,

00:10:59.260 --> 00:11:01.260
fazendo com que eles se agrupem com seus vizinhos, como podem ver aqui.

00:11:01.260 --> 00:11:04.260
Uma das desvantagens de fazer isso

00:11:04.260 --> 00:11:06.260
é, à medida que você aumenta a escala das coisas --

00:11:06.260 --> 00:11:08.260
portanto, se você tem muitos robôs carregando a mesma coisa,

00:11:08.260 --> 00:11:11.260
você basica e efetivamente aumentou a inércia,

00:11:11.260 --> 00:11:14.260
e, por consequência, paga um preço, eles não são tão ágeis.

00:11:14.260 --> 00:11:17.260
Mas você de fato ganha em termos de capacidade de transportar carga útil.

00:11:17.260 --> 00:11:19.260
Um outro aplicativo que quero mostrar-lhes --

00:11:19.260 --> 00:11:21.260
novamente, isto está em nosso laboratório.

00:11:21.260 --> 00:11:23.260
Este é o trabalho feito por Quentin Lindsey, que é um estudante formado.

00:11:23.260 --> 00:11:26.260
Seu algoritmo basicamente diz a esses robôs

00:11:26.260 --> 00:11:28.260
como construir, com autonomia,

00:11:28.260 --> 00:11:30.260
estruturas cúbicas

00:11:30.260 --> 00:11:33.260
de elementos de armação.

00:11:33.260 --> 00:11:35.260
Seu algoritmo diz ao robô

00:11:35.260 --> 00:11:37.260
qual parte pegar,

00:11:37.260 --> 00:11:39.260
quando e onde colocá-la.

00:11:39.260 --> 00:11:41.260
Assim, neste vídeo você vê --

00:11:41.260 --> 00:11:43.260
e ele está acelerado 10, 14 vezes --

00:11:43.260 --> 00:11:46.260
você vê três estruturas diferentes sendo construídas por estes robôs.

00:11:46.260 --> 00:11:48.260
E novamente, tudo é autônomo,

00:11:48.260 --> 00:11:50.260
e tudo que Quentin tem a fazer

00:11:50.260 --> 00:11:52.260
é dar-lhes uma planta

00:11:52.260 --> 00:11:56.260
do desenho que quer construir.

00:11:56.260 --> 00:11:59.260
Bem, todos esses experimentos que vocês viram até agora,

00:11:59.260 --> 00:12:01.260
todas essas demonstrações,

00:12:01.260 --> 00:12:04.260
foram feitas com o auxílio de sistemas de captura de movimentos.

00:12:04.260 --> 00:12:06.260
Então, o que acontece quando você sai do laboratório

00:12:06.260 --> 00:12:09.260
e vai para o mundo real?

00:12:09.260 --> 00:12:12.260
E se não há GPS?

00:12:12.260 --> 00:12:14.260
Este robô

00:12:14.260 --> 00:12:16.260
é de fato equipado com uma câmera

00:12:16.260 --> 00:12:19.260
e um laser localizador, um laser escaneador.

00:12:19.260 --> 00:12:21.260
E ele usa esses sensores

00:12:21.260 --> 00:12:23.260
para construir um mapa do ambiente.

00:12:23.260 --> 00:12:26.260
Esse mapa consiste nas características --

00:12:26.260 --> 00:12:28.260
como portas, janelas,

00:12:28.260 --> 00:12:30.260
pessoas, mobília --

00:12:30.260 --> 00:12:32.260
e então ele determina qual é sua posição

00:12:32.260 --> 00:12:34.260
em relação às características.

00:12:34.260 --> 00:12:36.260
Assim não há sistema de coordenação global.

00:12:36.260 --> 00:12:39.260
O sistema de coordenação é definido com base no robô,

00:12:39.260 --> 00:12:42.260
onde ele está e para o que está olhando.

00:12:42.260 --> 00:12:45.260
E ele navega com relação a estas características.

00:12:45.260 --> 00:12:47.260
Quero exibir um clipe

00:12:47.260 --> 00:12:49.260
de algoritmos desenvolvido por Frank Shen

00:12:49.260 --> 00:12:51.260
e pelo professor Nathan Michael

00:12:51.260 --> 00:12:55.260
que mostra este robô entrando em um edificio pela primeira vez

00:12:55.260 --> 00:12:58.260
e criando um mapa durante o voo.

00:12:58.260 --> 00:13:01.260
Dessa forma o robô determina quais são as características.

00:13:01.260 --> 00:13:03.260
Constrói o mapa.

00:13:03.260 --> 00:13:05.260
Determina onde está com relação às características

00:13:05.260 --> 00:13:07.260
e então calcula sua posição

00:13:07.260 --> 00:13:09.260
100 vezez por segundo,

00:13:09.260 --> 00:13:11.260
permitindo-nos usar os algoritmos de controle

00:13:11.260 --> 00:13:13.260
que descrevi anteriormente.

00:13:13.260 --> 00:13:15.260
Na verdade, este robô está sendo comandado

00:13:15.260 --> 00:13:17.260
remotamente por Frank.

00:13:17.260 --> 00:13:19.260
Mas o robô também pode determinar

00:13:19.260 --> 00:13:21.260
onde ir por ele mesmo.

00:13:21.260 --> 00:13:23.260
Suponha que eu fosse enviar isto a um edifício

00:13:23.260 --> 00:13:25.260
e não tivesse ideia de como é esse edifício,

00:13:25.260 --> 00:13:27.260
posso pedir ao robô para entrar,

00:13:27.260 --> 00:13:29.260
criar um mapa,

00:13:29.260 --> 00:13:32.260
então voltar e me dizer como é o edifício.

00:13:32.260 --> 00:13:35.260
Aqui, o robô não está apenas resolvendo um problema,

00:13:35.260 --> 00:13:38.260
como ir do ponto A para o ponto B neste mapa,

00:13:38.260 --> 00:13:40.260
mas também determinando

00:13:40.260 --> 00:13:42.260
qual é o melhor ponto B a cada vez.

00:13:42.260 --> 00:13:45.260
Basicamente ele sabe aonde ir

00:13:45.260 --> 00:13:47.260
para procurar locais que tenham menos informação.

00:13:47.260 --> 00:13:50.260
E é assim que ele preenche este mapa.

00:13:50.260 --> 00:13:52.260
Quero deixá-los

00:13:52.260 --> 00:13:54.260
com um último aplicativo.

00:13:54.260 --> 00:13:57.260
E há muitos aplicativos para esta tecnologia.

00:13:57.260 --> 00:13:59.260
Sou um professor, e somos apaixonados por educação.

00:13:59.260 --> 00:14:01.260
Robôs como este podem realmente mudar a forma

00:14:01.260 --> 00:14:03.260
como realizamos a educação elementar.

00:14:03.260 --> 00:14:05.260
Mas estamos no sul da Califórnia,

00:14:05.260 --> 00:14:07.260
perto de Los Angeles,

00:14:07.260 --> 00:14:09.260
portanto tenho que concluir

00:14:09.260 --> 00:14:11.260
com algo relacionado a entretenimento.

00:14:11.260 --> 00:14:13.260
Quero concluir com um vídeo de música.

00:14:13.260 --> 00:14:16.260
Quero apresentar os criadores, Alex e Daniel,

00:14:16.260 --> 00:14:18.260
que criaram este vídeo.

00:14:18.260 --> 00:14:25.260
(Aplausos)

00:14:25.260 --> 00:14:27.260
Antes que eu apresente este vídeo,

00:14:27.260 --> 00:14:30.260
quero dizer que eles o criaram nos últimos três dias,

00:14:30.260 --> 00:14:32.260
depois de um telefonema de Chris.

00:14:32.260 --> 00:14:34.260
E os robôs que tocam neste vídeo

00:14:34.260 --> 00:14:36.260
são completamente autônomos.

00:14:36.260 --> 00:14:39.260
Vocês verão nove robôs tocarem seis instrumentos diferentes.

00:14:39.260 --> 00:14:43.260
E, claro, foi feito exclusivamente para TED 2012.

00:14:43.260 --> 00:14:46.260
Vamos assistir.

00:15:19.260 --> 00:15:29.260
(Música)

00:16:23.260 --> 00:16:40.260
(Aplausos)

