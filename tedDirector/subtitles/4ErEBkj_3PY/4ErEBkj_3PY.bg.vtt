WEBVTT
Kind: captions
Language: bg

00:00:00.000 --> 00:00:07.000
Translator: Anton Hikov
Reviewer: Yavor Ivanov

00:00:20.260 --> 00:00:22.260
Добро утро.

00:00:22.260 --> 00:00:24.260
Днес съм тук, за да говоря

00:00:24.260 --> 00:00:27.260
за автономни, летящи плажни топки.

00:00:27.260 --> 00:00:31.260
Не, подвижни въздушни роботи, като този.

00:00:31.260 --> 00:00:34.260
Бих искал да ви разкажа малко за предизвикателствата при изграждането им

00:00:34.260 --> 00:00:36.260
и за някои от страхотните възможности

00:00:36.260 --> 00:00:38.260
за прилагане на тази технология.

00:00:38.260 --> 00:00:40.260
И така, тези роботи

00:00:40.260 --> 00:00:43.260
са свързани с безпилотните летателни апарати.

00:00:43.260 --> 00:00:46.260
Обаче, превозните средства, които виждате тук са големи.

00:00:46.260 --> 00:00:48.260
Те тежат хиляди килограми

00:00:48.260 --> 00:00:50.260
и в никакъв случай не са подвижни.

00:00:50.260 --> 00:00:52.260
Дори не са автономни.

00:00:52.260 --> 00:00:54.260
В действителност, много от тези превозни средства

00:00:54.260 --> 00:00:56.260
са управлявани от екипажи на самолети,

00:00:56.260 --> 00:00:59.260
които могат да включват няколко пилоти,

00:00:59.260 --> 00:01:01.260
оператори на сензори

00:01:01.260 --> 00:01:03.260
и координатори на мисията.

00:01:03.260 --> 00:01:05.260
Това, от което се интересуваме е разработването на роботи, като този --

00:01:05.260 --> 00:01:07.260
и тук са още две снимки --

00:01:07.260 --> 00:01:10.260
на роботи, които можете да си купите от магазина.

00:01:10.260 --> 00:01:13.260
Това са хеликоптери с четири ротори

00:01:13.260 --> 00:01:17.260
и те са около един метър големи,

00:01:17.260 --> 00:01:19.260
и тежат няколко килограма.

00:01:19.260 --> 00:01:22.260
И така, ние ги оборудваме със сензори и процесори,

00:01:22.260 --> 00:01:24.260
и тези роботи могат да летят на закрито

00:01:24.260 --> 00:01:26.260
без GPS.

00:01:26.260 --> 00:01:28.260
Роботът, който държа в ръката си

00:01:28.260 --> 00:01:30.260
е този,

00:01:30.260 --> 00:01:33.260
и е създаден от двама студенти,

00:01:33.260 --> 00:01:35.260
Алекс и Даниел.

00:01:35.260 --> 00:01:37.260
Той тежи малко повече

00:01:37.260 --> 00:01:39.260
от 45 грама.

00:01:39.260 --> 00:01:41.260
Консумира около 15 вата мощност.

00:01:41.260 --> 00:01:43.260
И както можете да видите,

00:01:43.260 --> 00:01:45.260
е около 20 сантиметра в диаметър.

00:01:45.260 --> 00:01:48.260
Позволете ми да ви дам един много бърз урок

00:01:48.260 --> 00:01:50.260
за това как работят тези роботи.

00:01:50.260 --> 00:01:52.260
Значи той има четири ротора.

00:01:52.260 --> 00:01:54.260
Ако завъртите тези ротори със същата скорост,

00:01:54.260 --> 00:01:56.260
роботът кръжи.

00:01:56.260 --> 00:01:59.260
Ако увеличите скоростта на всеки един от тези ротори,

00:01:59.260 --> 00:02:02.260
тогава робота полита, ускорява се.

00:02:02.260 --> 00:02:04.260
Разбира се, ако роботът е килнат,

00:02:04.260 --> 00:02:06.260
наклонен по хоризонталата,

00:02:06.260 --> 00:02:09.260
тогава той се ускорява в тази посока.

00:02:09.260 --> 00:02:12.260
За да го накараме да се наклони, можем да го направим по два начина.

00:02:12.260 --> 00:02:14.260
И така, на тази снимка

00:02:14.260 --> 00:02:16.260
виждате, че ротор четири се върти по-бързо

00:02:16.260 --> 00:02:18.260
и ротор две се върти по-бавно.

00:02:18.260 --> 00:02:20.260
И когато това се случи,

00:02:20.260 --> 00:02:23.260
в един момент роботът се завърта.

00:02:23.260 --> 00:02:25.260
И обратното,

00:02:25.260 --> 00:02:28.260
ако увеличите скоростта на ротор три

00:02:28.260 --> 00:02:30.260
и намалите скоростта на ротор едно,

00:02:30.260 --> 00:02:33.260
тогава роботът се устремява напред.

00:02:33.260 --> 00:02:35.260
И накрая,

00:02:35.260 --> 00:02:37.260
ако завъртите срещуположната двойка ротори

00:02:37.260 --> 00:02:39.260
по-бързо от другата двойка,

00:02:39.260 --> 00:02:41.260
тогава робота се завърта около вертикалната ос.

00:02:41.260 --> 00:02:43.260
Бордови процесор

00:02:43.260 --> 00:02:46.260
по същество гледа какви движения трябва да бъдат изпълнени

00:02:46.260 --> 00:02:48.260
и комбинира тези движения,

00:02:48.260 --> 00:02:51.260
и изчислява какви команди да се изпратят на двигателите,

00:02:51.260 --> 00:02:53.260
600 пъти в секунда.

00:02:53.260 --> 00:02:55.260
Така, в основни линии, работи това нещо.

00:02:55.260 --> 00:02:57.260
Едно от предимствата на този дизайн

00:02:57.260 --> 00:02:59.260
е, че когато намалявате мащаба на компонентите,

00:02:59.260 --> 00:03:02.260
роботът естествено става подвижен.

00:03:02.260 --> 00:03:04.260
И така, тук R

00:03:04.260 --> 00:03:06.260
е характеристичната дължина на робота.

00:03:06.260 --> 00:03:09.260
Това всъщност е половината от диаметъра.

00:03:09.260 --> 00:03:12.260
И има много физически параметри, които се променят,

00:03:12.260 --> 00:03:14.260
като намалявате R.

00:03:14.260 --> 00:03:16.260
Този, който е най-важен

00:03:16.260 --> 00:03:18.260
е инерцията или съпротивлението при движение.

00:03:18.260 --> 00:03:20.260
Оказва се,

00:03:20.260 --> 00:03:23.260
че инерцията, която определя ъгловото движение,

00:03:23.260 --> 00:03:26.260
е пропорционална на пета степен на R.

00:03:26.260 --> 00:03:28.260
Така че колкото по-малко е R,

00:03:28.260 --> 00:03:31.260
толкова по-драматично намалява инерцията.

00:03:31.260 --> 00:03:34.260
Така че като резултат, ъгловото ускорение,

00:03:34.260 --> 00:03:36.260
обозначено с гръцката буква алфа тук,

00:03:36.260 --> 00:03:38.260
се описва с едно върху R.

00:03:38.260 --> 00:03:40.260
То е обратно пропорционално на R.

00:03:40.260 --> 00:03:43.260
Колкото по-малко го правите, толкова по-бързо можете да завиете.

00:03:43.260 --> 00:03:45.260
Това трябва да стане ясно от тези клипове.

00:03:45.260 --> 00:03:48.260
В долния десен ъгъл виждате робот,

00:03:48.260 --> 00:03:50.260
изпълняващ 360-градусово преобръщане

00:03:50.260 --> 00:03:52.260
за по-малко от половин секунда.

00:03:52.260 --> 00:03:55.260
Множество обръщания, малко повече време.

00:03:55.260 --> 00:03:57.260
Тук бордовите процесори

00:03:57.260 --> 00:03:59.260
получават обратна информация от акселерометрите

00:03:59.260 --> 00:04:01.260
и жироскопите на борда,

00:04:01.260 --> 00:04:03.260
и изчисляват, както казах преди,

00:04:03.260 --> 00:04:05.260
команди, 600 пъти за секунда,

00:04:05.260 --> 00:04:07.260
за да стабилизират този робот.

00:04:07.260 --> 00:04:10.260
В ляво виждате Даниел, който подхвърля този робот във въздуха.

00:04:10.260 --> 00:04:12.260
И това ви показва колко солиден е контрола.

00:04:12.260 --> 00:04:14.260
Без значение как го подхвърля,

00:04:14.260 --> 00:04:18.260
робота се възстановява и се връща към него.

00:04:18.260 --> 00:04:20.260
И така, защо да правим такива роботи?

00:04:20.260 --> 00:04:23.260
Ами роботи като този имат много приложения.

00:04:23.260 --> 00:04:26.260
Можете да ги изпратите във вътрешността на сгради като тази,

00:04:26.260 --> 00:04:29.260
като първа помощ, да търсят нередности,

00:04:29.260 --> 00:04:32.260
може би да търсят биохимични течове,

00:04:32.260 --> 00:04:34.260
газообразни течове.

00:04:34.260 --> 00:04:36.260
Можете да ги използвате, също така,

00:04:36.260 --> 00:04:38.260
за приложения, като строителството.

00:04:38.260 --> 00:04:42.260
Това тук са роботи носещи греди, колони

00:04:42.260 --> 00:04:45.260
и монтиращи кубообразни структури.

00:04:45.260 --> 00:04:48.260
Ще ви разкажа малко повече за това.

00:04:48.260 --> 00:04:51.260
Роботите могат да бъдат използвани за транспортиране на товари.

00:04:51.260 --> 00:04:54.260
Един от проблемите с тези малки роботи

00:04:54.260 --> 00:04:56.260
е техният капацитет за пренасяне на полезен товар.

00:04:56.260 --> 00:04:58.260
Така че може да искате да ползвате няколко роботи

00:04:58.260 --> 00:05:00.260
за носене на полезен товар.

00:05:00.260 --> 00:05:02.260
Това е картина от неотдавнашен експеримент, който направихме --

00:05:02.260 --> 00:05:04.260
всъщност вече не е толкова скорошен --

00:05:04.260 --> 00:05:07.260
в Сендай, малко след земетресението.

00:05:07.260 --> 00:05:10.260
Значи роботи като този могат да бъдат изпратени в срутени сгради,

00:05:10.260 --> 00:05:12.260
да направят оценка на щетите след природни бедствия,

00:05:12.260 --> 00:05:15.260
или да бъдат изпратени в сградите на реактори,

00:05:15.260 --> 00:05:18.260
за да измерят нивата на радиация.

00:05:19.260 --> 00:05:21.260
Един основен проблем,

00:05:21.260 --> 00:05:24.260
който роботите трябва да решат, за да бъдат независими,

00:05:24.260 --> 00:05:26.260
е по същество да изчислят

00:05:26.260 --> 00:05:28.260
как да стигнат от точка А до точка Б.

00:05:28.260 --> 00:05:30.260
Това е малко предизвикателно,

00:05:30.260 --> 00:05:33.260
защото динамиката на този робот е доста сложна.

00:05:33.260 --> 00:05:35.260
Всъщност, те живеят в 12-мерно пространство.

00:05:35.260 --> 00:05:37.260
Така че ние използваме един малък трик.

00:05:37.260 --> 00:05:40.260
Вземаме това извито 12-мерно пространство

00:05:40.260 --> 00:05:42.260
и го трансформираме

00:05:42.260 --> 00:05:44.260
в плоско четиримерно пространство.

00:05:44.260 --> 00:05:46.260
И това четиримерно пространство

00:05:46.260 --> 00:05:49.260
се състои от X, Y, Z, и още ъгълът на отклонение от курса.

00:05:49.260 --> 00:05:51.260
Така че това, което прави робота

00:05:51.260 --> 00:05:55.260
е да планира това, което наричаме минимална отсечена траектория.

00:05:55.260 --> 00:05:57.260
Да ви напомня от физиката,

00:05:57.260 --> 00:05:59.260
имате позиция, производната -- скорост,

00:05:59.260 --> 00:06:01.260
после ускорение,

00:06:01.260 --> 00:06:03.260
после идва рязко движение,

00:06:03.260 --> 00:06:05.260
и после насечено.

00:06:05.260 --> 00:06:08.260
Така че този робот минимизира насичането.

00:06:08.260 --> 00:06:10.260
Така че това, което прави по същество

00:06:10.260 --> 00:06:12.260
е, че произвежда плавно и грациозно движение.

00:06:12.260 --> 00:06:15.260
И го прави, докато избягва препятствия.

00:06:15.260 --> 00:06:18.260
Така че тези минимални траектории на насичане в това плоско пространство

00:06:18.260 --> 00:06:20.260
после биват трансформирани обратно

00:06:20.260 --> 00:06:22.260
в това сложно 12-мерно пространство,

00:06:22.260 --> 00:06:24.260
което роботът трябва да прави

00:06:24.260 --> 00:06:26.260
за контрол и след това за изпълнение.

00:06:26.260 --> 00:06:28.260
Позволете ми да ви покажа няколко примери

00:06:28.260 --> 00:06:30.260
за това, как изглеждат тези минимални траектории на насичане.

00:06:30.260 --> 00:06:32.260
И в първото видео,

00:06:32.260 --> 00:06:34.260
ще видите робот предвижващ се от точка А до точка Б

00:06:34.260 --> 00:06:36.260
през междинна точка.

00:06:42.260 --> 00:06:44.260
Роботът очевидно е в състояние

00:06:44.260 --> 00:06:46.260
да изпълни която и да е кривообразна траектория.

00:06:46.260 --> 00:06:48.260
Това са кръгови траектории,

00:06:48.260 --> 00:06:51.260
при които робота е подложен на около две G.

00:06:52.260 --> 00:06:56.260
Тук има надземни камери, заснемащи движението отгоре,

00:06:56.260 --> 00:06:59.260
които указват на робота къде се намира 100 пъти в секунда.

00:06:59.260 --> 00:07:02.260
Също така му казват къде са препятствията.

00:07:02.260 --> 00:07:04.260
И пречките могат да се движат.

00:07:04.260 --> 00:07:07.260
Тук виждате Даниел да хвърля този обръч във въздуха,

00:07:07.260 --> 00:07:09.260
докато роботът изчислява позицията на обръча

00:07:09.260 --> 00:07:13.260
и се опитвам да разбере как най-добре да премине през него.

00:07:13.260 --> 00:07:15.260
Като учени винаги сме обучавани

00:07:15.260 --> 00:07:18.260
да можем да скачаме през обръчи, за набиране на финансиране за нашите лаборатории,

00:07:18.260 --> 00:07:21.260
и ние накарахме нашите роботи да направят това.

00:07:21.260 --> 00:07:27.260
(Ръкопляскания)

00:07:27.260 --> 00:07:29.260
Друго нещо, което роботът може да прави

00:07:29.260 --> 00:07:32.260
е да помни части на траектория,

00:07:32.260 --> 00:07:34.260
която научава или е предварително програмирана.

00:07:34.260 --> 00:07:36.260
Тук виждате робот,

00:07:36.260 --> 00:07:38.260
съчетаващ движение,

00:07:38.260 --> 00:07:40.260
което набира инерция

00:07:40.260 --> 00:07:43.260
и после променя своята ориентация и след това се възстановява.

00:07:43.260 --> 00:07:46.260
Той трябва да прави това, защото празнината в прозореца

00:07:46.260 --> 00:07:50.260
е само малко по-голяма от ширината на робота.

00:07:50.260 --> 00:07:53.260
Точно както гмурец застава на трамплин

00:07:53.260 --> 00:07:55.260
и после отскача от него, за да набере скорост,

00:07:55.260 --> 00:07:58.260
и после прави пирует, две и половина салта

00:07:58.260 --> 00:08:00.260
и след това грациозно се възстановява,

00:08:00.260 --> 00:08:02.260
този робот прави по същество това.

00:08:02.260 --> 00:08:05.260
Той знае как да съчетава различни части от траектории,

00:08:05.260 --> 00:08:09.260
за да прави тези доста трудни задачи.

00:08:09.260 --> 00:08:11.260
Искам да сменя темата.

00:08:11.260 --> 00:08:14.260
Един от недостатъците на тези малки роботи е размерът им.

00:08:14.260 --> 00:08:16.260
И ви казах по-рано,

00:08:16.260 --> 00:08:18.260
че може да се наложи да наемем множество роботи

00:08:18.260 --> 00:08:21.260
за да преодолеем ограниченията в размера им.

00:08:21.260 --> 00:08:23.260
Една от трудностите

00:08:23.260 --> 00:08:26.260
е как да се координират много такива роботи?

00:08:26.260 --> 00:08:28.260
И тук се обърнахме към природата.

00:08:28.260 --> 00:08:30.260
Искам да ви покажа клип

00:08:30.260 --> 00:08:32.260
на пустинни мравки от вид Aphaenogaster

00:08:32.260 --> 00:08:35.260
в лабораторията на проф. Стивън Прат, които носят предмет.

00:08:35.260 --> 00:08:37.260
Това всъщност е парче от смокиня.

00:08:37.260 --> 00:08:39.260
Всъщност ако донесете предмет покрит със сок от смокиня,

00:08:39.260 --> 00:08:42.260
мравките ще го отнесат обратно в гнездото.

00:08:42.260 --> 00:08:45.260
Тези мравки нямат централен координатор.

00:08:45.260 --> 00:08:47.260
Те усещат своите съседи.

00:08:47.260 --> 00:08:49.260
Няма изрична комуникация.

00:08:49.260 --> 00:08:51.260
Но понеже усещат съседите си

00:08:51.260 --> 00:08:53.260
и понеже усещат предмета,

00:08:53.260 --> 00:08:56.260
те имат косвена координация в рамките на групата.

00:08:56.260 --> 00:08:58.260
Така че това е вида координация,

00:08:58.260 --> 00:09:01.260
която искаме да имат нашите роботи.

00:09:01.260 --> 00:09:03.260
Така че когато имаме робот,

00:09:03.260 --> 00:09:05.260
който е заобиколен от съседите си --

00:09:05.260 --> 00:09:07.260
и нека да погледнем робот I и робот J --

00:09:07.260 --> 00:09:09.260
това, което искаме роботите да правят

00:09:09.260 --> 00:09:12.260
е да наблюдават разделението между тях,

00:09:12.260 --> 00:09:14.260
докато летят във формация.

00:09:14.260 --> 00:09:16.260
И после искате да се уверите,

00:09:16.260 --> 00:09:18.260
че това разделение е в приемливи нива.

00:09:18.260 --> 00:09:21.260
Така че отново роботите следят тази грешка

00:09:21.260 --> 00:09:23.260
и изчисляват контролните команди

00:09:23.260 --> 00:09:25.260
100 пъти в секунда,

00:09:25.260 --> 00:09:28.260
което после се превежда в моторни команди 600 пъти в секунда.

00:09:28.260 --> 00:09:30.260
Това също така трябва да се прави

00:09:30.260 --> 00:09:32.260
по децентрализиран начин.

00:09:32.260 --> 00:09:34.260
Отново, ако имате множество роботи,

00:09:34.260 --> 00:09:38.260
е невъзможно да се координира цялата тази информация централно,

00:09:38.260 --> 00:09:41.260
достатъчно бързо за да могат роботите да изпълняват задачата.

00:09:41.260 --> 00:09:43.260
Освен това роботите трябва да основават своите действия

00:09:43.260 --> 00:09:45.260
само на локална информация,

00:09:45.260 --> 00:09:47.260
това, което долавят от техните съседи.

00:09:47.260 --> 00:09:49.260
И накрая,

00:09:49.260 --> 00:09:51.260
настояваме, че роботите трябва да са агностици

00:09:51.260 --> 00:09:53.260
към съседите си.

00:09:53.260 --> 00:09:56.260
Това е, което наричаме анонимност.

00:09:56.260 --> 00:09:58.260
Това, което искам да ви покажа сега

00:09:58.260 --> 00:10:00.260
е видео

00:10:00.260 --> 00:10:03.260
на 20 от тези малки роботи,

00:10:03.260 --> 00:10:05.260
летящи във формация.

00:10:05.260 --> 00:10:08.260
Те следят позицията на своите съседи.

00:10:08.260 --> 00:10:10.260
Те поддържат формация.

00:10:10.260 --> 00:10:12.260
Формациите могат да се променят.

00:10:12.260 --> 00:10:14.260
Могат да образуват планарни формации,

00:10:14.260 --> 00:10:16.260
могат да бъдат триизмерни формации.

00:10:16.260 --> 00:10:18.260
Както можете да видите тук,

00:10:18.260 --> 00:10:21.260
те се свиват от триизмерна формация в планарна формация.

00:10:21.260 --> 00:10:23.260
И за да прелитат през препятствия,

00:10:23.260 --> 00:10:27.260
те могат да адаптират формациите в движение.

00:10:27.260 --> 00:10:30.260
Така че отново, тези роботи идват наистина близо един до друг.

00:10:30.260 --> 00:10:32.260
Както можете да видите в този полет, под формата на осмица,

00:10:32.260 --> 00:10:34.260
те идват на сантиметри един от друг.

00:10:34.260 --> 00:10:37.260
И въпреки аеродинамичните взаимодействия

00:10:37.260 --> 00:10:39.260
на тези витла,

00:10:39.260 --> 00:10:41.260
те са в състояние да поддържат стабилен полет.

00:10:41.260 --> 00:10:48.260
(Ръкопляскания)

00:10:48.260 --> 00:10:50.260
Така че, след като знаете как да летите във формация,

00:10:50.260 --> 00:10:52.260
всъщност можете да вдигате обекти в сътрудничество.

00:10:52.260 --> 00:10:54.260
Това просто ни показва,

00:10:54.260 --> 00:10:57.260
че можем да удвоим, утроим, учетворим

00:10:57.260 --> 00:10:59.260
силата на роботите, като просто ги накараме

00:10:59.260 --> 00:11:01.260
да сътрудничат със съседите си, както можете да видите тук.

00:11:01.260 --> 00:11:04.260
Един от недостатъците на това е,

00:11:04.260 --> 00:11:06.260
че като мащабирате нещата --

00:11:06.260 --> 00:11:08.260
ако имате много роботи, които носят едно и също нещо,

00:11:08.260 --> 00:11:11.260
по същество ефективно увеличавате инерцията,

00:11:11.260 --> 00:11:14.260
и следователно плащате цена за това, те няма да са толкова подвижни.

00:11:14.260 --> 00:11:17.260
Но печелите по отношение на товароподемността.

00:11:17.260 --> 00:11:19.260
Друго приложение, което искам да ви покажа --

00:11:19.260 --> 00:11:21.260
отново, това е в нашата лаборатория.

00:11:21.260 --> 00:11:23.260
Това е работа, направена от Куентин Линдзи, който е студент дипломант.

00:11:23.260 --> 00:11:26.260
Неговият алгоритъм по същество казва на тези роботи

00:11:26.260 --> 00:11:28.260
как да изградят самостоятелно

00:11:28.260 --> 00:11:30.260
кубични структури

00:11:30.260 --> 00:11:33.260
от подобни на подпори елементи.

00:11:33.260 --> 00:11:35.260
Алгоритъмът казва на робота

00:11:35.260 --> 00:11:37.260
каква част да вземе,

00:11:37.260 --> 00:11:39.260
кога и къде да я постави.

00:11:39.260 --> 00:11:41.260
В това видео може да видите --

00:11:41.260 --> 00:11:43.260
то е ускорено 10, 14 пъти --

00:11:43.260 --> 00:11:46.260
виждате три различни структури, изградени от тези роботи.

00:11:46.260 --> 00:11:48.260
И отново, всичко е автономно,

00:11:48.260 --> 00:11:50.260
всичко, което Куентин трябва да направи

00:11:50.260 --> 00:11:52.260
е да им даде проектоплан

00:11:52.260 --> 00:11:56.260
на дизайна, който иска да построи.

00:11:56.260 --> 00:11:59.260
Всички тези експерименти, които видяхте до този момент,

00:11:59.260 --> 00:12:01.260
всички тези демонстрации,

00:12:01.260 --> 00:12:04.260
са извършени с помощта на системи заснемащи движението.

00:12:04.260 --> 00:12:06.260
Какво се случва, когато напуснете вашата лаборатория

00:12:06.260 --> 00:12:09.260
и излезете навън в реалния свят?

00:12:09.260 --> 00:12:12.260
И какво, ако има няма GPS?

00:12:12.260 --> 00:12:14.260
Този робот

00:12:14.260 --> 00:12:16.260
всъщност е оборудван с камера

00:12:16.260 --> 00:12:19.260
и лазерен далекомер, лазерен скенер.

00:12:19.260 --> 00:12:21.260
И използва тези сензори

00:12:21.260 --> 00:12:23.260
за да изгради карта на обкръжаващата го среда.

00:12:23.260 --> 00:12:26.260
Тази карта се състои от отличителни белези --

00:12:26.260 --> 00:12:28.260
като врати, прозорци,

00:12:28.260 --> 00:12:30.260
хора, мебели --

00:12:30.260 --> 00:12:32.260
и след това той разбира къде е позицията му

00:12:32.260 --> 00:12:34.260
по отношение на отличителни белези.

00:12:34.260 --> 00:12:36.260
Така че няма глобална координатна система.

00:12:36.260 --> 00:12:39.260
Координатна система се определя на базата на робота,

00:12:39.260 --> 00:12:42.260
къде е и какво търси.

00:12:42.260 --> 00:12:45.260
И той се придвижва по отношение на тези отличителни предмети.

00:12:45.260 --> 00:12:47.260
Искам да ви покажа клип

00:12:47.260 --> 00:12:49.260
на алгоритми, разработени от Франк Шен

00:12:49.260 --> 00:12:51.260
и проф. Нейтън Майкъл,

00:12:51.260 --> 00:12:55.260
който показва този робот да влиза в сграда за първи път

00:12:55.260 --> 00:12:58.260
и да създава тази карта в движение.

00:12:58.260 --> 00:13:01.260
После роботът разбира какви са отличителните предмети

00:13:01.260 --> 00:13:03.260
и изгражда картата.

00:13:03.260 --> 00:13:05.260
Той определя къде се намира по отношение на отличителните предмети

00:13:05.260 --> 00:13:07.260
и после изчислява позицията си

00:13:07.260 --> 00:13:09.260
100 пъти в секунда,

00:13:09.260 --> 00:13:11.260
което ни позволява да използваме алгоритмите за контрол,

00:13:11.260 --> 00:13:13.260
които ви описах по-рано.

00:13:13.260 --> 00:13:15.260
Този робот всъщност се управлява

00:13:15.260 --> 00:13:17.260
отдалечено от Франк.

00:13:17.260 --> 00:13:19.260
Но роботът може също така да разбере

00:13:19.260 --> 00:13:21.260
къде да отиде самостоятелно.

00:13:21.260 --> 00:13:23.260
Да предположим, че искам да изпратя това в сграда

00:13:23.260 --> 00:13:25.260
и нямам представа как изглежда тази сграда,

00:13:25.260 --> 00:13:27.260
мога да накарам този робот да влезе вътре,

00:13:27.260 --> 00:13:29.260
да създаде карта

00:13:29.260 --> 00:13:32.260
и после да се върне и да ми каже как изглежда сградата.

00:13:32.260 --> 00:13:35.260
Така че тук роботът не само решава проблема,

00:13:35.260 --> 00:13:38.260
как да отиде от точка А до точка Б в тази карта,

00:13:38.260 --> 00:13:40.260
но също така определя

00:13:40.260 --> 00:13:42.260
коя е най-добрата точка Б по всяко време.

00:13:42.260 --> 00:13:45.260
Така че по същество знае къде да отиде,

00:13:45.260 --> 00:13:47.260
да търси места, които имат най-малко информация.

00:13:47.260 --> 00:13:50.260
И по този начин попълва тази карта.

00:13:50.260 --> 00:13:52.260
Искам да ви оставя

00:13:52.260 --> 00:13:54.260
с едно последно приложение.

00:13:54.260 --> 00:13:57.260
И има много приложения на тази технология.

00:13:57.260 --> 00:13:59.260
Аз съм професор и ние сме запалени по образованието.

00:13:59.260 --> 00:14:01.260
Роботи като този наистина могат да променят начина,

00:14:01.260 --> 00:14:03.260
по който провеждаме образованието от детската градина до 12 клас.

00:14:03.260 --> 00:14:05.260
Но ние сме в южна Калифорния,

00:14:05.260 --> 00:14:07.260
близо до Лос Анджелис,

00:14:07.260 --> 00:14:09.260
така че трябва да приключа

00:14:09.260 --> 00:14:11.260
с нещо, фокусирано върху развлеченията.

00:14:11.260 --> 00:14:13.260
Искам да завърша с музикален видеоклип.

00:14:13.260 --> 00:14:16.260
Искам да ви представя създателите, Алекс и Даниел,

00:14:16.260 --> 00:14:18.260
които направиха този клип.

00:14:18.260 --> 00:14:25.260
(Ръкопляскания)

00:14:25.260 --> 00:14:27.260
Преди да ви пусна този клип,

00:14:27.260 --> 00:14:30.260
искам да ви кажа, че те го създадоха през последните три дни,

00:14:30.260 --> 00:14:32.260
след като получихме обаждане от Крис.

00:14:32.260 --> 00:14:34.260
И роботите, които свирят във видеото

00:14:34.260 --> 00:14:36.260
са напълно автономни.

00:14:36.260 --> 00:14:39.260
Ще видите девет роботи да свирят на шест различни инструменти.

00:14:39.260 --> 00:14:43.260
И разбира се, това е направено изключително за TED 2012.

00:14:43.260 --> 00:14:46.260
Нека да го видим.

00:15:19.260 --> 00:15:29.260
(Музика)

00:16:23.260 --> 00:16:40.260
(Ръкопляскания)

