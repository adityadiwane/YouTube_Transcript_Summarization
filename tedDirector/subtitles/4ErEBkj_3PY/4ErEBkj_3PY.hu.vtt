WEBVTT
Kind: captions
Language: hu

00:00:00.000 --> 00:00:07.000
Fordító: Csaba Lóki
Lektor: Laszlo Kereszturi

00:00:20.260 --> 00:00:22.260
Jó reggelt.

00:00:22.260 --> 00:00:24.260
Ma önállóan repülő

00:00:24.260 --> 00:00:27.260
strandlabdákról fogok beszélni önöknek.

00:00:27.260 --> 00:00:31.260
Na jó, nem. Inkább mozgékony, 
repülő robotokról, mint ez itt.

00:00:31.260 --> 00:00:34.260
Kicsit mesélnék az építésükkel járó 
kihívásokról,

00:00:34.260 --> 00:00:36.260
és a tecnnológia néhány fantasztikus

00:00:36.260 --> 00:00:38.260
alkalmazási lehetőségéről.

00:00:38.260 --> 00:00:40.260
Nos, ezek a robotok

00:00:40.260 --> 00:00:43.260
hasonlóak a pilóta nélküli repülőgépekhez.

00:00:43.260 --> 00:00:46.260
Ezek azonban nagy méretű járművek.

00:00:46.260 --> 00:00:48.260
Súlyuk több tonnát is meghaladhat,

00:00:48.260 --> 00:00:50.260
és semmiképp nem nevezhetők mozgékonynak.

00:00:50.260 --> 00:00:52.260
Még csak nem is önállóak.

00:00:52.260 --> 00:00:54.260
Valójában sokat közülük

00:00:54.260 --> 00:00:56.260
egész csapatok irányítanak,

00:00:56.260 --> 00:00:59.260
melyek tagjai között vannak pilóták,

00:00:59.260 --> 00:01:01.260
szenzorkezelők,

00:01:01.260 --> 00:01:03.260
valamint bevetésirányítók.

00:01:03.260 --> 00:01:05.260
Mi ilyen, boltban vásárolható --

00:01:05.260 --> 00:01:07.260
itt látható két további kép --

00:01:07.260 --> 00:01:10.260
robotok fejlesztésével foglalkozunk.

00:01:10.260 --> 00:01:13.260
Ezek helikopterek négy légcsavarral,

00:01:13.260 --> 00:01:17.260
nagyjából egyméteres átmérővel

00:01:17.260 --> 00:01:19.260
pár kilós súllyal.

00:01:19.260 --> 00:01:22.260
Ezeket felszereljük érzékelőkkel 
és processzorokkal,

00:01:22.260 --> 00:01:24.260
így aztán zárt térben is tudnak repülni,

00:01:24.260 --> 00:01:26.260
GPS nélkül.

00:01:26.260 --> 00:01:28.260
A robot, amit a kezemben tartok,

00:01:28.260 --> 00:01:30.260
ez itt,

00:01:30.260 --> 00:01:33.260
két diák, Alex és Daniel

00:01:33.260 --> 00:01:35.260
szüleménye.

00:01:35.260 --> 00:01:37.260
Tömege alig több

00:01:37.260 --> 00:01:39.260
mint 5 dkg.

00:01:39.260 --> 00:01:41.260
Energiafogyasztása nagyjából 15 W.

00:01:41.260 --> 00:01:43.260
És ahogy láthatják,

00:01:43.260 --> 00:01:45.260
az átmérője körülbelül 20 cm.

00:01:45.260 --> 00:01:48.260
Hadd adjak egy kis ízelítőt arról,

00:01:48.260 --> 00:01:50.260
hogyan is működnek ezek a robotok.

00:01:50.260 --> 00:01:52.260
Tehát négy légcsavarjuk van.

00:01:52.260 --> 00:01:54.260
Ha ezek azonos sebességgel forognak,

00:01:54.260 --> 00:01:56.260
a robot lebeg.

00:01:56.260 --> 00:01:59.260
Ha mindegyik csavar sebességét növeljük,

00:01:59.260 --> 00:02:02.260
a robot felszáll, felfelé gyorsít.

00:02:02.260 --> 00:02:04.260
Természetesen, ha a robot megdől,

00:02:04.260 --> 00:02:06.260
eltér a vízszintestől,

00:02:06.260 --> 00:02:09.260
akkor ebbe az irányba gyorsít.

00:02:09.260 --> 00:02:12.260
Ezt kétféleképpen érhetjük el.

00:02:12.260 --> 00:02:14.260
Ezen a képen

00:02:14.260 --> 00:02:16.260
a négyes csavar gyorsabban forog,

00:02:16.260 --> 00:02:18.260
míg a kettes lassabban.

00:02:18.260 --> 00:02:20.260
Ennek köszönhetően

00:02:20.260 --> 00:02:23.260
a nyomaték megdönti a robotot.

00:02:23.260 --> 00:02:25.260
A másik irányban,

00:02:25.260 --> 00:02:28.260
ha növeljük a hármas csavar sebességét

00:02:28.260 --> 00:02:30.260
és csökkentjük az egyesét,

00:02:30.260 --> 00:02:33.260
a robot előre dől.

00:02:33.260 --> 00:02:35.260
És végül, ha a két szemközti rotort

00:02:35.260 --> 00:02:37.260
gyorsabban forgatjuk

00:02:37.260 --> 00:02:39.260
mint a másik kettőt, a robot

00:02:39.260 --> 00:02:41.260
a függőleges tengely körül fordul el.

00:02:41.260 --> 00:02:43.260
Egy fedélzeti processzor figyeli,

00:02:43.260 --> 00:02:46.260
hogy milyen mozgásokat kell végrehajtani,

00:02:46.260 --> 00:02:48.260
és ezeket kombinálva,

00:02:48.260 --> 00:02:51.260
ad megfelelő parancsokat a motoroknak,

00:02:51.260 --> 00:02:53.260
másodpercenként 600-szor.

00:02:53.260 --> 00:02:55.260
Alapvetően így működik ez az egész.

00:02:55.260 --> 00:02:57.260
E design egyik előnye,

00:02:57.260 --> 00:02:59.260
hogy a méret csökkentésével

00:02:59.260 --> 00:03:02.260
a robot mozgékonnyá válik.

00:03:02.260 --> 00:03:04.260
Itt R jelenti

00:03:04.260 --> 00:03:06.260
a robot karhosszát.

00:03:06.260 --> 00:03:09.260
Ez tulajdonképpen az átmérő fele.

00:03:09.260 --> 00:03:12.260
Az R csökkentésével számos

00:03:12.260 --> 00:03:14.260
fizikai paraméter ugyancsak változik.

00:03:14.260 --> 00:03:16.260
A legfontosabb

00:03:16.260 --> 00:03:18.260
a tehetetlenség és a mozgási ellenállás.

00:03:18.260 --> 00:03:20.260
Mint az kiderül,

00:03:20.260 --> 00:03:23.260
a tehetetlenség, ami meghatározza 
a szögsebességet,

00:03:23.260 --> 00:03:26.260
R ötödik hatványával arányos.

00:03:26.260 --> 00:03:28.260
Szóval minél kisebb R,

00:03:28.260 --> 00:03:31.260
annál drasztikusabban csökken 
a tehetetlenség.

00:03:31.260 --> 00:03:34.260
Ennek köszönhetően, a szöggyorsulás

00:03:34.260 --> 00:03:36.260
itt alfával jelölve,

00:03:36.260 --> 00:03:38.260
egyenlő 1/R-rel.

00:03:38.260 --> 00:03:40.260
Azaz fordítottan arányos R-rel.

00:03:40.260 --> 00:03:43.260
Minél kisebb, annál gyorsabban fordul.

00:03:43.260 --> 00:03:45.260
Ahogy ez a videókból is látható.

00:03:45.260 --> 00:03:48.260
A jobb alsó sarokban látunk egy robotot,

00:03:48.260 --> 00:03:50.260
ahogy egy 360 fokos fordulatot csinál

00:03:50.260 --> 00:03:52.260
kevesebb, mint fél másodperc alatt.

00:03:52.260 --> 00:03:55.260
Többszörös fordulat, kicsivel több idő.

00:03:55.260 --> 00:03:57.260
A fedélzeti folyamatok

00:03:57.260 --> 00:03:59.260
visszajelzést kapnak a gyorsulásmérőktől

00:03:59.260 --> 00:04:01.260
és a giroszkópoktól,

00:04:01.260 --> 00:04:03.260
és kiszámolják, ahogy már említettem,

00:04:03.260 --> 00:04:05.260
a parancsokat másodpercenként 600-szor,

00:04:05.260 --> 00:04:07.260
a robot stabilizálása érdekében.

00:04:07.260 --> 00:04:10.260
Bal oldalon látjuk, ahogy Daniel 
a levegőbe dobja a robotot.

00:04:10.260 --> 00:04:12.260
Jól mutatja, milyen kifinomult a vezérlés.

00:04:12.260 --> 00:04:14.260
Nem számít, hogyan dobja el,

00:04:14.260 --> 00:04:18.260
a robot magához tér, és visszarepül hozzá.

00:04:18.260 --> 00:04:20.260
De miért is építsünk ilyen robotokat?

00:04:20.260 --> 00:04:23.260
Nos, számos alkalmazásuk lehet.

00:04:23.260 --> 00:04:26.260
Beküldhetjük őket ilyen épületekbe

00:04:26.260 --> 00:04:29.260
első reagálókként, a behatolók 
felderítésére,

00:04:29.260 --> 00:04:32.260
esetleg biokémiai szennyezés,

00:04:32.260 --> 00:04:34.260
vagy gázszivárgás keresésére.

00:04:34.260 --> 00:04:36.260
Használhatjuk őket például

00:04:36.260 --> 00:04:38.260
építési feladatokra.

00:04:38.260 --> 00:04:42.260
Itt a robotok oszlopokat és 
gerendákat hordanak

00:04:42.260 --> 00:04:45.260
és kockaszerű építményeket 
raknak össze belőlük.

00:04:45.260 --> 00:04:48.260
Erről később kicsit bővebben mesélek.

00:04:48.260 --> 00:04:51.260
A robotok használhatók teherszállításra.

00:04:51.260 --> 00:04:54.260
Bár az egyik probléma ezekkel a 
kis robotokkal

00:04:54.260 --> 00:04:56.260
a korlátozott teherbírásuk.

00:04:56.260 --> 00:04:58.260
Ezért teherszállításra érdemes

00:04:58.260 --> 00:05:00.260
több robotot alkalmazni egyszerre.

00:05:00.260 --> 00:05:02.260
Ez a felvétel mostanában készült --

00:05:02.260 --> 00:05:04.260
vagy nem is annyira --

00:05:04.260 --> 00:05:07.260
Sendaiban, nem sokkal a földrengés után.

00:05:07.260 --> 00:05:10.260
A robotokat be tudjuk küldeni 
az összeomlott épületekbe,

00:05:10.260 --> 00:05:12.260
felmérni a katasztrófa utáni károkat,

00:05:12.260 --> 00:05:15.260
vagy reaktorépületekbe,

00:05:15.260 --> 00:05:18.260
a sugárzási szint mérésére.

00:05:19.260 --> 00:05:21.260
Egy alapvető probléma,

00:05:21.260 --> 00:05:24.260
melyet az önálló robotoknak 
meg kell oldaniuk,

00:05:24.260 --> 00:05:26.260
hogy kitalálják,

00:05:26.260 --> 00:05:28.260
hogyan jussanak A pontból B-be.

00:05:28.260 --> 00:05:30.260
Ez már kicsit komolyabb kihívás,

00:05:30.260 --> 00:05:33.260
mert a robotok dinamikája elég bonyolult.

00:05:33.260 --> 00:05:35.260
Konkrétan, egy 12 dimenziós térben élnek.

00:05:35.260 --> 00:05:37.260
Ezért Itt bevetünk egy kis trükköt.

00:05:37.260 --> 00:05:40.260
Fogjuk ezt a hajlított 12-dimenziós teret,

00:05:40.260 --> 00:05:42.260
és transzformáljuk

00:05:42.260 --> 00:05:44.260
egy lapos, négydimenziós térbe.

00:05:44.260 --> 00:05:46.260
Ez a négydimenziós tér pedig

00:05:46.260 --> 00:05:49.260
az X, Y, Z tengelyből és a kitérés 
szögéből áll.

00:05:49.260 --> 00:05:51.260
A robot dolga megtervezni

00:05:51.260 --> 00:05:55.260
az úgynevezett 
"legkisebb csapódású röppályát".

00:05:55.260 --> 00:05:57.260
Egy kis fizikai emlékeztető:

00:05:57.260 --> 00:05:59.260
a hely deriváltja a sebesség,

00:05:59.260 --> 00:06:01.260
majd a gyorsulás,

00:06:01.260 --> 00:06:03.260
aztán rándulás

00:06:03.260 --> 00:06:05.260
és azt követi a csapódás.

00:06:05.260 --> 00:06:08.260
A robot a csapódást minimalizálja.

00:06:08.260 --> 00:06:10.260
Ennek eredményeként

00:06:10.260 --> 00:06:12.260
egy sima és kecses mozgás áll elő.

00:06:12.260 --> 00:06:15.260
És így képes elkerülni az akadályokat.

00:06:15.260 --> 00:06:18.260
Az ebben a lapos térben lévő 
csapódási pályákat

00:06:18.260 --> 00:06:20.260
aztán visszatranszformáljuk

00:06:20.260 --> 00:06:22.260
a bonyolult, 12 dimenziós térbe,

00:06:22.260 --> 00:06:24.260
ahol a robotok

00:06:24.260 --> 00:06:26.260
vezérlése és működése zajlik.

00:06:26.260 --> 00:06:28.260
Hadd mutassam be, hogy is néznek ki

00:06:28.260 --> 00:06:30.260
a legkisebb csapódású pályák!

00:06:30.260 --> 00:06:32.260
Az első videón látjuk,

00:06:32.260 --> 00:06:34.260
amint a robot A pontból B-be jut

00:06:34.260 --> 00:06:36.260
egy köztes ponton keresztül.

00:06:42.260 --> 00:06:44.260
A robot jól láthatóan képes

00:06:44.260 --> 00:06:46.260
tetszőleges görbe pályát bejárni.

00:06:46.260 --> 00:06:48.260
Ezeken a körkörös pályákon

00:06:48.260 --> 00:06:51.260
a robotra kb. 2g gyorsulás hat.

00:06:52.260 --> 00:06:56.260
A tetején mozgásrögzítő kamerák vannak,

00:06:56.260 --> 00:06:59.260
amelyek másodpercenként 100-szor 
közlik a robottal a helyzetét.

00:06:59.260 --> 00:07:02.260
A robot ezen keresztül értesül 
az akadályokról is.

00:07:02.260 --> 00:07:04.260
Az akadályok pedig elmozdulhatnak.

00:07:04.260 --> 00:07:07.260
Itt azt látjuk, amint Daniel feldobja 
ezt a karikát,

00:07:07.260 --> 00:07:09.260
a robot pedig kiszámolja 
a karika helyzetét,

00:07:09.260 --> 00:07:13.260
és megpróbálja rajta keresztül a legjobb 
utat megtalálni.

00:07:13.260 --> 00:07:15.260
Mi, kutatók, hozzászoktunk, hogy karikákon

00:07:15.260 --> 00:07:18.260
ugorjunk át egy kis támogatás érdekében,

00:07:18.260 --> 00:07:21.260
de most ezt a robotokkal csináltatjuk.

00:07:21.260 --> 00:07:27.260
(Taps)

00:07:27.260 --> 00:07:29.260
Egy másik dolog, amire a robot képes,

00:07:29.260 --> 00:07:32.260
képes emlékezni a pálya egyes darabjaira,

00:07:32.260 --> 00:07:34.260
amit megtanult, vagy amire programozták.

00:07:34.260 --> 00:07:36.260
Itt azt látjuk, ahogy a robot

00:07:36.260 --> 00:07:38.260
egy kombinált mozgás révén

00:07:38.260 --> 00:07:40.260
lendületet vesz, majd irányt vált,

00:07:40.260 --> 00:07:43.260
végül visszatér eredeti helyzetébe.

00:07:43.260 --> 00:07:46.260
Erre azért van szükség, mert ez 
az ablaknyílás

00:07:46.260 --> 00:07:50.260
alig nagyobb, mint a robot szélessége.

00:07:50.260 --> 00:07:53.260
Ahogy a műugró az ugródeszkán

00:07:53.260 --> 00:07:55.260
felugrik, hogy lendületet vegyen

00:07:55.260 --> 00:07:58.260
a forgással a két és fél szaltóhoz,

00:07:58.260 --> 00:08:00.260
amit aztán kecsesen kivezet,

00:08:00.260 --> 00:08:02.260
a robot is ugyanezt csinálja.

00:08:02.260 --> 00:08:05.260
Tehát képes kis pályadarabokat kombinálni

00:08:05.260 --> 00:08:09.260
ilyen nehéz feladatok megoldása érdekében.

00:08:09.260 --> 00:08:11.260
Most gyorsítsunk egy kicsit!

00:08:11.260 --> 00:08:14.260
E kis robotok egyik hátránya a méretük.

00:08:14.260 --> 00:08:16.260
Ahogy korábban mondtam,

00:08:16.260 --> 00:08:18.260
sok-sok robotra lehet szükségünk

00:08:18.260 --> 00:08:21.260
a méretkorlát legyőzéséhez.

00:08:21.260 --> 00:08:23.260
Az egyik nehézség

00:08:23.260 --> 00:08:26.260
ezeknek a robotoknak az összehangolása.

00:08:26.260 --> 00:08:28.260
Ehhez a természetet hívtuk segítségül.

00:08:28.260 --> 00:08:30.260
Mutatok egy filmet, amelyen

00:08:30.260 --> 00:08:32.260
Stephen Pratt professzor laboratóriumában

00:08:32.260 --> 00:08:35.260
sivatagi Aphaenogaster hangyák cipelnek 
egy tárgyat.

00:08:35.260 --> 00:08:37.260
Konkrétan egy darab fügét.

00:08:37.260 --> 00:08:39.260
Vagy bármit, amit fügesziruppal bekenünk,

00:08:39.260 --> 00:08:42.260
ezek a hangyák becipelnek a bolyba.

00:08:42.260 --> 00:08:45.260
A hangyáknak nincs egyetlen parancsnokuk.

00:08:45.260 --> 00:08:47.260
Egyszerűen érzékelik a szomszédjaikat.

00:08:47.260 --> 00:08:49.260
Nincs köztük konkrét kommunikáció.

00:08:49.260 --> 00:08:51.260
De mivel érzékelik szomszédjaikat,

00:08:51.260 --> 00:08:53.260
és érzékelik a tárgyat, mégis kialakul

00:08:53.260 --> 00:08:56.260
egyfajta koordináció a csoportban.

00:08:56.260 --> 00:08:58.260
Pontosan ilyen koordinációt akarunk

00:08:58.260 --> 00:09:01.260
mi is elérni a robotok között.

00:09:01.260 --> 00:09:03.260
Ha van egy robotunk,

00:09:03.260 --> 00:09:05.260
amit körülvesznek a szomszédjai --

00:09:05.260 --> 00:09:07.260
legyen ez az I és J robot --

00:09:07.260 --> 00:09:09.260
azt akarjuk, hogy ezek

00:09:09.260 --> 00:09:12.260
figyeljék az egymás közti távolságot,

00:09:12.260 --> 00:09:14.260
amikor kötelékben repülnek.

00:09:14.260 --> 00:09:16.260
Azt akarjuk, hogy ez a távolság

00:09:16.260 --> 00:09:18.260
bizonyos határokon belül maradjon.

00:09:18.260 --> 00:09:21.260
A robot tehát figyeli ezt a hibát,

00:09:21.260 --> 00:09:23.260
és másodpercenként 100-szor

00:09:23.260 --> 00:09:25.260
kiszámítja a szükséges korrekciókat,

00:09:25.260 --> 00:09:28.260
és másodpercenként 600-szor 
motorparancsokra fordítja őket.

00:09:28.260 --> 00:09:30.260
Ráadásul mindezt decentralizált módon

00:09:30.260 --> 00:09:32.260
kell végrehajtani.

00:09:32.260 --> 00:09:34.260
Ismét hangsúlyozom: ha sok robotunk van,

00:09:34.260 --> 00:09:38.260
akkor lehetetlen ezt az információt 
központilag,

00:09:38.260 --> 00:09:41.260
a feladat megoldáshoz elegendő 
sebességgel kezelni.

00:09:41.260 --> 00:09:43.260
Ráadásul a robotok az akcióikat

00:09:43.260 --> 00:09:45.260
csak a szomszédjaiktól kapott,

00:09:45.260 --> 00:09:47.260
lokális információkra építhetik.

00:09:47.260 --> 00:09:49.260
Végül pedig, ragaszkodunk hozzá,

00:09:49.260 --> 00:09:51.260
hogy a robotok ne tudják,

00:09:51.260 --> 00:09:53.260
kik a szomszédjaik.

00:09:53.260 --> 00:09:56.260
Ezt hívjuk anonimitásnak.

00:09:56.260 --> 00:09:58.260
A következő videón bemutatom,

00:09:58.260 --> 00:10:00.260
amint

00:10:00.260 --> 00:10:03.260
20 ilyen apró robot

00:10:03.260 --> 00:10:05.260
kötelékben repül.

00:10:05.260 --> 00:10:08.260
Mindannyian figyelik szomszédjaik 
pozícióját.

00:10:08.260 --> 00:10:10.260
Fenntartják a köteléket.

00:10:10.260 --> 00:10:12.260
A kötelék alakja akár változhat is.

00:10:12.260 --> 00:10:14.260
Lehet síkbeli alakzat,

00:10:14.260 --> 00:10:16.260
vagy akár térbeli.

00:10:16.260 --> 00:10:18.260
Ahogy látható, képesek átmenni

00:10:18.260 --> 00:10:21.260
egy térbeli alakzatból egy síkbeli 
alakzatba.

00:10:21.260 --> 00:10:23.260
És miközben akadályokon haladnak át,

00:10:23.260 --> 00:10:27.260
képesek a köteléket menet közben 
módosítani.

00:10:27.260 --> 00:10:30.260
Látható ismét, hogy a egymáshoz 
nagyon közel vannak.

00:10:30.260 --> 00:10:32.260
Ezen a nyolcas köteléken látható,

00:10:32.260 --> 00:10:34.260
hogy pár centiméterre vannak egymástól.

00:10:34.260 --> 00:10:37.260
A rotorlapátok aerodinamikai

00:10:37.260 --> 00:10:39.260
kölcsönhatását leszámítva,

00:10:39.260 --> 00:10:41.260
képesek stabilan repülni.

00:10:41.260 --> 00:10:48.260
(Taps)

00:10:48.260 --> 00:10:50.260
Miután már tudnak kötelékben repülni,

00:10:50.260 --> 00:10:52.260
kezdhetnek tárgyakat közösen felemelni.

00:10:52.260 --> 00:10:54.260
Ez azt mutatja, hogyan tudjuk

00:10:54.260 --> 00:10:57.260
megduplázni, háromszorozni, négyszerezni

00:10:57.260 --> 00:10:59.260
a robot erejét úgy, hogy szomszédjaikkal

00:10:59.260 --> 00:11:01.260
csoportba szervezzük őket, 
ahogy itt látható.

00:11:01.260 --> 00:11:04.260
Ennek a módszernek az egyik hátránya,

00:11:04.260 --> 00:11:06.260
hogy -- a méretek növelésével -- azaz,

00:11:06.260 --> 00:11:08.260
ha sok robot emel fel egyetlen tárgyat,

00:11:08.260 --> 00:11:11.260
akkor jelentősen nő a tehetetlenség,

00:11:11.260 --> 00:11:14.260
tehát a dolognak ára van: 
csökken a mozgékonyság.

00:11:14.260 --> 00:11:17.260
A teherhordó-képesség tekintetében 
viszont nyerünk.

00:11:17.260 --> 00:11:19.260
Itt egy másik alkalmazás,

00:11:19.260 --> 00:11:21.260
amit ismét a laborunkban mutatok be.

00:11:21.260 --> 00:11:23.260
Ez Quentin Lindsay, egy hallgató munkája.

00:11:23.260 --> 00:11:26.260
Az algoritmusa megmondja a robotoknak,

00:11:26.260 --> 00:11:28.260
hogyan építsenek önállóan

00:11:28.260 --> 00:11:30.260
szögletes formájú építményeket

00:11:30.260 --> 00:11:33.260
gerendaszerű elemekből.

00:11:33.260 --> 00:11:35.260
Az algoritmus megmondja a robotnak,

00:11:35.260 --> 00:11:37.260
melyik darabot emelje fel,

00:11:37.260 --> 00:11:39.260
és hogy mikor és hova tegye.

00:11:39.260 --> 00:11:41.260
Itt, ezen a videón --

00:11:41.260 --> 00:11:43.260
10-14-szeresen felgyorsítva --

00:11:43.260 --> 00:11:46.260
három különböző struktúra építése látható.

00:11:46.260 --> 00:11:48.260
Ez ismét egy teljesen autonóm folyamat,

00:11:48.260 --> 00:11:50.260
amihez Quentinnek mindössze

00:11:50.260 --> 00:11:52.260
az építendő szerkezetek

00:11:52.260 --> 00:11:56.260
tervrajzát kellett a robotoknak adnia.

00:11:56.260 --> 00:11:59.260
Az eddig bemutatott kísérletek

00:11:59.260 --> 00:12:01.260
valamennyien mozgásrögzítő rendszerek

00:12:01.260 --> 00:12:04.260
segítségével készültek.

00:12:04.260 --> 00:12:06.260
De mi történik, ha elhagyjuk a labort,

00:12:06.260 --> 00:12:09.260
és kilépünk a való világba?

00:12:09.260 --> 00:12:12.260
Mi van, ha nincs GPS-ünk?

00:12:12.260 --> 00:12:14.260
Nos, ez a robot

00:12:14.260 --> 00:12:16.260
rendelkezik egy kamerával,

00:12:16.260 --> 00:12:19.260
és egy lézeres távolságmérővel, 
egy szkennerrel.

00:12:19.260 --> 00:12:21.260
Ezeket az érzékelőket használja

00:12:21.260 --> 00:12:23.260
környezetének feltérképezésére.

00:12:23.260 --> 00:12:26.260
Ez a térkép olyan dolgokat tartalmaz,

00:12:26.260 --> 00:12:28.260
mint ajtók, ablakok,

00:12:28.260 --> 00:12:30.260
emberek, bútorok,

00:12:30.260 --> 00:12:32.260
ezekből találja ki az aktuális helyzetét,

00:12:32.260 --> 00:12:34.260
a felsorolt objektumokhoz képest.

00:12:34.260 --> 00:12:36.260
Nem használ globális koordinátarendszert.

00:12:36.260 --> 00:12:39.260
A koordinátarendszer a roboton alapul,

00:12:39.260 --> 00:12:42.260
a pillanatnyi helyzetén, és azon, 
amit éppen lát.

00:12:42.260 --> 00:12:45.260
Ezen objektumok alapján navigál.

00:12:45.260 --> 00:12:47.260
A most következő film

00:12:47.260 --> 00:12:49.260
Frank Shen és Nathan Michael professzor

00:12:49.260 --> 00:12:51.260
algoritmusát illusztrálja, 
aminek segítségével

00:12:51.260 --> 00:12:55.260
a robot, ami először jár egy épületben,

00:12:55.260 --> 00:12:58.260
menet közben térképezi fel azt.

00:12:58.260 --> 00:13:01.260
Tehát a robot maga határozza meg 
az objektumokat.

00:13:01.260 --> 00:13:03.260
Ő maga készíti a térképet. Meghatározza

00:13:03.260 --> 00:13:05.260
az objektumokhoz viszonyított helyzetét,

00:13:05.260 --> 00:13:07.260
majd másodpercenként 100-szor

00:13:07.260 --> 00:13:09.260
megbecsüli a pozícióját,

00:13:09.260 --> 00:13:11.260
lehetővé téve ezzel a korábban említett

00:13:11.260 --> 00:13:13.260
vezérlő algoritmus használatát.

00:13:13.260 --> 00:13:15.260
Tehát ezt a robotot valójában

00:13:15.260 --> 00:13:17.260
Frank irányítja távolról.

00:13:17.260 --> 00:13:19.260
A robot azonban maga is képes

00:13:19.260 --> 00:13:21.260
kitalálni, merre menjen.

00:13:21.260 --> 00:13:23.260
Ha például be akarom küldeni 
ebbe az épületbe, de fogalmam sincs,

00:13:23.260 --> 00:13:25.260
hogy az épület hogy néz ki belülről,

00:13:25.260 --> 00:13:27.260
kérhetem a robotot, hogy menjen be,

00:13:27.260 --> 00:13:29.260
készítsen egy térképet, majd jöjjön ki,

00:13:29.260 --> 00:13:32.260
és mondja el nekem, mit látott.

00:13:32.260 --> 00:13:35.260
Ez esetben a robot nem egyszerűen

00:13:35.260 --> 00:13:38.260
az A-ból B-be jutás problémáját oldja meg,

00:13:38.260 --> 00:13:40.260
hanem azt is folyamatosan kitalálja,

00:13:40.260 --> 00:13:42.260
hogy melyik a legjobb soron következő B.

00:13:42.260 --> 00:13:45.260
Még azt is tudja, merre menjen, 
hogy megtalálja

00:13:45.260 --> 00:13:47.260
az információs fehér foltokat.

00:13:47.260 --> 00:13:50.260
Így tölti fel adatokkal a térképet.

00:13:50.260 --> 00:13:52.260
Búcsúzóul mutatok önöknek

00:13:52.260 --> 00:13:54.260
még egy alkalmazási lehetőséget.

00:13:54.260 --> 00:13:57.260
Az alkalmazási lehetőségek egyébként 
végtelenek.

00:13:57.260 --> 00:13:59.260
Tanárként, nekem szenvedélyem az oktatás.

00:13:59.260 --> 00:14:01.260
Az effajta robotok teljesen átformálhatják

00:14:01.260 --> 00:14:03.260
az alap- és középfokú oktatást.

00:14:03.260 --> 00:14:05.260
Most azonban Dél-Kaliforniában vagyunk,

00:14:05.260 --> 00:14:07.260
Los Angeles közelében,

00:14:07.260 --> 00:14:09.260
ezért kötelességem

00:14:09.260 --> 00:14:11.260
valami szórakoztatóval befejezni.

00:14:11.260 --> 00:14:13.260
Ez a valami egy zenei videó.

00:14:13.260 --> 00:14:16.260
Ismerjék meg az alkotóit,

00:14:16.260 --> 00:14:18.260
Alexet és Danielt.

00:14:18.260 --> 00:14:25.260
(Taps)

00:14:25.260 --> 00:14:27.260
Mielőtt lejátszanám ezt a videót,

00:14:27.260 --> 00:14:30.260
elmondom, hogy Chris hívását követően

00:14:30.260 --> 00:14:32.260
három napjuk volt az elkészítésére.

00:14:32.260 --> 00:14:34.260
A film szereplői pedig

00:14:34.260 --> 00:14:36.260
autonóm robotok.

00:14:36.260 --> 00:14:39.260
Kilenc robot fog játszani hat különböző 
hangszeren.

00:14:39.260 --> 00:14:43.260
A produkció kizárólag a TED 2012 
számára készült.

00:14:43.260 --> 00:14:46.260
Lássuk!

00:15:19.260 --> 00:15:29.260
(Zene)

00:16:23.260 --> 00:16:40.260
(Taps)

