WEBVTT
Kind: captions
Language: da

00:00:00.000 --> 00:00:07.000
Translator: David J. Kreps Finnemann
Reviewer: Eivind Tøstesen

00:00:12.160 --> 00:00:15.160
Folk diskuterer energisk om definitionen på liv.

00:00:15.160 --> 00:00:20.160
De spørger om der bør være reproduktion i den, eller metabolisme eller evolution.

00:00:20.160 --> 00:00:22.160
Og jeg kender ikke svaret på det, så det vil jeg ikke fortælle jer.

00:00:22.160 --> 00:00:25.160
Jeg vil sige at liv indeholder beregning.

00:00:25.160 --> 00:00:27.160
Så dette er et computerprogram.

00:00:27.160 --> 00:00:30.160
Når programmet startes i en celle, vil det køres

00:00:30.160 --> 00:00:33.160
og det kunne resultere i denne person;

00:00:33.160 --> 00:00:36.160
eller med en lille ændring, kunne det resultere i denne person;

00:00:36.160 --> 00:00:38.160
eller en anden lille ændring, denne person;

00:00:38.160 --> 00:00:41.160
eller med en større ændring, denne hund,

00:00:41.160 --> 00:00:43.160
eller dette træ, eller denne hval.

00:00:43.160 --> 00:00:45.160
Hvis man nu tager denne metafor

00:00:45.160 --> 00:00:47.160
[om] genomet som program alvorligt,

00:00:47.160 --> 00:00:49.160
så må man bemærke at Chris Anderson

00:00:49.160 --> 00:00:52.160
er et computergenereret produkt, det samme er Jim Watson,

00:00:52.160 --> 00:00:55.160
Craig Venter, og det er vi alle.

00:00:55.160 --> 00:00:57.160
Og for at overbevise sig selv om at denne metafor er sand,

00:00:57.160 --> 00:00:59.160
er der mange ligheder mellem genetiske programmer

00:00:59.160 --> 00:01:02.160
og computerprogrammer der kunne hjælpe med at overbevise en.

00:01:02.160 --> 00:01:04.160
Men en der er mest overbevisende for mig

00:01:04.160 --> 00:01:07.160
er den særegne følsomhed overfor små forandringer

00:01:07.160 --> 00:01:10.160
der kan lave store forandringer i den biologiske udvikling -- outputtet.

00:01:10.160 --> 00:01:12.160
En lille mutation kan tage en tovinget flue

00:01:12.160 --> 00:01:13.160
og gøre den til en firevinget flue.

00:01:13.160 --> 00:01:17.160
Eller det kan tage en flue og placere ben hvor antennerne bør være.

00:01:17.160 --> 00:01:19.160
Eller hvis man er bekendt med "The Princess Bride,"

00:01:19.160 --> 00:01:21.160
kunne det skabe en seksfingret mand.

00:01:21.160 --> 00:01:23.160
Et kendetegn ved computerprogrammer

00:01:23.160 --> 00:01:26.160
er præcis denne slags følsomhed overfor små forandinger.

00:01:26.160 --> 00:01:28.160
Hvis der står en dollar på ens bankkonto og man vender en enkelt bit,

00:01:28.160 --> 00:01:30.160
kunne man ende med at have tusinde dollars.

00:01:30.160 --> 00:01:33.160
Disse små ændringer, er ting som jeg mener

00:01:33.160 --> 00:01:35.160
er -- de viser os at en kompliceret beregning

00:01:35.160 --> 00:01:39.160
i biologisk udvikling ligger under disse forstørrede, store forandringer.

00:01:39.160 --> 00:01:45.160
Alt dette indikerer at der er molekylære programmer der ligger bag biologien,

00:01:45.160 --> 00:01:49.160
og det viser kraften i molekylære programmer -- det gør biologi.

00:01:49.160 --> 00:01:51.160
Og det jeg vil gøre er, at jeg vil skrive molekylære programmer,

00:01:51.160 --> 00:01:53.160
potentielt til at bygge teknologi.

00:01:53.160 --> 00:01:54.160
Og der er mange mennesker der gør dette,

00:01:54.160 --> 00:01:57.160
mange syntetiske biologer gør dette, som Craig Venter.

00:01:57.160 --> 00:01:59.160
Og de koncentrerer sig om at bruge celler.

00:01:59.160 --> 00:02:01.160
De er celle-orienterede.

00:02:01.160 --> 00:02:03.160
Mine venner, molekylære programmører, og jeg

00:02:03.160 --> 00:02:05.160
har en slags biomolekyle-centreret tilgang.

00:02:05.160 --> 00:02:08.160
Vi er interesserede i at bruge DNA, RNA, og protein,

00:02:08.160 --> 00:02:11.160
og bygge nye sprog til at bygge ting op fra bunden,

00:02:11.160 --> 00:02:12.160
ved hjælp af biomolekyler,

00:02:12.160 --> 00:02:15.160
der potentielt ikke har noget at gøre med biologi.

00:02:15.160 --> 00:02:19.160
Dette er alle maskinerne i en celle.

00:02:19.160 --> 00:02:21.160
Der er et kamera.

00:02:21.160 --> 00:02:22.160
Der er solcellerne i cellen,

00:02:22.160 --> 00:02:24.160
nogle kontakter der tænder og slukker for ens gener,

00:02:24.160 --> 00:02:27.160
dragerne i cellen, motorerne der bevæger ens muskler.

00:02:27.160 --> 00:02:29.160
Min lille gruppe af molekylære programmører

00:02:29.160 --> 00:02:33.160
prøver at genopbygge alle disse dele fra DNA.

00:02:33.160 --> 00:02:35.160
Vi er ikke DNA fanatikere, men DNA er det billigste,

00:02:35.160 --> 00:02:38.160
det nemmeste at forstå og det nemmeste materiale at programmere.

00:02:38.160 --> 00:02:40.160
Og i takt med at andre ting bliver nemmere at bruge --

00:02:40.160 --> 00:02:43.160
måske protein -- vil vi arbejde med dem.

00:02:43.160 --> 00:02:45.160
Hvis vi lykkedes, hvordan vil molekylær programmering så se ud?

00:02:45.160 --> 00:02:47.160
Man vil sidde foran sin computer.

00:02:47.160 --> 00:02:49.160
Man designer noget der ligner en mobiltelefon,

00:02:49.160 --> 00:02:51.160
og i et højniveausprog, beskriver man den mobiltelefon.

00:02:51.160 --> 00:02:53.160
Så har man en kompilator

00:02:53.160 --> 00:02:54.160
der tager den beskrivelse

00:02:54.160 --> 00:02:56.160
og forvandler det til faktiske molekyler

00:02:56.160 --> 00:02:58.160
der kan sendes til en synthesiser

00:02:58.160 --> 00:03:01.160
og den synthesizer pakker de molekyler ind i et kim.

00:03:01.160 --> 00:03:04.160
Og det der sker når man vander og fodrer kimet rigtigt er,

00:03:04.160 --> 00:03:06.160
at det laver en udviklingsmæssig udregning,

00:03:06.160 --> 00:03:09.160
en molekylær udregning, og den bygger en elektronisk computer.

00:03:09.160 --> 00:03:11.160
Og hvis jeg ikke har afsløret mine fordomme allerede,

00:03:12.160 --> 00:03:14.160
så tror jeg livet har handlet om molekylære computere

00:03:14.160 --> 00:03:16.160
der bygger elektrokemiske computere,

00:03:16.160 --> 00:03:18.160
der bygger elektroniske computere,

00:03:18.160 --> 00:03:20.160
der sammen med elektrokemiske computere

00:03:20.160 --> 00:03:22.160
bygger nye molekylære computere,

00:03:22.160 --> 00:03:25.160
der vil bygge nye elektroniske computere, og så videre.

00:03:25.160 --> 00:03:26.160
Og hvis man tror på alt dette,

00:03:26.160 --> 00:03:28.160
og man mener at livet handler om beregning, som jeg gør,

00:03:28.160 --> 00:03:31.160
så ser man på de store spørgsmål gennem en computer forskers øjne.

00:03:31.160 --> 00:03:35.160
Et stort spørgsmål er nu, hvordan ved en baby hvornår den skal holde op med at vokse?

00:03:35.160 --> 00:03:37.160
Og for molekylær programmering,

00:03:37.160 --> 00:03:39.160
er spørgsmålet hvordan ens mobiltelefon ved hvornår den skal holde op med at vokse?

00:03:39.160 --> 00:03:40.160
(Latter)

00:03:40.160 --> 00:03:43.160
Eller hvordan ved et computerprogram hvornår det skal holde op med at køre?

00:03:43.160 --> 00:03:46.160
Eller mere til sagen, hvordan ved man om et program nogensinde stopper?

00:03:46.160 --> 00:03:48.160
Der er andre spørgsmål som dette også.

00:03:48.160 --> 00:03:50.160
Et af dem er Craig Venters spørgsmål.

00:03:50.160 --> 00:03:52.160
Det viser, tror jeg, at han i virkeligheden er computer forsker.

00:03:52.160 --> 00:03:55.160
Han spurgte, hvor stort er det minimale genom

00:03:55.160 --> 00:03:57.160
der giver mig en funktionerende mikroorganisme?

00:03:57.160 --> 00:03:59.160
Hvor få gener kan jeg bruge?

00:03:59.160 --> 00:04:01.160
Dette svarer præcist til spørgsmålet,

00:04:01.160 --> 00:04:02.160
hvad er det mindste program jeg kan skrive

00:04:02.160 --> 00:04:04.160
der vil handle præcist som Microsoft Word?

00:04:04.160 --> 00:04:05.160
(Latter)

00:04:05.160 --> 00:04:09.160
Og ligesom han skriver, I ved, bakterier der er mindre,

00:04:09.160 --> 00:04:10.160
han skriver genomer der vil fungere,

00:04:10.160 --> 00:04:12.160
så kunne vi skrive mindre programmer

00:04:12.160 --> 00:04:14.160
der gør det som Microsoft Word gør.

00:04:14.160 --> 00:04:16.160
Men til molekylær programmering, er vores spørgsmål,

00:04:16.160 --> 00:04:20.160
hvor mange molekyler vi skal putte i det kim for at få en mobiltelefon?

00:04:20.160 --> 00:04:22.160
Hvad er det mindste antal vi kan slippe afsted med?

00:04:22.160 --> 00:04:24.160
Nu er dette store spørgsmål indenfor computervidenskaben.

00:04:24.160 --> 00:04:26.160
Dette er alle spørgsmål om kompleksitet,

00:04:26.160 --> 00:04:28.160
og computervidenskaben fortæller os at dette er meget svære spørgsmål.

00:04:28.160 --> 00:04:30.160
Næsten -- mange af dem er umulige.

00:04:30.160 --> 00:04:33.160
Men nogle opgaver kan vi begynde at svare på.

00:04:33.160 --> 00:04:34.160
Jeg vil begynde med at stille de spørgsmål

00:04:34.160 --> 00:04:37.160
for de DNA strukturer som jeg vil tale om nu.

00:04:37.160 --> 00:04:40.160
Dette er normal DNA, det man ser på som normal DNA.

00:04:40.160 --> 00:04:42.160
Det er dobbeltstrenget, det er en dobbeltspiral,

00:04:42.160 --> 00:04:45.160
har A'erne, T'erne, C'erne og G'erne der danner par for at holde strengene sammen.

00:04:45.160 --> 00:04:47.160
Og jeg vil nogle gange tegne det på denne måde,

00:04:47.160 --> 00:04:49.160
bare så jeg ikke forskrækker jer.

00:04:49.160 --> 00:04:52.160
Vi vil se på individuelle strenge og ikke tænke på dobbeltspiralen.

00:04:52.160 --> 00:04:55.160
Når vi syntetiserer det, er det enkeltstrenget,

00:04:55.160 --> 00:04:58.160
så vi kan putte den blå streng i et rør

00:04:58.160 --> 00:05:00.160
og lave en orange streng i det andet rør,

00:05:00.160 --> 00:05:02.160
og de er slaskede når de er enstrengede.

00:05:02.160 --> 00:05:05.160
Man blander dem sammen og de skaber en stiv dobbelstreng.

00:05:05.160 --> 00:05:07.160
Men i løbet af de sidste 25 år,

00:05:07.160 --> 00:05:09.160
har Ned Seeman og en flok af hans efterkommere

00:05:09.160 --> 00:05:12.160
arbejdet meget hårdt og lavet smukke tredimensionelle strukturer

00:05:12.160 --> 00:05:15.160
ved hjælp af denne slags reaktion af DNA strenge der kobles sammen.

00:05:15.160 --> 00:05:18.160
Men mange af deres tilgange, omend elegante, tager lang tid.

00:05:18.160 --> 00:05:21.160
De kan tage et par år, eller det kan være svært at designe.

00:05:21.160 --> 00:05:24.160
Jeg fandt derfor på en ny metode for et par år siden

00:05:24.160 --> 00:05:25.160
som jeg kalder DNA origami

00:05:25.160 --> 00:05:27.160
der er så nem, at man kunne gøre det hjemme i ens køkken

00:05:27.160 --> 00:05:29.160
og designe tingene på ens laptop.

00:05:29.160 --> 00:05:32.160
Men for at gøre det, har man brug for en lang, enkelt DNA streng,

00:05:32.160 --> 00:05:34.160
hvilket teknisk set er meget svært at få fat på.

00:05:34.160 --> 00:05:36.160
Så man kan bruge en naturlig kilde.

00:05:36.160 --> 00:05:38.160
Man kan se på dette computerfabrikerede produkt,

00:05:38.160 --> 00:05:40.160
og han har et dobbeltstrenget genom -- det er ubrugeligt.

00:05:40.160 --> 00:05:43.160
Man kigger i hans tarme. Der er milliarder af bakterier.

00:05:43.160 --> 00:05:45.160
De er også ubrugelige.

00:05:45.160 --> 00:05:47.160
Igen dobbeltstrengede, men inden i dem, er de inficerede med en virus

00:05:47.160 --> 00:05:50.160
der har et fint, langt, enkeltstrenget genom

00:05:50.160 --> 00:05:52.160
som vi kan folde som et stykke papir.

00:05:52.160 --> 00:05:53.160
Og vi gør det på denne måde.

00:05:53.160 --> 00:05:54.160
Dette er en del af det genom.

00:05:54.160 --> 00:05:57.160
Vi tilføjer en stak korte, syntetiske DNA'er som jeg kalder hæfteklammer.

00:05:57.160 --> 00:06:01.160
Hver af dem har en venstre halvdel der binder sig til den lange streng på et sted,

00:06:01.160 --> 00:06:04.160
og en højre halvdel der binder sig fast et andet sted,

00:06:04.160 --> 00:06:06.160
og knytter den lange streng sammen på denne måde.

00:06:07.160 --> 00:06:09.160
Resultatet af mange af disse på den lange streng

00:06:09.160 --> 00:06:11.160
er at folde den om til noget der ligner en rektangel.

00:06:11.160 --> 00:06:13.160
Nu kan vi ikke lave et filmklip af denne process,

00:06:13.160 --> 00:06:15.160
men Shawn Douglas ved Harvard

00:06:15.160 --> 00:06:17.160
har lavet en fin visualisering for os

00:06:17.160 --> 00:06:21.160
der begynder med en lang streng og nogle korte strenge.

00:06:21.160 --> 00:06:25.160
Og det der sker er at vi blander disse strenge sammen.

00:06:25.160 --> 00:06:27.160
Vi opvarmer dem, og vi tilføjer lidt salt,

00:06:27.160 --> 00:06:29.160
vi opvarmer dem til næsten kogepunktet og nedkøler dem,

00:06:29.160 --> 00:06:30.160
og i takt med at vi nedkøler dem,

00:06:30.160 --> 00:06:32.160
binder de korte strenge de lange strenge

00:06:32.160 --> 00:06:34.160
og man begynder at danne en struktur.

00:06:34.160 --> 00:06:37.160
Og man kan se en lille smule dobbeltspiral der.

00:06:38.160 --> 00:06:40.160
Når man ser på DNA origami,

00:06:40.160 --> 00:06:43.160
kan man se at det, det i virkeligheden er,

00:06:43.160 --> 00:06:44.160
selvom man tror det er kompliceret,

00:06:44.160 --> 00:06:47.160
en nogle dobbeltspiraler der er parallelle med hinanden,

00:06:47.160 --> 00:06:49.160
og de holdes sammen

00:06:49.160 --> 00:06:51.160
på steder hvor korte strenge følger en spiral

00:06:51.160 --> 00:06:53.160
og så hopper til en anden.

00:06:53.160 --> 00:06:56.160
Der er en streng der snor sig på denne måde, følger spiralen og binder --

00:06:56.160 --> 00:06:58.160
den hopper til den anden spiral og kommer tilbage.

00:06:58.160 --> 00:07:00.160
Det holder den lange streng på denne måde.

00:07:00.160 --> 00:07:03.160
For at vise at vi kunne lave en hvilken som helst form eller mønster

00:07:03.160 --> 00:07:05.160
som vi ville, prøvede jeg at lave denne form.

00:07:06.160 --> 00:07:08.160
Jeg ville folde DNA til noget der går op over øjet,

00:07:08.160 --> 00:07:11.160
ned over næsen, op ad næsen, rundt om panden,

00:07:11.160 --> 00:07:14.160
ned igen og ender i en lille sløjfe på denne måde.

00:07:14.160 --> 00:07:17.160
Så, jeg tænkte, at hvis dette kunne fungere, kunne hvad som helst fungere.

00:07:17.160 --> 00:07:20.160
Jeg fik computerprogrammet til at designe de korte hæfteklammer til at gøre dette.

00:07:20.160 --> 00:07:22.160
Jeg bestilte dem og de kom med FedEx.

00:07:22.160 --> 00:07:24.160
Jeg blandede dem, opvarmede dem, nedkølede dem,

00:07:24.160 --> 00:07:28.160
og jeg fik 50 milliarder små smiley ansigter

00:07:28.160 --> 00:07:30.160
der flød rundt i en enkelt dråbe vand.

00:07:30.160 --> 00:07:32.160
Og hver af dem er kun

00:07:32.160 --> 00:07:36.160
så bredt som en tusindedel af et menneske hår, ok?

00:07:36.160 --> 00:07:39.160
De flyder alle rundt i denne opløsning, og for at se dem,

00:07:39.160 --> 00:07:41.160
skal man putte dem på en overflade hvor de kan klæbe.

00:07:41.160 --> 00:07:43.160
Man hælder dem ud over en overflade

00:07:43.160 --> 00:07:45.160
og de begynder at klæbe til den overflade,

00:07:45.160 --> 00:07:47.160
og vi kan tage et billede ved hjælp af et atomic-force mikroskop.

00:07:47.160 --> 00:07:49.160
Den har en nål, som nålen på en pladespiller,

00:07:49.160 --> 00:07:51.160
der går frem og tilbage over overfladen,

00:07:51.160 --> 00:07:54.160
bumper op og ned, og føler højden på overfladen.

00:07:54.160 --> 00:07:56.160
Den føler DNA origamien.

00:07:56.160 --> 00:07:58.160
Der er atomic-force mikroskopet i aktion

00:07:59.160 --> 00:08:00.160
og man kan se at landingen er lidt hård.

00:08:00.160 --> 00:08:02.160
Når man zoomer ind, har de, I ved,

00:08:02.160 --> 00:08:03.160
svage kæber der slår op over deres hoveder

00:08:03.160 --> 00:08:06.160
og nogle af deres næser bliver slået ud, men det er ret godt.

00:08:06.160 --> 00:08:08.160
Man kan zoome ind og endda se den ekstra lille sløjfe,

00:08:08.160 --> 00:08:10.160
dette lille nano-gedeskæg.

00:08:10.160 --> 00:08:13.160
Det der er fedt ved dette er at alle kan gøre det.

00:08:13.160 --> 00:08:17.160
Så jeg fik denne uopfordrede mail omkring et år efter jeg gjorde dette.

00:08:17.160 --> 00:08:20.160
Nogen der ved hvad dette er? Hvad er det?

00:08:20.160 --> 00:08:22.160
Det er Kina, ikke?

00:08:22.160 --> 00:08:24.160
Det der skette er, at en kandidatstuderende i Kina,

00:08:24.160 --> 00:08:26.160
Lulu Qian, gjorde et fint stykke arbejde.

00:08:26.160 --> 00:08:28.160
Hun skrev al sin egen software

00:08:28.160 --> 00:08:30.160
til at designe og bygge dette DNA origami,

00:08:30.160 --> 00:08:33.160
en smuk gengivelse af Kina, hvor Taiwan endda er med,

00:08:33.160 --> 00:08:36.160
og man ser at Taiwan på en måde er i verdens korteste snor, ikke?

00:08:36.160 --> 00:08:38.160
(Latter)

00:08:39.160 --> 00:08:40.160
Så dette fungerer virkelig godt

00:08:41.160 --> 00:08:43.160
og man kan lave mønstre lige så vel som former, okay?

00:08:44.160 --> 00:08:47.160
Og man kan lave et kort over Nord-, Syd- og Centralamerika og stave DNA med DNA.

00:08:47.160 --> 00:08:50.160
Og det der er virkelig fedt ved dette --

00:08:50.160 --> 00:08:52.160
jamen, faktisk, ser dette alt sammen ud som nanokunst,

00:08:52.160 --> 00:08:53.160
men det viser sig at nanokunst

00:08:53.160 --> 00:08:55.160
er lige det man har brug for for at lave nanokredsløb.

00:08:55.160 --> 00:08:57.160
Man kan sætte kredsløbskomponenter på hæfteklammerne,

00:08:57.160 --> 00:08:59.160
ligesom en pære og en lyskontakt.

00:08:59.160 --> 00:09:02.160
Lad tingen samle sig, og man får en eller form for kredsløb.

00:09:02.160 --> 00:09:05.160
Og så kan man måske vaske DNA'et væk og have det resterende kredsløb.

00:09:05.160 --> 00:09:07.160
Dette er hvad nogle af mine kolleger ved Caltech gjorde.

00:09:07.160 --> 00:09:10.160
De tog en DNA origami, organiserede nogle kulstof nanorør,

00:09:10.160 --> 00:09:12.160
lavede en lille kontakt, det kan I se her, tilsluttede den,

00:09:12.160 --> 00:09:15.160
testede den og viste at det rigtignok er en kontakt.

00:09:15.160 --> 00:09:17.160
Dette er bare en enkelt kontakt

00:09:17.160 --> 00:09:21.160
og man har brug for en halv milliard til en computer, så vi har lang vej igen.

00:09:21.160 --> 00:09:23.160
Men det er meget lovende

00:09:23.160 --> 00:09:28.160
fordi origamien kan organisere dele der er bare en tiendedel i størrelse

00:09:28.160 --> 00:09:29.160
af dem der er i en normal computer.

00:09:29.160 --> 00:09:32.160
Det er meget lovende for at lave små computere.

00:09:32.160 --> 00:09:35.160
Jeg vil tilbage til den kompilator.

00:09:35.160 --> 00:09:38.160
DNA origami er bevis på at den kompiler faktisk fungerer.

00:09:39.160 --> 00:09:41.160
Man begynder med noget i computeren.

00:09:41.160 --> 00:09:44.160
Man får en højniveaubeskrivelse af computerprogrammet,

00:09:44.160 --> 00:09:46.160
en højniveaubeskrivelse af origamien.

00:09:46.160 --> 00:09:49.160
Man kan kompilere det til molekyler, sende det til en syntesiser,

00:09:49.160 --> 00:09:50.160
og det fungerer faktisk.

00:09:50.160 --> 00:09:54.160
Og det viser sig at et firma har lavet et fint program

00:09:54.160 --> 00:09:56.160
der er meget bedre end min kode, som var temmelig grim,

00:09:56.160 --> 00:09:57.160
og vil tillade os at gøre dette på en fin,

00:09:57.160 --> 00:09:59.160
visuel, computer-assisteret design måde.

00:10:00.160 --> 00:10:01.160
Nu kan man sige, okay,

00:10:01.160 --> 00:10:03.160
hvorfor er DNA origamien ikke slutningen på historien?

00:10:03.160 --> 00:10:05.160
Man har en molekylær kompiler, man kan gøre hvad man vil.

00:10:05.160 --> 00:10:08.160
Faktummet er at det ikke er skalerbart.

00:10:08.160 --> 00:10:11.160
Så hvis man vil bygge et menneske fra DNA origami,

00:10:11.160 --> 00:10:13.160
er problemet, at man har brug for en lang streng

00:10:13.160 --> 00:10:16.160
der er 10 billioner billioner baser langt.

00:10:16.160 --> 00:10:18.160
Det er tre lysårs DNA,

00:10:18.160 --> 00:10:20.160
så det vil vi ikke gøre.

00:10:20.160 --> 00:10:22.160
Vi vil vende os mod en anden teknologi,

00:10:22.160 --> 00:10:24.160
der hedder algoritmisk selvsamling af fliser.

00:10:24.160 --> 00:10:26.160
Det blev startet af Erik Winfree,

00:10:26.160 --> 00:10:27.160
og det virker ved at,

00:10:27.160 --> 00:10:31.160
det har fliser der er en hundrededel størrelse af DNA origami.

00:10:31.160 --> 00:10:33.160
Man zoomer ind, der er bare fire DNA strenge

00:10:34.160 --> 00:10:36.160
og de har små enkeltstrengede dele på sig

00:10:36.160 --> 00:10:38.160
der kan binde sig til andre fliser, hvis de matcher.

00:10:38.160 --> 00:10:41.160
Og vi tegner gerne disse fliser som små kvadrater.

00:10:42.160 --> 00:10:44.160
Og hvis man ser på deres klæbende ender, disse små DNA stumper,

00:10:44.160 --> 00:10:47.160
kan man se at de faktisk former et skakbrætmønster.

00:10:47.160 --> 00:10:50.160
Disse fliser ville skabe et kompliceret, selvsamlende skakbræt.

00:10:50.160 --> 00:10:52.160
Og pointen med dette er, hvis I ikke fangede den,

00:10:52.160 --> 00:10:55.160
er at fliserne på en måde er et molekylært program

00:10:55.160 --> 00:10:58.160
og de kan lave mønstre.

00:10:58.160 --> 00:11:00.160
Og en virkelig fantastisk del af dette er

00:11:00.160 --> 00:11:02.160
at ethvert computerprogram kan oversættes

00:11:02.160 --> 00:11:05.160
til et af disse fliseprogrammer -- for eksempel et der tæller.

00:11:05.160 --> 00:11:08.160
Man kan finde på et sæt fliser

00:11:08.160 --> 00:11:11.160
der, når de samler sig, skaber en lille binær tæller

00:11:11.160 --> 00:11:13.160
i stedet for et skakbræt.

00:11:13.160 --> 00:11:16.160
Man kan læse de binære numre fem, seks og syv.

00:11:16.160 --> 00:11:19.160
Og for at starte denne slags beregninger rigtigt op,

00:11:19.160 --> 00:11:21.160
har man brug for en eller anden form for input, et slags kim.

00:11:21.160 --> 00:11:23.160
Man kan bruge DNA origami til det.

00:11:23.160 --> 00:11:25.160
Man kan kode tallet 32

00:11:25.160 --> 00:11:27.160
i den højre side af DNA origami,

00:11:27.160 --> 00:11:29.160
og når man tilføjer de fliser der tæller,

00:11:29.160 --> 00:11:32.160
begynder de at tælle -- de vil læse det 32

00:11:32.160 --> 00:11:34.160
og de stopper ved 32.

00:11:34.160 --> 00:11:37.160
Det vi har gjort er at vi har fundet på en måde

00:11:37.160 --> 00:11:40.160
til at have et molekylært program der ved hvornår det skal stoppe med at vokse.

00:11:40.160 --> 00:11:42.160
Det ved hvornår det skal stoppe med at vokse fordi det kan tælle.

00:11:42.160 --> 00:11:44.160
Det ved hvor stort det er.

00:11:44.160 --> 00:11:47.160
Det svarer på den slags første spørgsmål som jeg talte om.

00:11:47.160 --> 00:11:50.160
Det fortæller os, dog, ikke hvordan babyer gør det.

00:11:50.160 --> 00:11:54.160
Nu kan vi bruge denne tælling til at prøve at få gang i meget større ting

00:11:54.160 --> 00:11:55.160
end DNA origami ellers kunne.

00:11:55.160 --> 00:11:58.160
Her er DNA origamien, og det vi kan gøre

00:11:58.160 --> 00:12:01.160
er at vi kan skrive 32 på begge kanter af DNA origamien,

00:12:01.160 --> 00:12:03.160
og vi kan nu bruge vores vandkande

00:12:03.160 --> 00:12:07.160
og vande med fliser, og vi kan begynde at dyrke fliser ud fra det

00:12:07.160 --> 00:12:09.160
og skabe et kvadrat.

00:12:09.160 --> 00:12:12.160
Tælleren virker som en skabelon

00:12:12.160 --> 00:12:14.160
til at udfylde en kvadrat i midten af denne ting.

00:12:14.160 --> 00:12:15.160
Det vi har gjort er at vi har haft succes med

00:12:15.160 --> 00:12:18.160
at lave noget der er meget større end en DNA origami

00:12:18.160 --> 00:12:21.160
ved at kombinere DNA origami med fliser.

00:12:21.160 --> 00:12:24.160
Og den fede ting ved dette er, at det også er reprogrammerbart.

00:12:24.160 --> 00:12:28.160
Man kan bare ændre et par af DNA strengene i denne binære repræsentation

00:12:28.160 --> 00:12:31.160
og man får 96 i stedet for 32.

00:12:31.160 --> 00:12:34.160
Og hvis man gør det, er origamien den samme størrelse,

00:12:34.160 --> 00:12:38.160
men det resulterende kvadrat man får er tre gange større.

00:12:39.160 --> 00:12:40.160
Dette opsummerer på en måde

00:12:40.160 --> 00:12:42.160
det jeg fortalte jer om biologisk udvikling.

00:12:42.160 --> 00:12:45.160
Man har et meget følsomt computerprogram

00:12:45.160 --> 00:12:48.160
hvor små ændringer -- enkelte, små, bittesmå mutationer --

00:12:48.160 --> 00:12:50.160
kan tage noget der lavede kvadrater i en størrelse

00:12:50.160 --> 00:12:53.160
og lave noget der er meget større.

00:12:54.160 --> 00:12:57.160
Dette at bruge tælling til at beregne

00:12:57.160 --> 00:12:59.160
og bygge denne slags ting

00:12:59.160 --> 00:13:01.160
ved hjælp af denne slags udviklingsmæssige process

00:13:01.160 --> 00:13:05.160
er noget der også har betydning for Craig Venters spørgsmål.

00:13:05.160 --> 00:13:07.160
Man kan spørge, hvor mange DNA strenge er der brug for

00:13:07.160 --> 00:13:09.160
for at bygge en firkant af en given størrelse?

00:13:09.160 --> 00:13:14.160
Hvis vi ville lave en firkant i størrelsen 10, 100 eller 1.000,

00:13:14.160 --> 00:13:16.160
hvis vi udelukkende brugte DNA origami,

00:13:16.160 --> 00:13:19.160
skulle vi bruge et antal DNA strenge der er kvadratet

00:13:19.160 --> 00:13:21.160
af størrelsen af den firkant;

00:13:21.160 --> 00:13:23.160
så vi skulle bruge 100, 10.000 eller en million DNA strenge.

00:13:23.160 --> 00:13:25.160
Det har vi ikke råd til.

00:13:25.160 --> 00:13:27.160
Men hvis vi bruger en lille smule beregning --

00:13:27.160 --> 00:13:31.160
vi bruger origami, plus nogle fliser der tæller --

00:13:31.160 --> 00:13:34.160
så kan vi komme afsted med at bruge 100, 200 eller 300 DNA strenge.

00:13:34.160 --> 00:13:39.160
Så vi kan reducere antallet af DNA strenge vi bruger eksponentielt,

00:13:39.160 --> 00:13:42.160
hvis vi bruger tælling, hvis vi bruger en lille smule beregning.

00:13:42.160 --> 00:13:45.160
Så beregning er en meget kraftfuld måde

00:13:45.160 --> 00:13:48.160
at reducere antallet af molekyler man har brug for at bygge noget på,

00:13:48.160 --> 00:13:51.160
til at reducere størrelsen på det genom som man bygger.

00:13:51.160 --> 00:13:54.160
Og til slut, går jeg tilbage til den på en eller anden måde skøre ide,

00:13:54.160 --> 00:13:56.160
om computere der bygger computere.

00:13:56.160 --> 00:13:59.160
Hvis man ser på firkanten man bygger med origami

00:13:59.160 --> 00:14:01.160
og nogle tællere der vokser ud af den,

00:14:01.160 --> 00:14:04.160
er mønsteret den har præcis det mønster man har brug for

00:14:04.160 --> 00:14:05.160
til at lave hukommelse.

00:14:05.160 --> 00:14:08.160
Hvis man fæster nogle ledninger og kontakter til de fliser --

00:14:08.160 --> 00:14:11.160
i stedet for til de simple strenge, fæster man dem til fliserne --

00:14:11.160 --> 00:14:14.160
så vil de selv-samle de delvist komplicerede kredsløb,

00:14:14.160 --> 00:14:17.160
de multiplekser kredsløb, som man har brug for til at adressere hukommelsen.

00:14:17.160 --> 00:14:19.160
Man kan faktisk lave et kompliceret kredsløb

00:14:19.160 --> 00:14:21.160
ved hjælp af en lille smule beregning.

00:14:21.160 --> 00:14:24.160
Det er en molekylær computer der bygger en elektronisk computer.

00:14:24.160 --> 00:14:27.160
Hvis man spørger mig, hvor langt vi er kommet på denne vej?

00:14:27.160 --> 00:14:30.160
Eksperimentelt er dette hvad vi har gjort det sidste år.

00:14:30.160 --> 00:14:32.160
Her er DNA origami rektanglet,

00:14:33.160 --> 00:14:35.160
og her er nogle fliser der vokser ud fra den.

00:14:35.160 --> 00:14:37.160
Og man kan se hvordan de tæller.

00:14:37.160 --> 00:14:49.160
En, to, tre, fire, fem, seks, ni, 10, 11, 12, 17.

00:14:49.160 --> 00:14:53.160
Den har altså nogle fejl, men den tæller i det mindste opad.

00:14:53.160 --> 00:14:54.160
(Latter)

00:14:54.160 --> 00:14:57.160
Det viser sig, at vi faktisk fik denne ide for ni år siden,

00:14:57.160 --> 00:15:00.160
og det er omkring tidskonstanten det tager

00:15:00.160 --> 00:15:02.160
at gøre denne slags ting, så jeg tror vi gjorde store fremskridt.

00:15:02.160 --> 00:15:04.160
Vi har ideer om hvordan man ordner disse fejl.

00:15:04.160 --> 00:15:06.160
Og jeg tror at i løbet af de næste fem eller 10 år,

00:15:06.160 --> 00:15:08.160
laver vi den slags firkanter som jeg beskrev

00:15:08.160 --> 00:15:11.160
og måske endda nogle af de selv-samlende kredsløb.

00:15:11.160 --> 00:15:15.160
Hvad vil jeg gerne have at I tager med jer fra dette foredrag?

00:15:15.160 --> 00:15:17.160
Jeg vil gerne have, at I husker at

00:15:17.160 --> 00:15:21.160
for at skabe livets meget mangfoldige og komplekse former,

00:15:21.160 --> 00:15:23.160
bruger livet beregning for at gøre det.

00:15:23.160 --> 00:15:27.160
Og beregningerne som det bruger, det er molekylære beregninger,

00:15:27.160 --> 00:15:29.160
og for at forstå dette og håndtere det bedre,

00:15:29.160 --> 00:15:31.160
som Feynman sagde, I ved,

00:15:31.160 --> 00:15:33.160
må vi bygge noget for at kunne forstå det.

00:15:33.160 --> 00:15:37.160
Så vi kommer til at bruge molekyler og omforme dette,

00:15:37.160 --> 00:15:39.160
genopbygge alt fra bunden,

00:15:39.160 --> 00:15:42.160
ved hjælp af DNA på måder som naturen aldrig havde tiltænkt,

00:15:42.160 --> 00:15:44.160
ved hjælp af DNA origami,

00:15:44.160 --> 00:15:47.160
og DNA origami til at lægge kimet til denne algoritmiske selv-samling.

00:15:47.160 --> 00:15:49.160
I ved, dette er alt sammen rigtig fedt,

00:15:50.160 --> 00:15:51.160
men det jeg gerne vil have I tager med jer fra dette foredrag,

00:15:51.160 --> 00:15:53.160
forhåbentlig fra nogle af disse store spørgsmål,

00:15:53.160 --> 00:15:56.160
er at denne molekylære programmering ikke kun handler om at skabe gadgets.

00:15:56.160 --> 00:15:58.160
Det handler ikke kun om at lave

00:15:58.160 --> 00:16:00.160
selv-samlende mobiltelefoner og kredsløb.

00:16:00.160 --> 00:16:02.160
Det det i virkeligheden handler om, er at tage computervidenskab

00:16:02.160 --> 00:16:05.160
og se på de store spørgsmål i et nyt lys,

00:16:05.160 --> 00:16:07.160
stille nye versioner af de store spørgsmål

00:16:07.160 --> 00:16:09.160
og prøve at forstå hvordan biologi

00:16:09.160 --> 00:16:11.160
kan lave sådanne utrolige ting. Tak.

00:16:12.160 --> 00:16:19.160
(Bifald)

