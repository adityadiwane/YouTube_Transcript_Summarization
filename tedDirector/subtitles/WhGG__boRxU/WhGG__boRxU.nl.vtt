WEBVTT
Kind: captions
Language: nl

00:00:00.000 --> 00:00:07.000
Vertaald door: Rik Delaet
Nagekeken door: Christel Foncke

00:00:12.160 --> 00:00:15.160
Mensen discussiëren heftig over de definitie van het leven.

00:00:15.160 --> 00:00:20.160
Ze vragen zich af of het gaat om reproductie, stofwisseling of evolutie.

00:00:20.160 --> 00:00:22.160
Ik ken het antwoord niet, dus ga ik het jullie ook niet vertellen.

00:00:22.160 --> 00:00:25.160
Ik ga zeggen dat het bij het leven om rekenen gaat.

00:00:25.160 --> 00:00:27.160
Dit is een computerprogramma.

00:00:27.160 --> 00:00:30.160
Als het opstart in een cel en wordt uitgevoerd,

00:00:30.160 --> 00:00:33.160
zou deze persoon daar het resultaat van kunnen zijn

00:00:33.160 --> 00:00:36.160
of met een kleine aanpassing deze persoon,

00:00:36.160 --> 00:00:38.160
of met nog een kleine aanpassing deze persoon,

00:00:38.160 --> 00:00:41.160
of met een grotere aanpassing een hond,

00:00:41.160 --> 00:00:43.160
een boom of een walvis.

00:00:43.160 --> 00:00:45.160
Als je deze metafoor

00:00:45.160 --> 00:00:47.160
van het genoom als programma serieus neemt,

00:00:47.160 --> 00:00:49.160
dan moet je bedenken dat Chris Anderson

00:00:49.160 --> 00:00:52.160
een computergefabriceerd ding is, net als Jim Watson

00:00:52.160 --> 00:00:55.160
of Craig Venter, net als iedereen van ons.

00:00:55.160 --> 00:00:57.160
Om jezelf ervan te overtuigen dat deze metafoor klopt,

00:00:57.160 --> 00:00:59.160
zijn er heel veel overeenkomsten tussen genetische programma's

00:00:59.160 --> 00:01:02.160
en computerprogramma's die daarbij kunnen helpen.

00:01:02.160 --> 00:01:04.160
Maar wat ik het meest interessant vind,

00:01:04.160 --> 00:01:07.160
is de opvallende gevoeligheid voor kleine veranderingen

00:01:07.160 --> 00:01:10.160
die grote veranderingen kunnen teweegbrengen in de biologische ontwikkeling - de output zeg maar.

00:01:10.160 --> 00:01:12.160
Een kleine mutatie kan van een tweevleugelige vlieg

00:01:12.160 --> 00:01:13.160
een viervleugelige vlieg maken.

00:01:13.160 --> 00:01:17.160
Of een vlieg poten geven waar antennes zouden moeten zitten.

00:01:17.160 --> 00:01:19.160
Of als je bekend bent met "The Princess Bride"

00:01:19.160 --> 00:01:21.160
dan kan het een zesvingerige man maken.

00:01:21.160 --> 00:01:23.160
Nu is een kenmerk van een computerprogramma

00:01:23.160 --> 00:01:26.160
juist deze gevoeligheid voor kleine veranderingen.

00:01:26.160 --> 00:01:28.160
Als je bankrekening één dollar bedraagt en je verplaatst een cijfertje,

00:01:28.160 --> 00:01:30.160
dan kan dat resulteren in duizend dollar.

00:01:30.160 --> 00:01:33.160
Deze kleine wijzigingen wijzen

00:01:33.160 --> 00:01:35.160
ons erop dat een gecompliceerde berekening in de ontwikkeling

00:01:35.160 --> 00:01:39.160
aan de basis ligt van deze versterkte, grote wijzigingen.

00:01:39.160 --> 00:01:45.160
Alles wijst erop dat moleculaire programma’s de biologie sturen

00:01:45.160 --> 00:01:49.160
en het toont ons de kracht van deze moleculaire programma's. Dat is wat biologie doet.

00:01:49.160 --> 00:01:51.160
Ik wil moleculaire programma's schrijven

00:01:51.160 --> 00:01:53.160
om er een technologie op te bouwen.

00:01:53.160 --> 00:01:54.160
Veel mensen zijn daarmee bezig,

00:01:54.160 --> 00:01:57.160
veel synthetische biologen zoals Craig Venter.

00:01:57.160 --> 00:01:59.160
Zij concentreren zich op het gebruik van cellen.

00:01:59.160 --> 00:02:01.160
Ze zijn ‘celgeoriënteerd’.

00:02:01.160 --> 00:02:03.160
Mijn vrienden de moleculaire programmeurs en ik,

00:02:03.160 --> 00:02:05.160
leggen ons meer toe op biomoleculen.

00:02:05.160 --> 00:02:08.160
Wij zijn geïnteresseerd in het gebruik van DNA, RNA en eiwitten.

00:02:08.160 --> 00:02:11.160
We schrijven nieuwe talen om deze dingen vanaf de grond op te bouwen

00:02:11.160 --> 00:02:12.160
door het gebruik van biomoleculen,

00:02:12.160 --> 00:02:15.160
die mogelijkerwijs niets met biologie te maken hebben.

00:02:15.160 --> 00:02:19.160
Dit is de hele machinerie van een cel.

00:02:19.160 --> 00:02:21.160
Daar een camera.

00:02:21.160 --> 00:02:22.160
Daar zijn de zonnepanelen van de cel,

00:02:22.160 --> 00:02:24.160
een paar schakelaars om genen aan en uit zetten,

00:02:24.160 --> 00:02:27.160
de steunbalken van de cel, motoren die je spieren bewegen.

00:02:27.160 --> 00:02:29.160
Mijn kleine groep van moleculaire programmeurs

00:02:29.160 --> 00:02:33.160
probeert al deze onderdelen aan te passen via DNA.

00:02:33.160 --> 00:02:35.160
Niet dat we DNA-zeloten zijn, maar DNA is het goedkoopst,

00:02:35.160 --> 00:02:38.160
makkelijkst te begrijpen en te programmeren materiaal om dit te doen.

00:02:38.160 --> 00:02:40.160
Als andere dingen gemakkelijker te gebruiken worden -

00:02:40.160 --> 00:02:43.160
misschien wel eiwitten - gaan we daar ook mee werken.

00:02:43.160 --> 00:02:45.160
Als we slagen, hoe zal dan moleculair programmeren eruit zien?

00:02:45.160 --> 00:02:47.160
Je gaat achter je computer zitten.

00:02:47.160 --> 00:02:49.160
Je gaat iets ontwerpen zoals een mobiele telefoon.

00:02:49.160 --> 00:02:51.160
Die ga je beschrijven middels een taal van een hoger niveau.

00:02:51.160 --> 00:02:53.160
Dan neem je een compiler

00:02:53.160 --> 00:02:54.160
die deze beschrijving in

00:02:54.160 --> 00:02:56.160
echte moleculen omzet.

00:02:56.160 --> 00:02:58.160
Dat kan dan naar een synthesizer gestuurd worden

00:02:58.160 --> 00:03:01.160
en deze synthesizer stopt deze moleculen in een zaadje.

00:03:01.160 --> 00:03:04.160
Als je het zaadje genoeg water en eten geeft,

00:03:04.160 --> 00:03:06.160
dan gaat het de ontwikkelingsberekening uitvoeren,

00:03:06.160 --> 00:03:09.160
een moleculaire berekening en bouwt zo een elektronische computer.

00:03:09.160 --> 00:03:11.160
Als je begrijpt waar ik naartoe wil:

00:03:12.160 --> 00:03:14.160
ik denk dat leven gaat over moleculaire computers

00:03:14.160 --> 00:03:16.160
die elektrochemische computers bouwen

00:03:16.160 --> 00:03:18.160
die weer elektronische computers bouwen

00:03:18.160 --> 00:03:20.160
die samen met elektrochemische computers

00:03:20.160 --> 00:03:22.160
weer nieuwe moleculaire computers bouwen

00:03:22.160 --> 00:03:25.160
die ook weer nieuwe elektronische computers bouwen, enzovoorts.

00:03:25.160 --> 00:03:26.160
Als je dit allemaal gelooft

00:03:26.160 --> 00:03:28.160
en je gelooft, net als ik, dat leven over berekeningen gaat,

00:03:28.160 --> 00:03:31.160
dan kijk je naar de grote vragen door de ogen van een computerwetenschapper.

00:03:31.160 --> 00:03:35.160
Dan is een hamvraag: hoe weet een baby wanneer hij moet stoppen met groeien?

00:03:35.160 --> 00:03:37.160
Voor een moleculair programmeur wordt dat dan de vraag

00:03:37.160 --> 00:03:39.160
hoe je mobiele telefoon weet wanneer te stoppen met groeien.

00:03:39.160 --> 00:03:40.160
(Gelach)

00:03:40.160 --> 00:03:43.160
Of hoe weet een computerprogramma wanneer het moeten stoppen met draaien?

00:03:43.160 --> 00:03:46.160
Of meer direct, hoe weet je of je computerprogramma ooit stopt?

00:03:46.160 --> 00:03:48.160
Er zijn nog meer van dit soort vragen.

00:03:48.160 --> 00:03:50.160
Een ervan is de vraag van Craig Venter.

00:03:50.160 --> 00:03:52.160
Ik denk dat hij eigenlijk een computerwetenschapper is.

00:03:52.160 --> 00:03:55.160
Hij vraagt hoe groot een genoom minimaal moet zijn

00:03:55.160 --> 00:03:57.160
om een functionerend micro-organisme op te leveren?

00:03:57.160 --> 00:03:59.160
Met hoe weinig genen kom ik toe?

00:03:59.160 --> 00:04:01.160
Dit is exact analoog aan de vraag wat het

00:04:01.160 --> 00:04:02.160
kleinste programma is dat ik

00:04:02.160 --> 00:04:04.160
kan schrijven dat hetzelfde doet als MS Word.

00:04:04.160 --> 00:04:05.160
(Gelach)

00:04:05.160 --> 00:04:09.160
Terwijl hij werkende genomen schrijft

00:04:09.160 --> 00:04:10.160
voor bacteriën,

00:04:10.160 --> 00:04:12.160
zouden wij kleinere programma’s kunnen schrijven

00:04:12.160 --> 00:04:14.160
die hetzelfde doen als wat MS Word doet.

00:04:14.160 --> 00:04:16.160
Maar bij moleculair programmeren is onze vraag:

00:04:16.160 --> 00:04:20.160
hoeveel moleculen moeten we in dat zaadje stoppen om een mobiele telefoon te krijgen?

00:04:20.160 --> 00:04:22.160
Wat is het kleinste aantal waar we mee weg kunnen komen?

00:04:22.160 --> 00:04:24.160
Dat zijn nou grote vragen in de computerwetenschappen.

00:04:24.160 --> 00:04:26.160
Allemaal complexiteitsvraagstukken

00:04:26.160 --> 00:04:28.160
en de computerwetenschap vertelt ons dat dit hele moeilijke vragen zijn.

00:04:28.160 --> 00:04:30.160
Bijna - veel ervan zijn onmogelijk.

00:04:30.160 --> 00:04:33.160
Maar voor sommige taken kunnen we ze beginnen te beantwoorden.

00:04:33.160 --> 00:04:34.160
Dus ga ik beginnen die vragen te stellen

00:04:34.160 --> 00:04:37.160
voor de DNA-structuren waarover ik hierna ga praten.

00:04:37.160 --> 00:04:40.160
Dit is normaal DNA, wat jullie zien als normaal DNA.

00:04:40.160 --> 00:04:42.160
Het is dubbelstrengig, het is een dubbele helix.

00:04:42.160 --> 00:04:45.160
De A's en de T's, de C's en de G's koppelen om de strengen bij elkaar te houden.

00:04:45.160 --> 00:04:47.160
Ik zal het als volgt tekenen

00:04:47.160 --> 00:04:49.160
om jullie niet bang te maken.

00:04:49.160 --> 00:04:52.160
Het gaat over de enkele strengen en niet over de dubbele helix.

00:04:52.160 --> 00:04:55.160
Wanneer we het DNA synthetiseren gaan we uit van enkele strengen.

00:04:55.160 --> 00:04:58.160
We doen de blauwe streng in de ene buis

00:04:58.160 --> 00:05:00.160
en de oranje streng in de andere buis.

00:05:00.160 --> 00:05:02.160
Ze kronkelen wanneer ze enkelstrengig zijn.

00:05:02.160 --> 00:05:05.160
Voeg ze samen en ze vormen een rigide dubbele helix.

00:05:05.160 --> 00:05:07.160
De afgelopen 25 jaar

00:05:07.160 --> 00:05:09.160
hebben Ned Seeman en een aantal van zijn medewerkers

00:05:09.160 --> 00:05:12.160
heel hard gewerkt en deze prachtige driedimensionale structuren gemaakt

00:05:12.160 --> 00:05:15.160
middels de reactie van DNA-strengen om samen te komen.

00:05:15.160 --> 00:05:18.160
Maar hun methode, hoe elegant ook, heeft veel tijd nodig.

00:05:18.160 --> 00:05:21.160
Het kan een paar jaar duren of ze zijn moeilijk te ontwerpen.

00:05:21.160 --> 00:05:24.160
Ik kwam een paar jaar geleden met een nieuwe methode.

00:05:24.160 --> 00:05:25.160
Ik noem het DNA-origami.

00:05:25.160 --> 00:05:27.160
Zo makkelijk dat je het thuis in je eigen keuken kunt doen

00:05:27.160 --> 00:05:29.160
en het spul ontwerpen op een laptop

00:05:29.160 --> 00:05:32.160
Maar om het uit te voeren heb je een lange, enkele streng DNA nodig

00:05:32.160 --> 00:05:34.160
wat technisch heel moeilijk voor elkaar te krijgen is.

00:05:34.160 --> 00:05:36.160
Je kan echter uitgaan van een natuurlijke bron.

00:05:36.160 --> 00:05:38.160
Bijvoorbeeld van dit computergefabriceerde artefact.

00:05:38.160 --> 00:05:40.160
Hij heeft een dubbelstrengig genoom, daar hebben we niks aan.

00:05:40.160 --> 00:05:43.160
Of in zijn darmen. Daar zitten miljoenen bacteriën.

00:05:43.160 --> 00:05:45.160
Ook niet goed.

00:05:45.160 --> 00:05:47.160
Dubbelstrengig alweer, maar daarbinnen zijn ze geïnfecteerd met een virus

00:05:47.160 --> 00:05:50.160
met een fijn, lang, enkelstrengig genoom

00:05:50.160 --> 00:05:52.160
dat we kunnen vouwen als een vel papier.

00:05:52.160 --> 00:05:53.160
Zo doen we dat.

00:05:53.160 --> 00:05:54.160
Dit is een deel van het genoom.

00:05:54.160 --> 00:05:57.160
We voegen een paar korte stukken synthetisch DNA toe - ik noem ze nietjes.

00:05:57.160 --> 00:06:01.160
Allemaal hebben ze een linkerhelft die op één plaats aan de lange streng bindt

00:06:01.160 --> 00:06:04.160
en een rechterhelft die op een andere plaats bindt.

00:06:04.160 --> 00:06:06.160
Dat brengt de lange streng als volgt samen.

00:06:07.160 --> 00:06:09.160
Het resultaat hiervan is dat de lange streng

00:06:09.160 --> 00:06:11.160
tot iets als een rechthoek wordt gevouwen.

00:06:11.160 --> 00:06:13.160
We kunnen daar geen filmpje van maken

00:06:13.160 --> 00:06:15.160
maar Shawn Douglas van Harvard

00:06:15.160 --> 00:06:17.160
heeft voor ons een mooie visualisatie gemaakt.

00:06:17.160 --> 00:06:21.160
Het begint met een lange streng en wat korte strengen erbij.

00:06:21.160 --> 00:06:25.160
We voegen deze strengen samen,

00:06:25.160 --> 00:06:27.160
verwarmen ze, voegen een beetje zout toe.

00:06:27.160 --> 00:06:29.160
Dan verhitten we tot bijna koken en koelen dan af.

00:06:29.160 --> 00:06:30.160
Tijdens het afkoelen,

00:06:30.160 --> 00:06:32.160
binden de korte strengen aan de lange strengen

00:06:32.160 --> 00:06:34.160
en begint er zich een structuur te vormen.

00:06:34.160 --> 00:06:37.160
Je kan daar een beetje dubbele helix zien ontstaan.

00:06:38.160 --> 00:06:40.160
Als je naar DNA-origami kijkt,

00:06:40.160 --> 00:06:43.160
dan kun je zien wat het echt is.

00:06:43.160 --> 00:06:44.160
Ook al denk je dat het heel complex is,

00:06:44.160 --> 00:06:47.160
is het een hoop parallelle, dubbele helixen

00:06:47.160 --> 00:06:49.160
bijeengehouden op plaatsen

00:06:49.160 --> 00:06:51.160
waar korte strengen zich aan een helix hechten

00:06:51.160 --> 00:06:53.160
en dan naar een andere overspringen.

00:06:53.160 --> 00:06:56.160
Er is dus een streng die zo gaat, langs een streng gaat en bindt -

00:06:56.160 --> 00:06:58.160
hij springt naar een andere helix en komt terug.

00:06:58.160 --> 00:07:00.160
Dat houdt de lange streng als volgt vast.

00:07:00.160 --> 00:07:03.160
Om aan te tonen dat we iedere gewenste vorm of patroon kunnen maken,

00:07:03.160 --> 00:07:05.160
heb ik geprobeerd deze vorm te maken.

00:07:06.160 --> 00:07:08.160
Ik wilde DNA vouwen in iets dat over het oog heen gaat,

00:07:08.160 --> 00:07:11.160
langs de neus naar beneden, om het voorhoofd,

00:07:11.160 --> 00:07:14.160
terug naar beneden en eindigend in een kleine lus.

00:07:14.160 --> 00:07:17.160
Ik dacht: als dit kan, dan kan vrijwel alles werken.

00:07:17.160 --> 00:07:20.160
Ik liet het computerprogramma de nietjes ervoor ontwerpen.

00:07:20.160 --> 00:07:22.160
Ik bestelde ze en ze kwamen per FedEx binnen.

00:07:22.160 --> 00:07:24.160
Ik mengde, verwarmde en koelde af

00:07:24.160 --> 00:07:28.160
en ik kreeg 50 miljard kleine smilies.

00:07:28.160 --> 00:07:30.160
Ze drijven rond in één enkele druppel water

00:07:30.160 --> 00:07:32.160
en elk ervan is

00:07:32.160 --> 00:07:36.160
één duizendste van de breedte van een menselijke haar.

00:07:36.160 --> 00:07:39.160
Dus drijven ze allemaal in deze oplossing en om ze te zien te krijgen,

00:07:39.160 --> 00:07:41.160
moet je ze op een oppervlak plakken.

00:07:41.160 --> 00:07:43.160
Je giet ze uit over een oppervlak

00:07:43.160 --> 00:07:45.160
en ze hechten zich eraan.

00:07:45.160 --> 00:07:47.160
We maken een foto met een atoomkrachtmicroscoop.

00:07:47.160 --> 00:07:49.160
Die heeft een naald als een platenspeler

00:07:49.160 --> 00:07:51.160
die heen en weer over het oppervlak gaat.

00:07:51.160 --> 00:07:54.160
Ze gaat op en neer en voelt de hoogte van het oorspronkelijke oppervlak

00:07:54.160 --> 00:07:56.160
Ze voelt de DNA-origami.

00:07:56.160 --> 00:07:58.160
Hier is de atoomkrachtmicroscoop aan het werk.

00:07:59.160 --> 00:08:00.160
Je kunt zien dat de landing een beetje ruig is

00:08:00.160 --> 00:08:02.160
Wanneer je inzoomt hebben ze

00:08:02.160 --> 00:08:03.160
zwakke kaken die over hun hoofd heen flappen

00:08:03.160 --> 00:08:06.160
en sommige neuzen zijn eruit gestoten, maar het is redelijk goed.

00:08:06.160 --> 00:08:08.160
Je kunt inzoomen en dan zie je ook de kleine extra lus

00:08:08.160 --> 00:08:10.160
een kleine nano-geitesik.

00:08:10.160 --> 00:08:13.160
Het leuke is dat iedereen dit kan

00:08:13.160 --> 00:08:17.160
en dus kreeg ik dit ongevraagd, ongeveer een jaar later met de post.

00:08:17.160 --> 00:08:20.160
Weet iemand wat dit is?

00:08:20.160 --> 00:08:22.160
Het is China, ja?

00:08:22.160 --> 00:08:24.160
Een studente in China,

00:08:24.160 --> 00:08:26.160
Lulu Qian heeft iets moois gedaan.

00:08:26.160 --> 00:08:28.160
Ze schreef haar eigen software

00:08:28.160 --> 00:08:30.160
om dit te ontwerpen en te bouwen met DNA-origami

00:08:30.160 --> 00:08:33.160
een mooie weergave van China, waar zelfs Taiwan in zit

00:08:33.160 --> 00:08:36.160
en je kunt zien dat dit zo'n beetje 's werelds kortste leiband is, toch?

00:08:36.160 --> 00:08:38.160
(Gelach)

00:08:39.160 --> 00:08:40.160
Dit werkt best goed.

00:08:41.160 --> 00:08:43.160
Je kunt patronen en figuren maken.

00:08:44.160 --> 00:08:47.160
Je kunt een kaart van de Amerika's maken en 'DNA' met DNA spellen

00:08:47.160 --> 00:08:50.160
Het leuke is

00:08:50.160 --> 00:08:52.160
dat dit wel nano-kunst lijkt.

00:08:52.160 --> 00:08:53.160
Maar het blijkt dat nano-kunst

00:08:53.160 --> 00:08:55.160
juist datgene is wat je nodig hebt om nano-circuits te maken.

00:08:55.160 --> 00:08:57.160
Je kunt circuitcomponenten op de nietjes plaatsen.

00:08:57.160 --> 00:08:59.160
Lampjes en schakelaars.

00:08:59.160 --> 00:09:02.160
Assembleer het en je krijgt een soort circuit.

00:09:02.160 --> 00:09:05.160
Dan kun je wellicht het DNA wegwassen en het circuit overhouden.

00:09:05.160 --> 00:09:07.160
Dat deden een aantal van mijn collega's bij Caltech.

00:09:07.160 --> 00:09:10.160
Ze namen wat DNA-origami, regelden wat koolstof nano-buisjes en

00:09:10.160 --> 00:09:12.160
maakten een kleine schakelaar, sloten hem aan,

00:09:12.160 --> 00:09:15.160
testten hem en toonden aan dat het inderdaad een schakelaar is.

00:09:15.160 --> 00:09:17.160
Nu is dit maar één enkele schakelaar

00:09:17.160 --> 00:09:21.160
en je hebt er een half miljard nodig voor een computer, dus zijn we er nog niet.

00:09:21.160 --> 00:09:23.160
Maar veelbelovend is het wel.

00:09:23.160 --> 00:09:28.160
De origami kan deeltjes organiseren die maar een tiende van de grootte zijn

00:09:28.160 --> 00:09:29.160
van die in een normale computer.

00:09:29.160 --> 00:09:32.160
Dat houdt de belofte in voor het maken van kleinere computers.

00:09:32.160 --> 00:09:35.160
Ik wil even terug naar de compiler.

00:09:35.160 --> 00:09:38.160
DNA-origami is het bewijs dat de compiler echt werkt.

00:09:39.160 --> 00:09:41.160
Je start met iets in de computer.

00:09:41.160 --> 00:09:44.160
Je maakt een beschrijving op hoog niveau van het computerprogramma,

00:09:44.160 --> 00:09:46.160
een beschrijving op hoog niveau van de origami.

00:09:46.160 --> 00:09:49.160
Je kunt het compileren tot moleculen en het naar een synthesizer sturen

00:09:49.160 --> 00:09:50.160
en het werkt echt.

00:09:50.160 --> 00:09:54.160
Een bedrijf heeft een leuk programma gemaakt

00:09:54.160 --> 00:09:56.160
dat veel beter is dan mijn code, die nogal klungelig was.

00:09:56.160 --> 00:09:57.160
Het staat ons toe dit op een plezierige,

00:09:57.160 --> 00:09:59.160
visueel ondersteunde manier van ontwerpen te doen.

00:10:00.160 --> 00:10:01.160
Nu kan je je afvragen

00:10:01.160 --> 00:10:03.160
waarom DNA-origami niet het einde is van het verhaal.

00:10:03.160 --> 00:10:05.160
Je hebt je moleculaire compiler, je kunt doen wat je maar wil.

00:10:05.160 --> 00:10:08.160
Je kan het niet opschalen.

00:10:08.160 --> 00:10:11.160
Als je een mens wil maken met DNA-origami,

00:10:11.160 --> 00:10:13.160
dan is het probleem dat je een lange streng nodig hebt

00:10:13.160 --> 00:10:16.160
die 10 biljoen biljoen basen lang is.

00:10:16.160 --> 00:10:18.160
Dat is een streng van drie lichtjaren lang.

00:10:18.160 --> 00:10:20.160
Gaan we dus niet doen.

00:10:20.160 --> 00:10:22.160
We gaan een andere technologie gebruiken.

00:10:22.160 --> 00:10:24.160
Die heet algoritmische zelfassemblage van tegels.

00:10:24.160 --> 00:10:26.160
Erik Winfree is ermee begonnen.

00:10:26.160 --> 00:10:27.160
Het werkt met

00:10:27.160 --> 00:10:31.160
delen die maar een honderste zo groot zijn als een DNA-origami.

00:10:31.160 --> 00:10:33.160
Je zoomt in, er zijn maar vier DNA-strengen

00:10:34.160 --> 00:10:36.160
met kleine enkelstrengige stukjes erop

00:10:36.160 --> 00:10:38.160
die aan andere tegels kunnen binden als ze passen.

00:10:38.160 --> 00:10:41.160
We tekenen deze tegels als kleine vierkantjes.

00:10:42.160 --> 00:10:44.160
Door de kleverige uiteinden gaan deze kleine stukjes DNA

00:10:44.160 --> 00:10:47.160
een dambordpatroon vormen.

00:10:47.160 --> 00:10:50.160
Deze tegels vormen zo een gecompliceerd, zelfassemblerend dambord.

00:10:50.160 --> 00:10:52.160
Het punt is, als je het nog niet doorhad,

00:10:52.160 --> 00:10:55.160
dat deze tegels een soort moleculair programma zijn

00:10:55.160 --> 00:10:58.160
en patronen kunnen maken.

00:10:58.160 --> 00:11:00.160
Het geweldige hiervan is

00:11:00.160 --> 00:11:02.160
dat ieder computerprogramma vertaald kan worden

00:11:02.160 --> 00:11:05.160
in een van deze deelprogramma's - specifieker, om te tellen.

00:11:05.160 --> 00:11:08.160
Een set van deze tegels

00:11:08.160 --> 00:11:11.160
vormen samen een soort binaire teller

00:11:11.160 --> 00:11:13.160
in plaats van een dambord.

00:11:13.160 --> 00:11:16.160
Daar heb je de binaire getallen 5, 6 en 7.

00:11:16.160 --> 00:11:19.160
Om deze berekeningen goed te laten beginnen,

00:11:19.160 --> 00:11:21.160
heb je een soort input nodig, een soort zaadje.

00:11:21.160 --> 00:11:23.160
Daar kun je DNA-origami voor gebruiken.

00:11:23.160 --> 00:11:25.160
Je kunt het getal 32 coderen

00:11:25.160 --> 00:11:27.160
aan de rechterkant van een DNA-origami

00:11:27.160 --> 00:11:29.160
en wanneer je de rekenende tegels toevoegt

00:11:29.160 --> 00:11:32.160
zullen ze beginnen met tellen, ze zullen die 32 lezen

00:11:32.160 --> 00:11:34.160
en stoppen bij 32.

00:11:34.160 --> 00:11:37.160
We hebben een manier gevonden

00:11:37.160 --> 00:11:40.160
om een moleculair programma te laten weten wanneer het moet stoppen.

00:11:40.160 --> 00:11:42.160
Het weet wanneer het moet stoppen met groeien omdat het kan tellen.

00:11:42.160 --> 00:11:44.160
Het weet hoe groot het is.

00:11:44.160 --> 00:11:47.160
Dat beantwoordt de eerste vraag waar ik het over had.

00:11:47.160 --> 00:11:50.160
Het vertelt ons echter niet hoe baby’s het doen.

00:11:50.160 --> 00:11:54.160
We kunnen dit tellen gebruiken om veel grotere dingen te maken

00:11:54.160 --> 00:11:55.160
dan met DNA-origami zou kunnen.

00:11:55.160 --> 00:11:58.160
Hier is het DNA-origami en wat we ermee kunnen doen,

00:11:58.160 --> 00:12:01.160
is 32 schrijven aan beide kanten van het DNA-origami.

00:12:01.160 --> 00:12:03.160
Nu kunnen we onze gieter gebruiken

00:12:03.160 --> 00:12:07.160
en begieten met tegels. We kunnen hierop tegels kweken

00:12:07.160 --> 00:12:09.160
en een vierkant maken.

00:12:09.160 --> 00:12:12.160
De teller dient als sjabloon

00:12:12.160 --> 00:12:14.160
om een vierkant in het midden van dit ding in te vullen.

00:12:14.160 --> 00:12:15.160
We zijn er dus in geslaagd

00:12:15.160 --> 00:12:18.160
om iets te maken dat veel groter is dan DNA-origami

00:12:18.160 --> 00:12:21.160
door DNA-origami te combineren met tegels.

00:12:21.160 --> 00:12:24.160
Het leuke eraan is dat het ook herprogrammeerbaar is.

00:12:24.160 --> 00:12:28.160
Je kunt een paar DNA-strengen veranderen in deze binaire representatie

00:12:28.160 --> 00:12:31.160
en je krijgt 96 in plaats van 32.

00:12:31.160 --> 00:12:34.160
Wanneer je dat doet, is de origami even groot

00:12:34.160 --> 00:12:38.160
maar het daarop volgende vierkant drie keer zo groot.

00:12:39.160 --> 00:12:40.160
Dit vat zo'n beetje samen

00:12:40.160 --> 00:12:42.160
wat ik vertelde over ontwikkeling.

00:12:42.160 --> 00:12:45.160
Je hebt een erg gevoelig computerprogramma

00:12:45.160 --> 00:12:48.160
waar kleine wijzigingen - enkele kleine mutaties -

00:12:48.160 --> 00:12:50.160
iets dat een vierkant was,

00:12:50.160 --> 00:12:53.160
vele malen groter kan maken.

00:12:54.160 --> 00:12:57.160
Het gebruiken van tellen om te berekenen

00:12:57.160 --> 00:12:59.160
en deze dingen maken

00:12:59.160 --> 00:13:01.160
door een ontwikkelingsproces,

00:13:01.160 --> 00:13:05.160
is iets dat ook antwoord geeft op de vraag van Craig Venter.

00:13:05.160 --> 00:13:07.160
Je kan je afvragen hoeveel strengen er nodig zijn

00:13:07.160 --> 00:13:09.160
om een vierkant van een gegeven afmeting te maken.

00:13:09.160 --> 00:13:14.160
Als we een vierkant wilden van 10, 100 of 1000

00:13:14.160 --> 00:13:16.160
van alleen DNA-origami

00:13:16.160 --> 00:13:19.160
zou het aantal DNA-strengen gelijk moeten zijn aan het kwadraat

00:13:19.160 --> 00:13:21.160
van de grootte van dat vierkant.

00:13:21.160 --> 00:13:23.160
We zouden 100, 10.000 of een miljoen DNA-strengen nodig hebben.

00:13:23.160 --> 00:13:25.160
Dat is echt niet betaalbaar.

00:13:25.160 --> 00:13:27.160
Maar als we een kleine berekening maken -

00:13:27.160 --> 00:13:31.160
gebruiken we origami, plus een aantal tellende tegels -

00:13:31.160 --> 00:13:34.160
dan kunnen we wegkomen met 100, 200 of 300 DNA-strengen.

00:13:34.160 --> 00:13:39.160
We kunnen dus het benodigde aantal DNA-strengen exponentieel verminderen,

00:13:39.160 --> 00:13:42.160
als we tellen gebruiken, als we wat rekenen toepassen.

00:13:42.160 --> 00:13:45.160
Rekenen is dus een zeer krachtige manier

00:13:45.160 --> 00:13:48.160
om het aantal benodigde moleculen om iets te bouwen te verminderen,

00:13:48.160 --> 00:13:51.160
om de grootte van het genoom dat je bouwt te verkleinen.

00:13:51.160 --> 00:13:54.160
Tenslotte ga ik terug naar dat gekke idee

00:13:54.160 --> 00:13:56.160
over computers die computers bouwen.

00:13:56.160 --> 00:13:59.160
Als je kijkt naar het vierkant dat je bouwt met origami

00:13:59.160 --> 00:14:01.160
en een aantal tellers erop,

00:14:01.160 --> 00:14:04.160
is het patroon dat je krijgt precies het patroon dat je nodig hebt

00:14:04.160 --> 00:14:05.160
om een geheugen te maken.

00:14:05.160 --> 00:14:08.160
Als je wat draden en schakelaars op die tegels plaatst -

00:14:08.160 --> 00:14:11.160
in plaats van ze op de strengen te nieten, breng je ze aan op de tegels -

00:14:11.160 --> 00:14:14.160
dan zullen ze de enigszins ingewikkelde circuits zelf gaan assembleren,

00:14:14.160 --> 00:14:17.160
de demultiplexer circuits, die je nodig hebt om dit geheugen te adresseren.

00:14:17.160 --> 00:14:19.160
Je kunt zo een ingewikkeld circuit maken

00:14:19.160 --> 00:14:21.160
met behulp van een beetje rekenen.

00:14:21.160 --> 00:14:24.160
Het is een moleculaire computer die een elektronische computer bouwt.

00:14:24.160 --> 00:14:27.160
Nu zullen jullie mij vragen hoe ver we hiermee al staan.

00:14:27.160 --> 00:14:30.160
Dit hebben we in het afgelopen jaar gedaan.

00:14:30.160 --> 00:14:32.160
Hier is een DNA-origami rechthoek

00:14:33.160 --> 00:14:35.160
en hier zijn enkele tegels die erop staan.

00:14:35.160 --> 00:14:37.160
Je kan zien hoe ze tellen.

00:14:37.160 --> 00:14:49.160
1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 17.

00:14:49.160 --> 00:14:53.160
Er zitten nog wat fouten in, maar het telt ten minste.

00:14:53.160 --> 00:14:54.160
(Gelach)

00:14:54.160 --> 00:14:57.160
Negen jaar geleden begonnen we hiermee.

00:14:57.160 --> 00:15:00.160
Dat is ongeveer de tijd hoe lang het duurt

00:15:00.160 --> 00:15:02.160
om dit soort dingen te doen. Ik denk dat we veel vooruitgang hebben geboekt.

00:15:02.160 --> 00:15:04.160
We hebben ideeën over hoe deze fouten te herstellen.

00:15:04.160 --> 00:15:06.160
Ik denk dat we binnen vijf of tien jaar,

00:15:06.160 --> 00:15:08.160
de vierkanten die ik beschreef, gaan maken

00:15:08.160 --> 00:15:11.160
en misschien zelfs een aantal zelf-assemblerende circuits.

00:15:11.160 --> 00:15:15.160
Wat moet je van deze talk onthouden?

00:15:15.160 --> 00:15:17.160
Ik wil dat je onthoudt dat

00:15:17.160 --> 00:15:21.160
om de erg diverse en complexe vormen van het leven te creëren,

00:15:21.160 --> 00:15:23.160
het leven gebruik maakt van rekenen.

00:15:23.160 --> 00:15:27.160
De manier van rekenen is moleculair.

00:15:27.160 --> 00:15:29.160
Om dit te begrijpen en er een betere greep op te krijgen,

00:15:29.160 --> 00:15:31.160
moet je, zoals Feynman zei,

00:15:31.160 --> 00:15:33.160
het bouwen om het te begrijpen.

00:15:33.160 --> 00:15:37.160
Dus gaan we moleculen gebruiken en dit ding herwerken,

00:15:37.160 --> 00:15:39.160
alles van onder af opbouwen

00:15:39.160 --> 00:15:42.160
met behulp van DNA op een manier die de natuur nooit heeft bedoeld.

00:15:42.160 --> 00:15:44.160
Met behulp van DNA-origami

00:15:44.160 --> 00:15:47.160
om deze algoritmische zelf-assemblage te starten.

00:15:47.160 --> 00:15:49.160
Dit is allemaal heel cool,

00:15:50.160 --> 00:15:51.160
maar wat ik zou willen dat je hopelijk onthoudt

00:15:51.160 --> 00:15:53.160
van sommige van die grote vragen,

00:15:53.160 --> 00:15:56.160
is dat dit moleculair programmeren niet alleen gaat over het maken van gadgets.

00:15:56.160 --> 00:15:58.160
Het gaat niet alleen over het maken van

00:15:58.160 --> 00:16:00.160
zelf-geassembleerde mobiele telefoons en circuits.

00:16:00.160 --> 00:16:02.160
Waar het in de informatica echt om gaat is

00:16:02.160 --> 00:16:05.160
de grote vragen in een nieuw licht te bekijken,

00:16:05.160 --> 00:16:07.160
nieuwe versies van die grote vragen te bedenken

00:16:07.160 --> 00:16:09.160
en proberen te begrijpen hoe de biologie

00:16:09.160 --> 00:16:11.160
zo’n verbazingwekkende dingen heeft kunnen maken. Dank je.

00:16:12.160 --> 00:16:19.160
(Applaus)

