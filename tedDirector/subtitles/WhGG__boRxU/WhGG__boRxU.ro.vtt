WEBVTT
Kind: captions
Language: ro

00:00:00.000 --> 00:00:07.000
Traducător: Ariana Bleau Lugo
Corector: Brandusa Gheorghe

00:00:12.160 --> 00:00:15.160
Oamenii au pareri foarte diferite asupra definitiei vietii.

00:00:15.160 --> 00:00:20.160
Se intreaba daca ar trebui sa includa reproductie, metabolism, sau evolutie.

00:00:20.160 --> 00:00:22.160
Eu nu stiu raspunsul, deci nu vi-l pot spune.

00:00:22.160 --> 00:00:25.160
Sustin insa ca viata presupune calcule.

00:00:25.160 --> 00:00:27.160
Acesta este un program de calculator.

00:00:27.160 --> 00:00:30.160
Implementat intr-o celula, programul s-ar executa

00:00:30.160 --> 00:00:33.160
si ar putea produce aceasta persoana,

00:00:33.160 --> 00:00:36.160
ori cu o mica schimbare ar putea rezulta in aceasta persoana --

00:00:36.160 --> 00:00:38.160
sau cu o alta mica modificare --- aceasta persoana,

00:00:38.160 --> 00:00:41.160
cu o modificare mai mare, acest caine

00:00:41.160 --> 00:00:43.160
sau acest copac, ori aceasta balena.

00:00:43.160 --> 00:00:45.160
Daca iei in serios aceasta metafora

00:00:45.160 --> 00:00:47.160
de a privi genomul ca pe un program,

00:00:47.160 --> 00:00:49.160
trebuie sa admiti ca Chris Anderson

00:00:49.160 --> 00:00:52.160
e un artefact fabricat de computer, la fel si Jim Watson,

00:00:52.160 --> 00:00:55.160
Craig Venter, si noi toti.

00:00:55.160 --> 00:00:57.160
Si ca sa va convingeti ca aceasta metafora este adevarata,

00:00:57.160 --> 00:00:59.160
considerati numeroasele similaritati

00:00:59.160 --> 00:01:02.160
intre programele genetice si cele de calculator.

00:01:02.160 --> 00:01:04.160
Pentru mine cea mai convingatoare

00:01:04.160 --> 00:01:07.160
e sensibilitatea specifica la variaţii minore

00:01:07.160 --> 00:01:10.160
care atrag schimbari majore in dezvoltarea biologica finala.

00:01:10.160 --> 00:01:12.160
O mutatie minora poate transforma o musca cu doua aripi

00:01:12.160 --> 00:01:13.160
intr-una cu patru aripi.

00:01:13.160 --> 00:01:17.160
Ori ar putea pune picioruse in locul antenelor.

00:01:17.160 --> 00:01:19.160
Sau daca ti-e cunoscuta povestea "The Princess Bride"

00:01:19.160 --> 00:01:21.160
ar putea crea un om cu sase degete.

00:01:21.160 --> 00:01:23.160
Ei bine, o caracteristica a programelor de calculator

00:01:23.160 --> 00:01:26.160
este chiar acest tip de sensibilitate la variatii mici.

00:01:26.160 --> 00:01:28.160
Daca ai intr-un cont bancar $1 si modifici un singur bit

00:01:28.160 --> 00:01:30.160
te poti trezi cu $1.000.

00:01:30.160 --> 00:01:33.160
Deci, faptul ca mutatii minore

00:01:33.160 --> 00:01:35.160
produc modificari amplificate

00:01:35.160 --> 00:01:39.160
indica prezenta unui proces complex de procesare.

00:01:39.160 --> 00:01:45.160
Toate acestea demonstreaza ca exista programe moleculare la baza biologiei

00:01:45.160 --> 00:01:49.160
a caror putere ne-o demonstreaza biologia.

00:01:49.160 --> 00:01:51.160
Si ce vreau eu sa fac e sa scriu programe moleculare

00:01:51.160 --> 00:01:53.160
cu potential in dezvoltarea de tehnologie.

00:01:53.160 --> 00:01:54.160
Exista o multime de oameni care fac acest lucru,

00:01:54.160 --> 00:01:57.160
o multime de biologi de sinteza cum e Craig Venter,

00:01:57.160 --> 00:01:59.160
care insa se concentreaza pe utilizarea intregii celule.

00:01:59.160 --> 00:02:01.160
Ei se focalizeaza pe celula in intregime.

00:02:01.160 --> 00:02:03.160
Dar eu si prietenii mei, programatori moleculari,

00:02:03.160 --> 00:02:05.160
avem o abordare cu pornire de la bio-molecule.

00:02:05.160 --> 00:02:08.160
Suntem interesati in utilizarea de ADN, ARN si proteine

00:02:08.160 --> 00:02:11.160
si in implementarea de noi limbi de programare

00:02:11.160 --> 00:02:12.160
pentru construirea de jos in sus, folosind bio-molecule,

00:02:12.160 --> 00:02:15.160
cu posibilitatea de a nu avea nimic de-a face cu biologia.

00:02:15.160 --> 00:02:19.160
Acestea sunt toate mecanismele dintr-o celula.

00:02:19.160 --> 00:02:21.160
Exista un aparat de fotografiat.

00:02:21.160 --> 00:02:22.160
Exista panourile solare ale celulei,

00:02:22.160 --> 00:02:24.160
intrerupatoare care aprind sau sting genele,

00:02:24.160 --> 00:02:27.160
grinzi ale celulei, motoare care misca muschii.

00:02:27.160 --> 00:02:29.160
Echipa mea de programatori moleculari

00:02:29.160 --> 00:02:33.160
incearca sa refasoneze toate aceste parti folosind ADN.

00:02:33.160 --> 00:02:35.160
Nu suntem fanatici ai ADN-ului, dar ADN-ul e cel mai ieftin,

00:02:35.160 --> 00:02:38.160
cel mai usor de inteles si e un material simplu de programat.

00:02:38.160 --> 00:02:40.160
Si pe masura ce alte lucruri devin mai usor de utilizat --

00:02:40.160 --> 00:02:43.160
poate proteine -- vom lucra cu acelea în viitor.

00:02:43.160 --> 00:02:45.160
Si daca reusim, in ce va consta programarea moleculara?

00:02:45.160 --> 00:02:47.160
Veti sta in fata calculatorului.

00:02:47.160 --> 00:02:49.160
Veti concepe ceva de genul unui telefon mobil

00:02:49.160 --> 00:02:51.160
si, intr-un limbaj de nivel inalt, veti descrie acel telefon mobil.

00:02:51.160 --> 00:02:53.160
Apoi veti avea un compilator

00:02:53.160 --> 00:02:54.160
care va implementa acest program de descriere

00:02:54.160 --> 00:02:56.160
si-l va transforma in bio-molecule reale,

00:02:56.160 --> 00:02:58.160
care pot fi trimise la un sintetizator

00:02:58.160 --> 00:03:01.160
unde moleculele vor fi impachetate intr-o samanta.

00:03:01.160 --> 00:03:04.160
Si ce se intampla daca uzi si hranesti acea samanta cum trebuie,

00:03:04.160 --> 00:03:06.160
este ca va face un calcul de dezvoltare,

00:03:06.160 --> 00:03:09.160
un calcul molecular, si va construi un computer electronic.

00:03:09.160 --> 00:03:11.160
Si daca nu mi-am dat inca de gol prejudecatile

00:03:12.160 --> 00:03:14.160
consider ca viata se poate reduce la computere moleculare

00:03:14.160 --> 00:03:16.160
care construiesc computere electrochimice

00:03:16.160 --> 00:03:18.160
care construiesc computere electronice

00:03:18.160 --> 00:03:20.160
care impreuna cu computerele electrochimice

00:03:20.160 --> 00:03:22.160
vor construi computere moleculare noi

00:03:22.160 --> 00:03:25.160
care vor construi noi computere electronice si asa mai departe.

00:03:25.160 --> 00:03:26.160
Si daca esti de acord cu toate astea,

00:03:26.160 --> 00:03:28.160
si crezi ca viata e in intregime calcul, asa cum fac eu,

00:03:28.160 --> 00:03:31.160
atunci privesti intrebarile vitale prin ochii unui programator.

00:03:31.160 --> 00:03:35.160
Deci o intrebare importanta e, cum ştie copilul cand sa nu mai creasca?

00:03:35.160 --> 00:03:37.160
Pentru un programator molecular,

00:03:37.160 --> 00:03:39.160
intrebarea e: cum stie telefonul tau cand sa se opreasca din creştere?

00:03:39.160 --> 00:03:40.160
(Rasete)

00:03:40.160 --> 00:03:43.160
Sau cum stie un program de calculator cand sa se opreasca?

00:03:43.160 --> 00:03:46.160
Ori si mai concret, cum stim daca se va opri vreodata?

00:03:46.160 --> 00:03:48.160
Mai exista si alt gen de intrebari.

00:03:48.160 --> 00:03:50.160
Una dintre ele e intrebarea lui Craig Venter.

00:03:50.160 --> 00:03:52.160
De fapt se pare ca el gandeste ca un programator.

00:03:52.160 --> 00:03:55.160
El a intrebat cat de mare trebuie sa fie genomul minim

00:03:55.160 --> 00:03:57.160
care ar genera un microorganism funcţional.

00:03:57.160 --> 00:03:59.160
Cat de putine gene pot folosi?

00:03:59.160 --> 00:04:01.160
Asta e similara cu intrebarea

00:04:01.160 --> 00:04:02.160
care-i cel mai mic program pe care-l pot scrie

00:04:02.160 --> 00:04:04.160
care sa opereze exact ca Microsoft Word ?

00:04:04.160 --> 00:04:05.160
(Rasete)

00:04:05.160 --> 00:04:09.160
Si la fel cum el concepe, stiti, bacterii care vor fi mai mici,

00:04:09.160 --> 00:04:10.160
concepe genomuri care vor functiona,

00:04:10.160 --> 00:04:12.160
noi am putea scrie programe mai mici

00:04:12.160 --> 00:04:14.160
care sa functioneze ca Microsoft Word.

00:04:14.160 --> 00:04:16.160
Insa in cazul programarii moleculare, intrebarea devine

00:04:16.160 --> 00:04:20.160
cate molecule trebuie sa impachetam intr-o samanta pentru a obtine un celular.

00:04:20.160 --> 00:04:22.160
Care-i cel mai mic numar cu care ne-am putea descurca?

00:04:22.160 --> 00:04:24.160
Acestea sunt intrebari complexe,

00:04:24.160 --> 00:04:26.160
iar stiinta calculatoarelor confirma

00:04:26.160 --> 00:04:28.160
ca acestea sunt intrebari foarte grele.

00:04:28.160 --> 00:04:30.160
Multe dintre ele par intrebari imposibile.

00:04:30.160 --> 00:04:33.160
Dar pentru unele din ele putem incepe sa raspundem.

00:04:33.160 --> 00:04:34.160
Deci, voi incepe sa pun acele intrebari

00:04:34.160 --> 00:04:37.160
pentru structurile ADN de care voi vorbi in continuare.

00:04:37.160 --> 00:04:40.160
Acesta este ADN-ul normal.

00:04:40.160 --> 00:04:42.160
E un helix cu catena dubla,

00:04:42.160 --> 00:04:45.160
in care bazele A, T, C si G se cupleaza pentru a sustine helixul.

00:04:45.160 --> 00:04:47.160
Si il voi desena uneori liniar, simplificat

00:04:47.160 --> 00:04:49.160
ca sa nu va sperii.

00:04:49.160 --> 00:04:52.160
Vrem sa ne uitam la catene singulare si nu la helixul dublu.

00:04:52.160 --> 00:04:55.160
Cand il sintetizam il obtinem sub forma mono-catenara,

00:04:55.160 --> 00:04:58.160
astfel incat putem sintetiza lantul albastru intr-un tub

00:04:58.160 --> 00:05:00.160
si lantul portocaliu in alt tub.

00:05:00.160 --> 00:05:02.160
Lanturile ADN cand sunt mono-catenare sunt flexibile.

00:05:02.160 --> 00:05:05.160
Doar cand le amesteci se cupleaza intr-un helix dublu rigid.

00:05:05.160 --> 00:05:07.160
Ei bine, in ultimii 25 de ani,

00:05:07.160 --> 00:05:09.160
Ned Seeman si multi din urmasii lui

00:05:09.160 --> 00:05:12.160
au lucrat din greu si au realizat frumoase structuri tridimensionale

00:05:12.160 --> 00:05:15.160
folosind acest tip de reactie de cuplare a secventelor monocatenare de ADN.

00:05:15.160 --> 00:05:18.160
Dar multe din metodele lor, desi elegante, sunt laborioase.

00:05:18.160 --> 00:05:21.160
Pot dura si doi ani iar design-ul poate fi dificil de programat.

00:05:21.160 --> 00:05:24.160
Asa ca acum doi ani am inventat o metoda noua,

00:05:24.160 --> 00:05:25.160
o numesc ADN-origami,

00:05:25.160 --> 00:05:27.160
care-i atat de simpla ca ati putea-o folosi acasa, in bucatarie

00:05:27.160 --> 00:05:29.160
si-ati putea programa totul pe un laptop.

00:05:29.160 --> 00:05:32.160
Dar pentru asta aveti nevoie de un lant lung monocatenar de ADN,

00:05:32.160 --> 00:05:34.160
care e, tehnic vorbind, foarte dificil de obtinut.

00:05:34.160 --> 00:05:36.160
In schimb, poti cauta o sursa naturala.

00:05:36.160 --> 00:05:38.160
Te poti uita la acest artefact fabricat-de-computer

00:05:38.160 --> 00:05:40.160
dar este dublu-catenar asa ca nu ne e folositor.

00:05:40.160 --> 00:05:43.160
Te poti uita in intestinele lui. Sunt miliarde de bacterii.

00:05:43.160 --> 00:05:45.160
Nici astea nu sunt bune.

00:05:45.160 --> 00:05:47.160
Din nou dublu-catenare, dar in interior sunt infectate cu un virus

00:05:47.160 --> 00:05:50.160
al carui genom e un frumos lant lung de ADN-singular

00:05:50.160 --> 00:05:52.160
pe care-l putem impaturi ca pe o bucata de hartie.

00:05:52.160 --> 00:05:53.160
Si iata cum facem.

00:05:53.160 --> 00:05:54.160
Acesta e o parte din acel genom.

00:05:54.160 --> 00:05:57.160
Adaugam o gramada de ADN-uri sintetice scurte, pe care le numesc capse.

00:05:57.160 --> 00:06:01.160
Jumatatea stanga a fiecarei capse se leaga de catena lunga intr-un loc

00:06:01.160 --> 00:06:04.160
si jumatatea dreapta se leaga intr-un loc diferit

00:06:04.160 --> 00:06:06.160
si impatureste firul lung de ADN singular asa.

00:06:07.160 --> 00:06:09.160
Efectul final al multor capse asupra acelei monocatene lungi

00:06:09.160 --> 00:06:11.160
este o impaturire asemanatoare unui dreptunghi.

00:06:11.160 --> 00:06:13.160
Din pacate nu putem filma acest proces efectiv,

00:06:13.160 --> 00:06:15.160
dar Shawn Douglas la Harvard

00:06:15.160 --> 00:06:17.160
ne-a facut o frumoasa vizualizare virtuala,

00:06:17.160 --> 00:06:21.160
care incepe cu un lant ADN lung si are cateva catene scurte.

00:06:21.160 --> 00:06:25.160
Apoi aceste catene lungi si scurte se amesteca impreuna.

00:06:25.160 --> 00:06:27.160
Le incalzim, adaugam un pic de sare,

00:06:27.160 --> 00:06:29.160
le incalzim pana aproape de fierbere si apoi le racim.

00:06:29.160 --> 00:06:30.160
In timp ce se racesc,

00:06:30.160 --> 00:06:32.160
capsele scurte se prind de catena lunga

00:06:32.160 --> 00:06:34.160
si incep sa formeze structura;

00:06:34.160 --> 00:06:37.160
si vedeti cum incepe sa se formeze un helix dublu acolo.

00:06:38.160 --> 00:06:40.160
Cand te uiti la acest ADN-origami,

00:06:40.160 --> 00:06:43.160
poti vedea ce este in realitate,

00:06:43.160 --> 00:06:44.160
si chiar daca pare complicat,

00:06:44.160 --> 00:06:47.160
nu-i decat o gramada de helixuri duble paralele între ele,

00:06:47.160 --> 00:06:49.160
care sunt legate de coturi

00:06:49.160 --> 00:06:51.160
unde unele capse scurte se leaga de o spirala

00:06:51.160 --> 00:06:53.160
si apoi sar la alta.

00:06:53.160 --> 00:06:56.160
Iata o capsa care merge de-a lungul unei spirale

00:06:56.160 --> 00:06:58.160
si apoi sare la un alt helix si face un cot in forma de U,

00:06:58.160 --> 00:07:00.160
si tine lantul lung de ADN asa.

00:07:00.160 --> 00:07:03.160
Pentru a demonstra ca putem asambla orice forma sau model

00:07:03.160 --> 00:07:05.160
dorim, am incercat sa asamblez forma asta.

00:07:06.160 --> 00:07:08.160
Am vrut sa impaturesc ADN-ul in ceva care se infasoara

00:07:08.160 --> 00:07:11.160
in jurul ochiului, nasului, in jurul fruntii,

00:07:11.160 --> 00:07:14.160
inapoi in jos si se incheie intr-o mica bucla.

00:07:14.160 --> 00:07:17.160
M-am gandit ca daca aceasta forma se poate programa, orice altceva se poate.

00:07:17.160 --> 00:07:20.160
Deci cu ajutorul computerului am programat capsele necesare pentru a face asta.

00:07:20.160 --> 00:07:22.160
Le-am comandat, au venit prin FedEx.

00:07:22.160 --> 00:07:24.160
Le-am amestecat, le-am incalzit, le-am racit,

00:07:24.160 --> 00:07:28.160
si am obtinut 50 miliarde de ‘feţe zâmbitoare’ microscopice

00:07:28.160 --> 00:07:30.160
plutind toate intr-o singura picatura de apa.

00:07:30.160 --> 00:07:32.160
Fiecare dintre acestea este doar

00:07:32.160 --> 00:07:36.160
o miime din latimea unui fir de par uman, bine?

00:07:36.160 --> 00:07:39.160
Deci, toate plutesc in solutie si pentru a te uita la ele,

00:07:39.160 --> 00:07:41.160
trebuie aduse pe o suprafata uscata de care sa se lipeasca.

00:07:41.160 --> 00:07:43.160
Le torni pe o suprafaţa,

00:07:43.160 --> 00:07:45.160
ele incep sa se prinda pe acea suprafata,

00:07:45.160 --> 00:07:47.160
si facem o poza folosind un microscop de forta atomica (AFM).

00:07:47.160 --> 00:07:49.160
Acesta are un ac, ca un ac de inregistrat,

00:07:49.160 --> 00:07:51.160
care merge inainte si inapoi, pe deasupra suprafetei,

00:07:51.160 --> 00:07:54.160
gliseaza in sus si in jos si apreciaza inaltimea suprafetei.

00:07:54.160 --> 00:07:56.160
'Simte' ADN-ul origami.

00:07:56.160 --> 00:07:58.160
Iata microscopul atomic la lucru,

00:07:59.160 --> 00:08:00.160
puteti vedea ca aterizarea e putin cam dura.

00:08:00.160 --> 00:08:02.160
Cand focalizam, au, dupa cum vedeti,

00:08:02.160 --> 00:08:03.160
unele maxilare sparte si rasucite deasupra capetelor,

00:08:03.160 --> 00:08:06.160
iar unele dintre nasuri sunt busite, dar in general e destul de bine.

00:08:06.160 --> 00:08:08.160
Puteti focaliza si vedea chiar mica bucla,

00:08:08.160 --> 00:08:10.160
acest nano-cioculet mititel.

00:08:10.160 --> 00:08:13.160
Ce-i grozav la acest procedeu este ca oricine poate face asta.

00:08:13.160 --> 00:08:17.160
Si deci am primit asta in posta cam la un an dupa ce-am facut asta, nesolicitat.

00:08:17.160 --> 00:08:20.160
Stie cineva ce este asta? Ce este?

00:08:20.160 --> 00:08:22.160
E harta Chinei, nu-i asa?

00:08:22.160 --> 00:08:24.160
Deci, ce s-a intamplat este ca o studenta din China,

00:08:24.160 --> 00:08:26.160
Lulu Qian, a facut o treaba grozava.

00:08:26.160 --> 00:08:28.160
Si-a programat propriul ei software

00:08:28.160 --> 00:08:30.160
ca sa proiecteze si sa asambleze acest origami ADN,

00:08:30.160 --> 00:08:33.160
o frumoasa reprezentare a Chinei, care are chiar si Taiwan-ul,

00:08:33.160 --> 00:08:36.160
dupa cum vedeti legat prin cea mai scurta lesa din lume, corect?

00:08:36.160 --> 00:08:38.160
(Rasete)

00:08:39.160 --> 00:08:40.160
Deci, asta functioneaza foarte bine,

00:08:41.160 --> 00:08:43.160
poti construi diferite modele si forme.

00:08:44.160 --> 00:08:47.160
Poti face o harta a Americilor si poti scrie literele ADN folosind ADN.

00:08:47.160 --> 00:08:50.160
Si ce este cu adevarat elegant –

00:08:50.160 --> 00:08:52.160
e ca toate astea arata ca o nano-opera-de-arta,

00:08:52.160 --> 00:08:53.160
dar se pare ca nano-operele-de-arta

00:08:53.160 --> 00:08:55.160
sunt exact ce ai nevoie pentru a face nano-circuite.

00:08:55.160 --> 00:08:57.160
Deci, poti atasa componente de circuit pe capse,

00:08:57.160 --> 00:08:59.160
cum ar fi un bec electric si un intrerupator.

00:08:59.160 --> 00:09:02.160
Lasa-le sa se asambleze si vei obtine un fel de circuit.

00:09:02.160 --> 00:09:05.160
Si apoi poti spala ADN-ul remanent si ce ramane e circuitul.

00:09:05.160 --> 00:09:07.160
Exact asta au facut niste colegi de-ai mei de la Caltech.

00:09:07.160 --> 00:09:10.160
Au luat un origami ADN, au organizat niste nano-tuburi de carbon,

00:09:10.160 --> 00:09:12.160
au facut un mic comutator, l-au legat,

00:09:12.160 --> 00:09:15.160
l-au testat si au aratat ca este intr-adevar un comutator.

00:09:15.160 --> 00:09:17.160
Ei bine, acesta e doar un singur comutator

00:09:17.160 --> 00:09:21.160
si e nevoie de o jumatate de miliard pentru un computer, deci avem mult de mers.

00:09:21.160 --> 00:09:23.160
Dar e foarte promitator,

00:09:23.160 --> 00:09:28.160
intrucat cu origami se pot organiza piese de doar o zecime din dimensiunea

00:09:28.160 --> 00:09:29.160
celor dintr-un computer normal.

00:09:29.160 --> 00:09:32.160
Deci, metoda e foarte promitatoare pentru a face computere mici.

00:09:32.160 --> 00:09:35.160
Acum, vreau sa ma intorc la compilator.

00:09:35.160 --> 00:09:38.160
ADN-origami este o dovada ca de fapt compilatorul functioneaza.

00:09:39.160 --> 00:09:41.160
Deci, se incepe cu programul in calculator.

00:09:41.160 --> 00:09:44.160
Se obtine o descriere in limbaj de programare de înalt nivel,

00:09:44.160 --> 00:09:46.160
o descriere a acestui origami.

00:09:46.160 --> 00:09:49.160
Poti sa-l compilezi si sa obtii astfel moleculele, sa le trimiţi la un sintetizator

00:09:49.160 --> 00:09:50.160
si chiar functioneaza.

00:09:50.160 --> 00:09:54.160
Si se pare ca o companie a facut un program frumos,

00:09:54.160 --> 00:09:56.160
care e mult mai bun decat codul meu, care era cam urat,

00:09:56.160 --> 00:09:57.160
care ne va permite sa facem intr-un mod elegant

00:09:57.160 --> 00:09:59.160
acest gen de design asistat de calculator.

00:10:00.160 --> 00:10:01.160
Deci, acum ai putea intreba, bine,

00:10:01.160 --> 00:10:03.160
de ce nu este ADN-origami sfarsitul povestii ?

00:10:03.160 --> 00:10:05.160
Ai compilatorul molecular, poti programa orice vrei.

00:10:05.160 --> 00:10:08.160
In realitate metoda nu se aplica bine la scara mare.

00:10:08.160 --> 00:10:11.160
Daca vrei sa construiesti un om din ADN-origami,

00:10:11.160 --> 00:10:13.160
problema e ca trebuie sa pornesti de la un lant lung

00:10:13.160 --> 00:10:16.160
de 10 trilioane de trilioane de baze.

00:10:16.160 --> 00:10:18.160
Asta-i egal cu trei ani lumina de ADN,

00:10:18.160 --> 00:10:20.160
deci nu vom face asta.

00:10:20.160 --> 00:10:22.160
In schimb vom considera o alta tehnologie

00:10:22.160 --> 00:10:24.160
numita auto-asamblare algoritmica de dale.

00:10:24.160 --> 00:10:26.160
Tehnologia a fost initiata de Erik Winfree,

00:10:26.160 --> 00:10:27.160
si ce face ea,

00:10:27.160 --> 00:10:31.160
are dale care sunt a suta parte din marimea unui ADN-origami.

00:10:31.160 --> 00:10:33.160
Fiecare placuta e alcatuita din patru secvente de ADN

00:10:34.160 --> 00:10:36.160
si acestea au bucatele mono-catenate pe ele

00:10:36.160 --> 00:10:38.160
care se pot lipi de alte dale daca se potrivesc.

00:10:38.160 --> 00:10:41.160
Pentru simplificare reprezentam aceste dale ca patratele.

00:10:42.160 --> 00:10:44.160
Daca te uiti la capetele lipicioase ale acestor bucatele de ADN

00:10:44.160 --> 00:10:47.160
vezi ca formeaza de fapt o structura ca tabla de sah.

00:10:47.160 --> 00:10:50.160
Deci, aceste placi se auto-asambleaza intr-o tabla de sah complicata.

00:10:50.160 --> 00:10:52.160
Esentialul este, in caz ca nu v-ati dat seama,

00:10:52.160 --> 00:10:55.160
ca aceste placute asamblate sunt un fel de program molecular

00:10:55.160 --> 00:10:58.160
care poate crea modele.

00:10:58.160 --> 00:11:00.160
Si o parte cu adevarat uimitoare a acestui fapt

00:11:00.160 --> 00:11:02.160
e ca orice program de calculator poate fi tradus

00:11:02.160 --> 00:11:05.160
intr-un astfel de program de placute ADN -- cum ar fi un algoritm de numarare.

00:11:05.160 --> 00:11:08.160
Deci, puteti asambla un set de placute ADN

00:11:08.160 --> 00:11:11.160
care alcatuiesc mai degraba un mic sistem de numaratoare binara

00:11:11.160 --> 00:11:13.160
decat o tabla de sah.

00:11:13.160 --> 00:11:16.160
Astfel puteti citi numere binare, cinci, şase şi şapte.

00:11:16.160 --> 00:11:19.160
Ca sa pornim corect acest gen de calcule,

00:11:19.160 --> 00:11:21.160
avem nevoie de date de intrare, un fel de samanta.

00:11:21.160 --> 00:11:23.160
Putem folosi ADN-origami pentru asta.

00:11:23.160 --> 00:11:25.160
Codificam numarul 32

00:11:25.160 --> 00:11:27.160
in partea dreapta a unui ADN-origami

00:11:27.160 --> 00:11:29.160
si cand adaugam acele placute care numara

00:11:29.160 --> 00:11:32.160
ele vor incepe sa numere, sa citeasca acel 32

00:11:32.160 --> 00:11:34.160
si se vor opri la 32.

00:11:34.160 --> 00:11:37.160
Deci, ce am realizat este ca am gasit o metoda

00:11:37.160 --> 00:11:40.160
de a determina un program molecular sa stie cand sa se opreasca din crestere.

00:11:40.160 --> 00:11:42.160
Stie cand sa se opreasca din crestere pentru ca stie sa numere.

00:11:42.160 --> 00:11:44.160
Stie cat este de mare.

00:11:44.160 --> 00:11:47.160
Prin urmare, asta raspunde la acea prima intrebare pe care am mentionat-o.

00:11:47.160 --> 00:11:50.160
Nu ne spune insa cum stiu copiii sa se opreasca din crestere.

00:11:50.160 --> 00:11:54.160
Acum, putem folosi aceasta numarare pentru a asambla sisteme mult mai mari

00:11:54.160 --> 00:11:55.160
decat am fi putut cu metoda ADN-origami.

00:11:55.160 --> 00:11:58.160
Aici e o structura ADN-origami, ce putem face,

00:11:58.160 --> 00:12:01.160
putem scrie cate un 32 la ambele margini ale ADN-ului origami

00:12:01.160 --> 00:12:03.160
iar apoi folosind stropitoarea

00:12:03.160 --> 00:12:07.160
si adaugand dale si putem sa initiem o crestere cu ajutorul placutelor

00:12:07.160 --> 00:12:09.160
si sa cream un patrat.

00:12:09.160 --> 00:12:12.160
Contorul serveste ca un sablon

00:12:12.160 --> 00:12:14.160
care umple acest patrat in mijloc.

00:12:14.160 --> 00:12:15.160
Prin urmare am reusit sa cream

00:12:15.160 --> 00:12:18.160
ceva de marime mult mai mare decat un ADN origami

00:12:18.160 --> 00:12:21.160
prin combinarea de ADN-origami cu dale.

00:12:21.160 --> 00:12:24.160
Si partea frumoasa e ca acestea sunt reprogramabile.

00:12:24.160 --> 00:12:28.160
Prin schimbarea a doua catene de ADN in aceasta reprezentare binara

00:12:28.160 --> 00:12:31.160
se obtine o latura de 96 in loc de 32.

00:12:31.160 --> 00:12:34.160
Si daca faci asta, AND-ul origami e de aceeasi marime,

00:12:34.160 --> 00:12:38.160
dar patratul final e de trei ori mai mare.

00:12:39.160 --> 00:12:40.160
Sa recapitulam acum ce va spuneam

00:12:40.160 --> 00:12:42.160
depre cresterea programata.

00:12:42.160 --> 00:12:45.160
Aveti un program de computer foarte sensibil

00:12:45.160 --> 00:12:48.160
unde schimbari minore -- mutaţii singulare, minore ---

00:12:48.160 --> 00:12:50.160
pot lua ceva care a facut un patrat de o anumita marime

00:12:50.160 --> 00:12:53.160
si face o structura mult mai mare.

00:12:54.160 --> 00:12:57.160
Acum, folosirea acestui gen de algoritm

00:12:57.160 --> 00:12:59.160
si asamblarea acestui gen de structuri

00:12:59.160 --> 00:13:01.160
prin acest proces de augmentare

00:13:01.160 --> 00:13:05.160
ne ajuta sa raspundem si la intrebarea lui Craig Venter.

00:13:05.160 --> 00:13:07.160
Deci, puteti intreba, cate catene de ADN sunt necesare

00:13:07.160 --> 00:13:09.160
pentru a construi un patrat de o marime data?

00:13:09.160 --> 00:13:14.160
Daca am dori sa realizam un patrat de 10, 100 sau 1.000,

00:13:14.160 --> 00:13:16.160
si daca am folosi doar ADN-origami,

00:13:16.160 --> 00:13:19.160
ar fi necesar un numar de monocatene de ADN egal cu

00:13:19.160 --> 00:13:21.160
acea marime la patrat;

00:13:21.160 --> 00:13:23.160
deci am avea nevoie de 100, 10.000 respectiv 1.000.000 de catene ADN.

00:13:23.160 --> 00:13:25.160
Nu ne putem permite asta.

00:13:25.160 --> 00:13:27.160
Dar daca folosim cateva computatii --

00:13:27.160 --> 00:13:31.160
adica folosim origami plus placute care numara --

00:13:31.160 --> 00:13:34.160
atunci putem scapa folosind un numar de 100, 200, 300 de lanturi.

00:13:34.160 --> 00:13:39.160
Si astfel putem reduce exponential numarul de catene ADN necesare

00:13:39.160 --> 00:13:42.160
daca folosim ceva calcule.

00:13:42.160 --> 00:13:45.160
Prin urmare aceste calcule au potential mare

00:13:45.160 --> 00:13:48.160
de a reduce numarul de molecule de care ai nevoie ca sa construiesti ceva,

00:13:48.160 --> 00:13:51.160
de a reduce marimea genomului pe care il asamblezi.

00:13:51.160 --> 00:13:54.160
Si in sfarsit, ma voi referi din nou la acea idee indrazneata

00:13:54.160 --> 00:13:56.160
respectiv computere care construiesc computere.

00:13:56.160 --> 00:13:59.160
Daca va uitati la patratul construit cu origami

00:13:59.160 --> 00:14:01.160
si la numaratorile care rezulta din acestea

00:14:01.160 --> 00:14:04.160
tiparul pe care il are este exact cel de care ai nevoie

00:14:04.160 --> 00:14:05.160
pentru a crea o memorie.

00:14:05.160 --> 00:14:08.160
Acum, daca aplici niste conexiuni si intrerupatoare la acele dale,

00:14:08.160 --> 00:14:11.160
in loc sa le aplici pe capse

00:14:11.160 --> 00:14:14.160
atunci se pot auto-asambla circuite destul de complicate ---

00:14:14.160 --> 00:14:17.160
circuite de-multiplexer necesare pentru a adresa memoria unui calculator.

00:14:17.160 --> 00:14:19.160
In concluzie chiar putem construi circuite complicate

00:14:19.160 --> 00:14:21.160
folosind putina computatie.

00:14:21.160 --> 00:14:24.160
Aici avem un computer molecular care construieste un computer electronic.

00:14:24.160 --> 00:14:27.160
Poate va intrebati cat de departe am ajuns in aceasta directie.

00:14:27.160 --> 00:14:30.160
Experimental, iata ce am facut anul trecut.

00:14:30.160 --> 00:14:32.160
Acesta e un dreptunghi de ADN-origami,

00:14:33.160 --> 00:14:35.160
iar aici sunt niste placute care au crescut din el.

00:14:35.160 --> 00:14:37.160
Si puteti vedea cum calculeaza ele.

00:14:37.160 --> 00:14:49.160
1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 17.

00:14:49.160 --> 00:14:53.160
Observati niste erori, dar cel putin numara in sus.

00:14:53.160 --> 00:14:54.160
(Rasete)

00:14:54.160 --> 00:14:57.160
De fapt ne-a venit aceasta idee acum noua ani,

00:14:57.160 --> 00:15:00.160
dar, considerand constanta de timp necesara realizarii efective,

00:15:00.160 --> 00:15:02.160
consideram ca am progresat mult.

00:15:02.160 --> 00:15:04.160
Avem ceva idei de cum sa reparam aceste erori.

00:15:04.160 --> 00:15:06.160
Si cred ca in urmatorii 5 sau 10 ani

00:15:06.160 --> 00:15:08.160
vom face patratelele pe care le-am descris

00:15:08.160 --> 00:15:11.160
si poate chiar si acele circuite auto-asamblate.

00:15:11.160 --> 00:15:15.160
In concluzie, cu ce as dori sa ramaneti din aceasta prezentare?

00:15:15.160 --> 00:15:17.160
As dori sa retineti ca

00:15:17.160 --> 00:15:21.160
pentru a crea formele diverse si complexe de viata

00:15:21.160 --> 00:15:23.160
viata foloseste calcule in acest scop.

00:15:23.160 --> 00:15:27.160
Aceste calcule sunt computatii moleculare

00:15:27.160 --> 00:15:29.160
iar in scopul de a le intelege mai bine

00:15:29.160 --> 00:15:31.160
cum spunea Feyman,

00:15:31.160 --> 00:15:33.160
trebuie sa le construim ca sa le intelegem.

00:15:33.160 --> 00:15:37.160
Si astfel vom folosi molecule ADN si le vom refasona,

00:15:37.160 --> 00:15:39.160
reconstruind totul de jos in sus,

00:15:39.160 --> 00:15:42.160
folosind ADN-ul in moduri in care natura nu a intentionat niciodata,

00:15:42.160 --> 00:15:44.160
folosind ADN-origami,

00:15:44.160 --> 00:15:47.160
fie ca atare, fie pentru a initia aceste auto-asamblari algoritmice.

00:15:47.160 --> 00:15:49.160
Ei bine, toate acestea sunt grozave,

00:15:50.160 --> 00:15:51.160
dar ce mi-ar placea sa retineti din prezentare,

00:15:51.160 --> 00:15:53.160
din acele intrebari majore,

00:15:53.160 --> 00:15:56.160
este ca aceste programe moleculare

00:15:56.160 --> 00:15:58.160
nu se reduc doar la a construi dispozitive,

00:15:58.160 --> 00:16:00.160
doar la asamblarea de celulare si circuite.

00:16:00.160 --> 00:16:02.160
Ceea ce este cu adevarat important e a reusi in procesul de programare

00:16:02.160 --> 00:16:05.160
sa privim intrebarile vietii intr-o lumina noua,

00:16:05.160 --> 00:16:07.160
sa cream versiuni noi ale acelor intrebari complexe

00:16:07.160 --> 00:16:09.160
si sa incercam sa intelegem cum reuseste biologia

00:16:09.160 --> 00:16:11.160
sa faca astfel de lucruri uimitoare. Multumesc.

00:16:12.160 --> 00:16:19.160
(Aplauze)

