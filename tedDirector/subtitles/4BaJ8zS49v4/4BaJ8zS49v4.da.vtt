WEBVTT
Kind: captions
Language: da

00:00:00.000 --> 00:00:07.000
Translator: David J. Kreps Finnemann
Reviewer: Anders Finn Jørgensen

00:00:12.106 --> 00:00:13.530
Så den maskine jeg vil tale til jer om

00:00:13.530 --> 00:00:15.204
er det jeg kalder den største maskine der aldrig blev til noget.

00:00:15.204 --> 00:00:17.203
Det var en maskine der aldrig blev bygget,

00:00:17.203 --> 00:00:19.583
og alligevel, vil den blive bygget.

00:00:19.583 --> 00:00:21.575
Det var en maskine der blev bygget

00:00:21.575 --> 00:00:23.926
længe før nogen tænkte på computere.

00:00:23.926 --> 00:00:26.075
Hvis man ved noget som helst om computerens historie,

00:00:26.075 --> 00:00:28.595
ved man at der i 30'erne og 40'erne,

00:00:28.595 --> 00:00:31.150
blev bygget simple computere

00:00:31.150 --> 00:00:33.943
der startede den computer revolution vi har i dag,

00:00:33.943 --> 00:00:35.229
og man ville have ret,

00:00:35.229 --> 00:00:37.711
bortset fra at man ville have fat i det forkerte århundrede.

00:00:37.711 --> 00:00:39.351
Den første computer blev faktisk bygget

00:00:39.351 --> 00:00:43.023
i 1830'erne og 1840'erne, ikke 1930'erne og 1940'erne.

00:00:43.023 --> 00:00:45.351
Den blev bygget, og dele af den var prototyper,

00:00:45.351 --> 00:00:47.487
og de dele af der blev bygget er her

00:00:47.487 --> 00:00:49.480
i South Kensington.

00:00:49.480 --> 00:00:52.799
Den maskine blev bygget af denne fyr, Charles Babbage.

00:00:52.799 --> 00:00:54.555
Nuvel, jeg har en stor forkærlighed for Charles Babbage

00:00:54.555 --> 00:00:57.164
fordi hans hår altid er uredt ligesom dette

00:00:57.164 --> 00:00:59.505
på hvert eneste billede. (Latter)

00:00:59.505 --> 00:01:01.352
Han var en meget rig mand, og en slags,

00:01:01.352 --> 00:01:03.365
del af aristokratiet i England,

00:01:03.365 --> 00:01:05.704
og en lørdag aften i Marylebone,

00:01:05.704 --> 00:01:08.135
var man en del af intelligentsiaen i den periode,

00:01:08.135 --> 00:01:09.631
ville man være blevet inviteret til hans hus

00:01:09.631 --> 00:01:12.590
til et aftenselskab -- og han inviterede alle:

00:01:12.590 --> 00:01:16.022
konger, the Duke of Wellington, mange, mange kendte mennesker --

00:01:16.022 --> 00:01:18.543
og han ville have vist en af sine mekaniske maskiner.

00:01:18.543 --> 00:01:21.583
Jeg savner virkelig den periode, I ved, hvor man ville

00:01:21.583 --> 00:01:23.931
gå til et aftenselskab og se en mekanisk computer

00:01:23.931 --> 00:01:25.044
blive demonstreret for en. (Latter)

00:01:25.044 --> 00:01:28.310
Men Babbage, Babbage selv blev født

00:01:28.310 --> 00:01:30.044
i slutningen af det 18 århundrede,

00:01:30.044 --> 00:01:32.088
og var en temmelig kendt matematiker.

00:01:32.088 --> 00:01:35.231
Han havde den samme stilling som Newton havde ved Cambridge,

00:01:35.231 --> 00:01:37.743
og for nyligt også var den af Stephen Hawking.

00:01:37.743 --> 00:01:40.598
Han er mindre kendt end begge to, fordi

00:01:40.598 --> 00:01:43.748
han fik denne ide at lave mekaniske beregnende ting

00:01:43.748 --> 00:01:46.033
og lavede aldrig nogen af dem.

00:01:46.033 --> 00:01:49.318
Grunden til han aldrig lavede nogen af dem, han er en klassisk nørd.

00:01:49.318 --> 00:01:51.329
Hver gang han fik en god ide, tænkte han,

00:01:51.329 --> 00:01:52.777
"Det er genialt, jeg vil begynde at bygge den.

00:01:52.777 --> 00:01:55.372
Jeg bruger en formue på den. Jeg har en bedre ide.

00:01:55.372 --> 00:01:57.732
Jeg vil bygge denne. (Latter) Og jeg vil bygge denne."

00:01:57.732 --> 00:02:00.612
Han gjorde dette indtil Sir Robert Peel, den forhenværende premierminister,

00:02:00.612 --> 00:02:03.076
mere eller mindre sparkede ham ud af Downing Street 10,

00:02:03.076 --> 00:02:05.517
og sparkede ham ud, dengang, betød at sige,

00:02:05.517 --> 00:02:08.669
"Jeg ønsker dem en god dag, Hr." (Latter)

00:02:08.669 --> 00:02:10.649
Den ting han byggede var dette monstrum her,

00:02:10.649 --> 00:02:14.088
den analytiske maskine. Nuvel, bare for at give jer en ide om dette,

00:02:14.088 --> 00:02:15.960
dette er set ovenfra.

00:02:15.960 --> 00:02:19.073
Hver eneste af disse cirkler er et tandhjul, en stak tandhjul,

00:02:19.073 --> 00:02:22.309
og denne ting er lige så stor som et damp lokomotiv.

00:02:22.309 --> 00:02:24.300
Så mens jeg gennemgår dette foredrag, vil jeg bede jer om at forestille jer

00:02:24.300 --> 00:02:26.944
denne gigantiske maskine. Vi hørte disse vidunderlige lyde

00:02:26.944 --> 00:02:28.704
af hvordan denne ting kunne have lydt.

00:02:28.704 --> 00:02:30.481
Og jeg vil tage jer gennem arkitekturen af denne maskine

00:02:30.481 --> 00:02:31.960
-- det er derfor det er computer arkitektur --

00:02:31.960 --> 00:02:35.287
og fortælle jer om denne maskine, der er en computer.

00:02:35.287 --> 00:02:38.690
Så lad os tale om hukommelsen. Hukommelsen

00:02:38.690 --> 00:02:40.937
er meget lig den hukommelse en computer har i dag,

00:02:40.937 --> 00:02:43.639
bortset fra at det var lavet i metal,

00:02:43.639 --> 00:02:47.183
stakke og stakke og tandhjul, 30 tandhjul høj,

00:02:47.183 --> 00:02:49.253
forestille jeg en ting så høj med tandhjul,

00:02:49.253 --> 00:02:51.008
hundredvis og hundredvis af dem,

00:02:51.008 --> 00:02:52.898
og der er tal på dem.

00:02:52.898 --> 00:02:55.317
Det er en maskine. Alt bliver lavet i decimaler.

00:02:55.317 --> 00:02:56.902
Og han tænkte på at bruge binært. Problemet

00:02:56.902 --> 00:02:58.620
med at bruge binært er at maskinen ville have været så

00:02:58.620 --> 00:03:01.937
høj, at det ville have været latterligt. Som det er nu, er den enorm.

00:03:01.937 --> 00:03:03.996
Så han har hukommelse.

00:03:03.996 --> 00:03:06.403
Hukommelsen er den del herovre.

00:03:06.403 --> 00:03:08.733
I kan se det hele sådan her.

00:03:08.733 --> 00:03:13.268
Dette monstrum herovre er CPU'en, chippen, om man vil.

00:03:13.268 --> 00:03:15.518
Selvfølgelig, er den stor.

00:03:15.518 --> 00:03:18.431
Fuldstændig mekanisk. Hele denne maskine er mekanisk.

00:03:18.431 --> 00:03:22.572
Dette er et billede af en prototype for en del af CPU'en

00:03:22.572 --> 00:03:24.711
hvilket er i Science Museum.

00:03:24.711 --> 00:03:28.343
CPU'en kunne lave de fire fundamentale funktioner i

00:03:28.343 --> 00:03:30.796
så addere, multiplicere, subtrahere og dividere --

00:03:30.796 --> 00:03:33.804
hvilket allerede er noget af en bedrift i metal,

00:03:33.804 --> 00:03:36.433
men den kunne også noget som en computer gør

00:03:36.433 --> 00:03:38.132
og en lommeregner ikke gør:

00:03:38.132 --> 00:03:42.070
denne maskine kunne kigge på sin egen interne hukommelse og tage en beslutning.

00:03:42.070 --> 00:03:44.936
Den kunne lave "if then" for basic programmørerne,

00:03:44.936 --> 00:03:47.076
og det gjorde den fundamentalt til en computer.

00:03:47.076 --> 00:03:51.674
Den kunne beregne. Den kunne ikke kun regne. Den kunne gøre mere.

00:03:51.674 --> 00:03:54.355
Hvis vi nu kigger på dette, og vi stopper op et øjeblik,

00:03:54.355 --> 00:03:56.226
og vi tænker på chips i dag, kan vi ikke

00:03:56.226 --> 00:04:00.041
kigge ind i en chip. Den er bare så lille.

00:04:00.041 --> 00:04:01.842
Men hvis man gjorde, ville man se noget

00:04:01.842 --> 00:04:03.664
meget, meget lig dette.

00:04:03.664 --> 00:04:06.611
Der er en utrolig kompleksitet i en CPU,

00:04:06.611 --> 00:04:09.303
og en utrolig regularitet i hukommelsen.

00:04:09.303 --> 00:04:10.965
Hvis man nogensinde har set et elektron mikroskop billede,

00:04:10.965 --> 00:04:12.934
ville man se dette. Det ser alt sammen ens ud,

00:04:12.934 --> 00:04:15.500
så er der denne del herovre der er utrolig kompliceret.

00:04:15.500 --> 00:04:19.483
Alle disse tandhjuls mekanismer her, gør alt det en computer gør,

00:04:19.483 --> 00:04:21.576
men selvfølgelig skal man programmere denne ting, og selvfølgelig,

00:04:21.576 --> 00:04:24.601
brugte Babbage datidens teknologi

00:04:24.601 --> 00:04:28.247
og teknologien der ville dukke op i 50'erne, 60'erne og 70'erne,

00:04:28.247 --> 00:04:31.116
hvilket er hulkort. Denne ting herovre

00:04:31.116 --> 00:04:33.940
er en af tre hulkorts læsere,

00:04:33.940 --> 00:04:37.620
og dette program i Science Museum,

00:04:37.620 --> 00:04:42.013
ikke langt herfra, lavet af Charles Babbage,

00:04:42.013 --> 00:04:43.881
som sidder der -- man kan tage hen og se det --

00:04:43.881 --> 00:04:46.322
ventende på at maskinen bliver bygget.

00:04:46.322 --> 00:04:49.742
Og der er ikke kun en af disse, der er mange af dem.

00:04:49.742 --> 00:04:52.832
Han klargjorde programmer i forventning om at det ville ske.

00:04:52.832 --> 00:04:54.805
Grunden til at de brugte hulkort, var at Jacquard,

00:04:54.805 --> 00:04:56.977
i Frankrig, havde skabt Jacquard væven,

00:04:56.977 --> 00:04:59.655
der vævede disse utrolige mønstre kontrolleret af hulkortene,

00:04:59.655 --> 00:05:02.287
så han genanvendte bare datidens teknologi,

00:05:02.287 --> 00:05:04.392
og ligesom alt andet han gjorde, brugte han teknologien

00:05:04.392 --> 00:05:09.139
fra hans tid, så 1830'erne, 1840'erne, 1850'erne, tandhjul, damp,

00:05:09.139 --> 00:05:13.077
mekaniske ting. Ironisk nok, født det samme år

00:05:13.077 --> 00:05:15.249
som Charles Babbage var Michael Faraday,

00:05:15.249 --> 00:05:17.926
der fuldstændig ville revolutionere alt

00:05:17.926 --> 00:05:20.439
med dynamoen, transformeren, alle den slags ting.

00:05:20.439 --> 00:05:23.597
Babbage, selvfølgelig, ville bruge disse afprøvede teknologier,

00:05:23.597 --> 00:05:25.150
så damp og den slags.

00:05:25.150 --> 00:05:26.823
Men han havde brug for tilbehør.

00:05:26.823 --> 00:05:28.495
Åbenlyst, har man en computer nu.

00:05:28.495 --> 00:05:30.884
Man har hulkort, en CPU og hukommelse.

00:05:30.884 --> 00:05:32.819
Man har brug for tilbehør som man selv kommer med.

00:05:32.819 --> 00:05:34.447
Det er ikke noget man bare har.

00:05:34.447 --> 00:05:37.275
Så, for det første, havde man lyd. Man havde en klokke,

00:05:37.275 --> 00:05:39.429
og hvis noget gik galt -- (Latter) --

00:05:39.429 --> 00:05:41.774
eller maskinen havde brug for at operatøren kom forbi,

00:05:41.774 --> 00:05:43.744
var der en lille klokke der kunne ringe. (Latter)

00:05:43.744 --> 00:05:45.280
Og der er faktisk en instruktion på hulkortet

00:05:45.280 --> 00:05:48.182
der siger "Ring med klokken". Så man kan forestille sig dette "Ting!"

00:05:48.182 --> 00:05:50.382
I ved, man stopper et øjeblik, forestil jer alle disse lyde,

00:05:50.382 --> 00:05:51.463
denne ting, "Klik, klak klik klik klik",

00:05:51.463 --> 00:05:54.400
damp maskine, "Ding", ikke? (Latter)

00:05:54.400 --> 00:05:56.835
Man har også brug for en printer, selvfølgelig, og alle har brug for en printer.

00:05:56.835 --> 00:05:59.843
Dette er faktisk et billede af printe mekanismen for

00:05:59.843 --> 00:06:02.326
en anden af hans maskiner, kaldet the Difference Engine No. 2,

00:06:02.326 --> 00:06:04.261
som han aldrig byggede, men det gjorde the Science Museum

00:06:04.261 --> 00:06:06.432
i 80'erne og 90'erne.

00:06:06.432 --> 00:06:08.707
Det er komplet mekanisk, igen, en printer.

00:06:08.707 --> 00:06:11.405
Den printer kun numre, fordi han var besat af numre,

00:06:11.405 --> 00:06:14.922
men den printer på papir, og den kan endda lave orddeling,

00:06:14.922 --> 00:06:17.694
så hvis man kommer til enden af linjen, kommer den rundt på den måde.

00:06:17.694 --> 00:06:19.344
Man har også brug for grafik, ikke?

00:06:19.344 --> 00:06:20.900
Jeg mener, hvis man skal gøre noget som helst med grafik,

00:06:20.900 --> 00:06:23.496
så han sagde, "Jamen, jeg har brug for en plotter. Jeg har et stort stykke papir

00:06:23.496 --> 00:06:25.604
og en fyldepen så jeg laver en plotter."

00:06:25.604 --> 00:06:27.434
Så han byggede også en plotter,

00:06:27.434 --> 00:06:31.359
og, I ved, på det tidspunkt, tror jeg han fik lavet

00:06:31.359 --> 00:06:32.890
en temmelig god maskine.

00:06:32.890 --> 00:06:35.580
Så kommer der denne kvinde, Ada Lovelace, forbi.

00:06:35.580 --> 00:06:38.301
Forestil jeg nu disse aftenselskaber, alle de store og vigtige kommer med.

00:06:38.301 --> 00:06:41.393
Denne dame er datteren af den gale, slemme,

00:06:41.393 --> 00:06:43.815
og farlige at kende Lord Byron,

00:06:43.815 --> 00:06:46.335
og hendes mor, værende lidt bekymret over at hun måske

00:06:46.335 --> 00:06:49.192
har arvet noget af Lord Byrons galskab og slemhed,

00:06:49.192 --> 00:06:52.430
tænkte, "Jeg kender løsningen: Matematik er løsningen.

00:06:52.430 --> 00:06:55.379
Vi lærer hende matematik. Det beroliger hende."

00:06:55.379 --> 00:06:59.135
(Latter) Fordi der har selvfølgelig,

00:06:59.135 --> 00:07:03.050
aldrig været en matematiker der er blevet gal,

00:07:03.050 --> 00:07:05.451
så, I ved, det bliver godt. (Latter)

00:07:05.451 --> 00:07:08.789
Alt bliver godt. Så hun har denne matematiske træning,

00:07:08.789 --> 00:07:11.527
and hun går til en af disse aftenselskaber med hendes mor,

00:07:11.527 --> 00:07:14.317
og Charles Babbage, I ved, finder denne maskine frem.

00:07:14.317 --> 00:07:16.151
The Duke of Wellington er der, I ved,

00:07:16.151 --> 00:07:17.723
finder maskinen frem, demonstrerer den selvfølgelig,

00:07:17.723 --> 00:07:21.474
og hun forstår det. Hun er den eneste person i hans livstid, faktisk,

00:07:21.474 --> 00:07:22.766
der sagde, "Jeg forstår hvad den gør,

00:07:22.766 --> 00:07:24.973
og jeg forstår fremtiden af denne maskine."

00:07:24.973 --> 00:07:28.060
Og vi skylder hende en enorm masse, fordi vi ved

00:07:28.060 --> 00:07:31.037
en masse om den maskine som Babbage ville bygge

00:07:31.037 --> 00:07:32.640
på grund af hende.

00:07:32.640 --> 00:07:35.397
Nuvel, nogle mennesker kalder hende den første programmør.

00:07:35.397 --> 00:07:38.783
Det er faktisk fra en af -- det papir hun oversatte.

00:07:38.783 --> 00:07:41.694
Det er et program skrevet i en bestemt stil.

00:07:41.694 --> 00:07:45.263
Det er ikke, historisk, total nøjagtigt at hun er den første programmør,

00:07:45.263 --> 00:07:47.316
og faktisk, gjorde hun noget endnu mere utroligt.

00:07:47.316 --> 00:07:48.886
I stedet for bare at være en programmør,

00:07:48.886 --> 00:07:51.058
så hun noget som Babbage ikke så.

00:07:51.058 --> 00:07:54.242
Babbage var total besat med matematik.

00:07:54.242 --> 00:07:58.191
Han byggede en maskine til at lave matematik,

00:07:58.191 --> 00:08:01.450
og Lovelave sagde, "Man kunne lave mere end matematik

00:08:01.450 --> 00:08:04.285
på denne maskine". Og ligesom man gør,

00:08:04.285 --> 00:08:05.910
alle i dette lokale har en computer på sig,

00:08:05.910 --> 00:08:07.964
lige nu, fordi de har en telefon.

00:08:07.964 --> 00:08:10.192
Hvis man går ind i den telefon, er hver eneste ting i den telefon

00:08:10.192 --> 00:08:12.207
eller computer, eller en hvilken som helst anden databehandlings maskine

00:08:12.207 --> 00:08:14.288
er matematik. Det er i sidste ende alt sammen tal.

00:08:14.288 --> 00:08:18.981
Hvad enten det er video eller tekst eller tale, det er alt sammen numre,

00:08:18.981 --> 00:08:22.961
det er alt sammen, grundliggende, sker der matematiske funktioner,

00:08:22.961 --> 00:08:25.066
og Lovelace sagde, "Bare fordi man laver

00:08:25.066 --> 00:08:28.388
matematiske funktioner og symboler

00:08:28.388 --> 00:08:30.635
betyder det ikke at ting kan repræsentere

00:08:30.635 --> 00:08:33.988
andre ting i den virkelige verden, som musik".

00:08:33.988 --> 00:08:36.722
Dette var et kæmpe spring, fordi Babbage siger der,

00:08:36.722 --> 00:08:38.944
"Vi kunne beregne disse fantastiske funktioner og printe

00:08:38.944 --> 00:08:42.612
tabeller med numre og og tegne grafer," -- (Latter) --

00:08:42.612 --> 00:08:44.508
og Lovelace er der og siger, "Hør engang,

00:08:44.508 --> 00:08:46.984
denne ting kunne endda udarbejde musik hvis man

00:08:46.984 --> 00:08:50.532
numerisk fortalte den en repræsentation af musik."

00:08:50.532 --> 00:08:52.101
Så dette er hvad jeg kalder Lovelaces spring.

00:08:52.101 --> 00:08:55.838
Når man siger hun er en programmør, hun lavede noget,

00:08:55.838 --> 00:08:58.975
men den rigtige ting er at sagde at fremtiden vil blive

00:08:58.975 --> 00:09:01.171
meget, meget mere end dette.

00:09:01.171 --> 00:09:03.350
Nu, hundrede år senere, kommer denne fyr,

00:09:03.350 --> 00:09:08.803
Alan Turing, og i 1936, og opfinder computeren om igen.

00:09:08.803 --> 00:09:11.380
Men, selvfølgelig, var Babbages maskine var komplet mekanisk.

00:09:11.380 --> 00:09:13.911
Turings maskine var komplet teoretisk.

00:09:13.911 --> 00:09:16.702
Begge disse fyre kom fra en matematisk baggrund,

00:09:16.702 --> 00:09:19.255
men Turing fortalte os noget meget vigtigt.

00:09:19.255 --> 00:09:22.190
Han fastlagde de matematiske grundpiller

00:09:22.190 --> 00:09:24.303
for computer videnskaben, og sagde,

00:09:24.303 --> 00:09:27.490
"Det er lige meget hvordan man laver en computer."

00:09:27.490 --> 00:09:29.368
Det er lige meget om ens computer er mekanisk,

00:09:29.368 --> 00:09:33.778
ligesom Babbages var, eller elektronisk, ligesom computere er i dag,

00:09:33.778 --> 00:09:36.582
eller måske i fremtiden, celler, eller, igen,

00:09:36.582 --> 00:09:39.728
mekaniske igen, når vi begynder med nanoteknologi.

00:09:39.728 --> 00:09:41.765
Vi kunne gå tilbage til Babbages maskine

00:09:41.765 --> 00:09:44.341
og bare lave den lille. Alle disse ting er computere.

00:09:44.341 --> 00:09:45.973
Der er med andre ord en beregnende kerne.

00:09:45.973 --> 00:09:47.978
Dette er kaldet Church-Turing tesen.

00:09:47.978 --> 00:09:50.645
Og så pludselig, får man dette link hvor man siger

00:09:50.645 --> 00:09:52.868
denne ting Babbage byggede faktisk var en computer.

00:09:52.868 --> 00:09:55.693
Faktisk, var den i stand til at gøre alt vi gør i dag

00:09:55.693 --> 00:10:00.525
med computere, bare virkelig langsomt. (Latter)

00:10:00.525 --> 00:10:02.631
For at give jer en ide om hvor langsomt,

00:10:02.631 --> 00:10:06.470
havde den cirka 1k hukommelse.

00:10:06.470 --> 00:10:09.388
Den brugte hulkort, som blev stukket ind,

00:10:09.388 --> 00:10:15.148
og den kørte omkring 10.000 gange langsommere end den første ZX81.

00:10:15.148 --> 00:10:16.751
Den havde en RAM pakke.

00:10:16.751 --> 00:10:19.930
Man kunne sætte en masse ekstra hukommelse på, hvis man ville.

00:10:19.930 --> 00:10:22.256
(Latter) Så, hvor får det os hen i dag?

00:10:22.256 --> 00:10:23.864
Så her er planerne.

00:10:23.864 --> 00:10:26.797
Ovre i Swindon, the Science Museum arkiverne,

00:10:26.797 --> 00:10:28.491
der er hundredvis af planer og tusindvis af sider

00:10:28.491 --> 00:10:31.960
med noter, skrevet af Charles Babbage omkring denne analytiske maskine.

00:10:31.960 --> 00:10:35.921
En af disse, er et sæt planer som vi kalder Plan 28,

00:10:35.921 --> 00:10:38.075
og det er også navnet på en velgørende organisation som jeg startede

00:10:38.075 --> 00:10:40.809
med Doron Swade, der var IT kuratoren

00:10:40.809 --> 00:10:43.048
ved the Science Museum, og også personen der drev

00:10:43.048 --> 00:10:44.478
projektet til at bygge en difference maskine,

00:10:44.478 --> 00:10:47.036
og vores plan er at bygge den.

00:10:47.036 --> 00:10:50.902
Her i South Kensington, vil vi bygge den analytiske maskine.

00:10:50.902 --> 00:10:52.904
Projektet består af nogle forskellige dele.

00:10:52.904 --> 00:10:55.424
Et af dem var at scanne Babbages arkiv.

00:10:55.424 --> 00:10:57.346
Det er sket. Det andet er nu at studere

00:10:57.346 --> 00:11:00.456
alle disse planer for at afgøre hvad vi skal bygge.

00:11:00.456 --> 00:11:04.900
Den tredje del er en computer simulation af den maskine,

00:11:04.900 --> 00:11:07.823
og den sidste del er fysisk at bygge den ved the Science Museum.

00:11:07.823 --> 00:11:10.399
Når den er bygget, vil man endelig forstå hvordan en computer virker,

00:11:10.399 --> 00:11:12.233
fordi i stedet for at have en lillebitte chip foran sig,

00:11:12.233 --> 00:11:14.843
skal man kigge på denne enorme ting og sige, "Ah,

00:11:14.843 --> 00:11:18.178
jeg kan se hukommelsen arbejde, jeg kan se CPU'en arbejde

00:11:18.178 --> 00:11:22.045
jeg kan høre den arbejde. Jeg lugter sikkert den arbejder." (Latter)

00:11:22.045 --> 00:11:24.644
Men i mellem det kommer vi til at lave en simulation.

00:11:24.644 --> 00:11:26.401
Babbage skrev selv, han sagde,

00:11:26.401 --> 00:11:28.019
så snart den analytiske maskine eksisterer,

00:11:28.019 --> 00:11:31.723
vil den helt sikkert guide den fremtidige kurs for videnskab.

00:11:31.723 --> 00:11:33.568
Selvfølgelig, byggede han den aldrig, fordi han altid fiflede

00:11:33.568 --> 00:11:35.650
med nye planer, men da den blev bygget, selvfølgelig,

00:11:35.650 --> 00:11:39.160
i 1940'erne, ændrede den alt.

00:11:39.160 --> 00:11:40.983
Nu vil jeg bare give jer en lille forsmag på hvordan den ser ud

00:11:40.983 --> 00:11:43.616
i bevægelse, med en video der viser

00:11:43.616 --> 00:11:48.210
bare en del af CPU mekanismen der arbejder.

00:11:51.210 --> 00:11:54.209
Så dette er kun tre sæt tandhjul,

00:11:54.209 --> 00:11:57.031
og den vil addere. Dette er den adderende mekanisme

00:11:57.031 --> 00:11:59.688
i aktion, så man forestiller sig denne enorme maskine.

00:11:59.688 --> 00:12:00.847
Så, giv mig fem år.

00:12:00.847 --> 00:12:03.191
Inden 2030'erne sker, har vi den.

00:12:03.191 --> 00:12:06.161
Mange tak. (Bifald)

