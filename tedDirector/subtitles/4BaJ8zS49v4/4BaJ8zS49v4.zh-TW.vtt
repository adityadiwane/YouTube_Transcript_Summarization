WEBVTT
Kind: captions
Language: zh-TW

00:00:00.000 --> 00:00:07.000
譯者: Yuguo Zhang
審譯者: Yun Liu

00:00:12.106 --> 00:00:13.530
我今天要向大家介紹的這個機器

00:00:13.530 --> 00:00:15.204
被稱為有史以來最偉大的機器

00:00:15.204 --> 00:00:17.203
雖然目前它還沒被真的創造出來

00:00:17.203 --> 00:00:19.583
但它以後一定會被發明出來的

00:00:19.583 --> 00:00:21.575
這個機器在任何人發明電腦之前

00:00:21.575 --> 00:00:23.926
就被設計出來了

00:00:23.926 --> 00:00:26.075
如果你對電腦的歷史有一些了解

00:00:26.075 --> 00:00:28.595
你就會知道，在30和40年代的時候

00:00:28.595 --> 00:00:31.150
一些電腦的雛型被創造出來

00:00:31.150 --> 00:00:33.943
接著誕生了我們今日的電腦革命

00:00:33.943 --> 00:00:35.229
你是對的

00:00:35.229 --> 00:00:37.711
不過你把發生的世紀搞錯了

00:00:37.711 --> 00:00:39.351
其實，第一台電腦是在19世紀的

00:00:39.351 --> 00:00:43.023
30和40年代，而不是20世紀的時發明的

00:00:43.023 --> 00:00:45.351
有人設計出這個機器，並做出部分原型

00:00:45.351 --> 00:00:47.487
有部分就是在這裡製造的

00:00:47.487 --> 00:00:49.480
也就是肯辛頓南部

00:00:49.480 --> 00:00:52.799
這個機器是被Charles Babbage這個人做出來的

00:00:52.799 --> 00:00:54.555
我對Charles Babbage很感興趣

00:00:54.555 --> 00:00:57.164
因為他所有照片裡的頭髮都亂七八糟的

00:00:57.164 --> 00:00:59.505
像這樣，每張都是 (笑聲)

00:00:59.505 --> 00:01:01.352
他非常的富有

00:01:01.352 --> 00:01:03.365
而且可以說是英國的貴族成員

00:01:03.365 --> 00:01:05.704
在馬斯伯恩 (倫敦市區) 的一個週六夜晚

00:01:05.704 --> 00:01:08.135
如果你是一位當代的知識分子

00:01:08.135 --> 00:01:09.631
你就會被邀請到他家參加晚會

00:01:09.631 --> 00:01:12.590
他邀請了每個人--

00:01:12.590 --> 00:01:16.022
國王、惠靈頓的公爵、很多有名的人---

00:01:16.022 --> 00:01:18.543
然後他會向你們展示他許多機械中的一個

00:01:18.543 --> 00:01:21.583
我非常想念那個時代，你知道的，

00:01:21.583 --> 00:01:23.931
可以去參加晚會，然後看一個

00:01:23.931 --> 00:01:25.044
機械電腦在你面前被展示 (笑聲)

00:01:25.044 --> 00:01:28.310
不過Babbage是在

00:01:28.310 --> 00:01:30.044
18世紀末出生的

00:01:30.044 --> 00:01:32.088
而且還是個有名的數學家

00:01:32.088 --> 00:01:35.231
他主持了當初牛頓在劍橋主持的盛會

00:01:35.231 --> 00:01:37.743
這個盛會最近由史蒂芬霍金主持

00:01:37.743 --> 00:01:40.598
他沒這些人那麼有名，因為

00:01:40.598 --> 00:01:43.748
他只有創造這台機器的想法

00:01:43.748 --> 00:01:46.033
但卻從未真正創造出來

00:01:46.033 --> 00:01:49.318
原因就是，他是個標準的書呆子

00:01:49.318 --> 00:01:51.329
每次他有很好的想法時

00:01:51.329 --> 00:01:52.777
他就會想：「太棒了，我要去把它做出來。

00:01:52.777 --> 00:01:55.372
我得投入一些錢... 阿，我又有個更好的主意

00:01:55.372 --> 00:01:57.732
那我來做這個吧 (笑聲) 然後我還要...」

00:01:57.732 --> 00:02:00.612
他一直重複這些想法，直到首相Sir Robert Peel

00:02:00.612 --> 00:02:03.076
把他從唐寧街10號 (首相官邸) 趕出去

00:02:03.076 --> 00:02:05.517
當時，從那裏被趕出去就意會著

00:02:05.517 --> 00:02:08.669
「先生，祝您有個愉快的一天。」 (笑聲)

00:02:08.669 --> 00:02:10.649
他所設計的就是這個巨大的東西：分析引擎。

00:02:10.649 --> 00:02:14.088
現在，為了讓你有個初步的了解

00:02:14.088 --> 00:02:15.960
這是由上往下的俯視圖

00:02:15.960 --> 00:02:19.073
每個圈圈都是一個齒輪，一堆齒輪

00:02:19.073 --> 00:02:22.309
而這東西就跟一個蒸汽火車頭一樣大

00:02:22.309 --> 00:02:24.300
所以在我演講的過程中，我希望你能想像一下

00:02:24.300 --> 00:02:26.944
這個巨大的機器。我們可以想像我們正聽著

00:02:26.944 --> 00:02:28.704
這個機器有可能發出的美妙聲音

00:02:28.704 --> 00:02:30.481
現在，我將為各位介紹這個機器的搆造

00:02:30.481 --> 00:02:31.960
這就是為什麼「電腦系統搆造 (computer architechture)」是用英文中建築物 (architecture) 這個單字

00:02:31.960 --> 00:02:35.287
並為大家介紹這台機器，也就是電腦

00:02:35.287 --> 00:02:38.690
首先，讓我們聊聊記憶體。

00:02:38.690 --> 00:02:40.937
這機器的記憶體就跟現在電腦的記憶體很像

00:02:40.937 --> 00:02:43.639
只不過它當時是用金屬打造成的

00:02:43.639 --> 00:02:47.183
一堆齒輪 -- 總共有30個齒輪那麼高

00:02:47.183 --> 00:02:49.253
想像一下這些齒輪的高度

00:02:49.253 --> 00:02:51.008
成千上百個的齒輪

00:02:51.008 --> 00:02:52.898
每個齒輪上都有編號

00:02:52.898 --> 00:02:55.317
這個機器是十進位制的。所有東西都是十進位制

00:02:55.317 --> 00:02:56.902
他曾想過用二進位制，不過問題是

00:02:56.902 --> 00:02:58.620
如果用二進位制，機器就會變得過高

00:02:58.620 --> 00:03:01.937
看起來很荒謬，而且極其巨大

00:03:01.937 --> 00:03:03.996
它也有記憶體

00:03:03.996 --> 00:03:06.403
記憶體就是這裡的位元

00:03:06.403 --> 00:03:08.733
它們長這個樣子

00:03:08.733 --> 00:03:13.268
這個巨大的東西就是CPU，或稱為晶片

00:03:13.268 --> 00:03:15.518
沒錯，就是這麼大

00:03:15.518 --> 00:03:18.431
整個機器完全都是機械化

00:03:18.431 --> 00:03:22.572
這是一張局部的CPU原型照片

00:03:22.572 --> 00:03:24.711
目前被存放在科學博物館

00:03:24.711 --> 00:03:28.343
CPU可以做4種最基本的算數

00:03:28.343 --> 00:03:30.796
加、減、乘、除

00:03:30.796 --> 00:03:33.804
這對金屬來說已經很厲害了

00:03:33.804 --> 00:03:36.433
不過，它也可以做一些電腦可以、

00:03:36.433 --> 00:03:38.132
但計算機做不了的事情

00:03:38.132 --> 00:03:42.070
這個機器可以透過本身的記憶體做出決定

00:03:42.070 --> 00:03:44.936
它可以幫基本編程做假設

00:03:44.936 --> 00:03:47.076
而擁有這些功能，表示它就是一台電腦

00:03:47.076 --> 00:03:51.674
它可以計算、不光是算數，而且還可以做更多

00:03:51.674 --> 00:03:54.355
現在，如果我們看著它，停下來想想

00:03:54.355 --> 00:03:56.226
我們今天的晶片，,我們根本沒辦法看見

00:03:56.226 --> 00:04:00.041
那些矽晶片的內部構造，它們實在太小了

00:04:00.041 --> 00:04:01.842
然而，如果你真的仔細研究它，你可以看到

00:04:01.842 --> 00:04:03.664
跟這個非常相似的東西

00:04:03.664 --> 00:04:06.611
這就是CPU裡令人屏息的複雜構造

00:04:06.611 --> 00:04:09.303
以及記憶體中不可思議的規律性

00:04:09.303 --> 00:04:10.965
如果你曾經看過一個電子顯微鏡照片

00:04:10.965 --> 00:04:12.934
你就會看到這個，它們看起來完全一樣

00:04:12.934 --> 00:04:15.500
然後這裡會有些十分複雜的位元

00:04:15.500 --> 00:04:19.483
這裡所有的齒輪都在做一些電腦能做的事情

00:04:19.483 --> 00:04:21.576
當然，你得幫它寫程式

00:04:21.576 --> 00:04:24.601
而 Babbage 用了和當今一樣的方法

00:04:24.601 --> 00:04:28.247
而這個方法在50,60,70年代會再次出現

00:04:28.247 --> 00:04:31.116
也就是：打孔。這個東西

00:04:31.116 --> 00:04:33.940
就是三個讀卡機的其中一個

00:04:33.940 --> 00:04:37.620
而這是一個程式，目前存放在科學博物館

00:04:37.620 --> 00:04:42.013
離這兒不遠，是由 Charles Babbage 建造的

00:04:42.013 --> 00:04:43.881
它就在那裡，你可以去看看

00:04:43.881 --> 00:04:46.322
它等待著人們把機器創造出來

00:04:46.322 --> 00:04:49.742
事實上，這機器不僅僅只有一台，而是有很多

00:04:49.742 --> 00:04:52.832
他設計了一些程式，認為這個可以實現

00:04:52.832 --> 00:04:54.805
之所以使用打孔卡片的原因是

00:04:54.805 --> 00:04:56.977
法國的 Jacquard 創造了織布機

00:04:56.977 --> 00:04:59.655
而織布機可以織出這些打孔卡片上不可思議的圖案

00:04:59.655 --> 00:05:02.287
所以他當時是在為今天的科技做準備

00:05:02.287 --> 00:05:04.392
就跟所有他做的其他事情一樣，他使用的

00:05:04.392 --> 00:05:09.139
是他當時19世紀30,40,50年代的科技：齒輪、蒸汽

00:05:09.139 --> 00:05:13.077
機器。很諷刺的是，跟 Charles Babbage

00:05:13.077 --> 00:05:15.249
同一年出生的有麥克法拉第

00:05:15.249 --> 00:05:17.926
那個用發電機、變壓器、和其他玩意兒

00:05:17.926 --> 00:05:20.439
改變了一切的那個傢伙

00:05:20.439 --> 00:05:23.597
Babbage 想要用當時現存的科技

00:05:23.597 --> 00:05:25.150
也就是就是蒸汽之類的東西

00:05:25.150 --> 00:05:26.823
現在，他需要一些配件

00:05:26.823 --> 00:05:28.495
顯然電腦的雛型已經出來了

00:05:28.495 --> 00:05:30.884
你有很多卡片、CPU、以及記憶體

00:05:30.884 --> 00:05:32.819
但你還需要一些其他的配件

00:05:32.819 --> 00:05:34.447
但是你找不到

00:05:34.447 --> 00:05:37.275
所以呢，首先你要有發出聲音的東西，像是鈴鐺

00:05:37.275 --> 00:05:39.429
如果任何事情搞砸了的話---- (笑聲)

00:05:39.429 --> 00:05:41.774
或者這機器需要一個人員陪同

00:05:41.774 --> 00:05:43.744
你就可以搖鈴鐺 (笑聲)

00:05:43.744 --> 00:05:45.280
在打孔卡片上其實有個說明

00:05:45.280 --> 00:05:48.182
寫著：「搖鈴鐺」。想像那「叮」的一聲

00:05:48.182 --> 00:05:50.382
讓我們暫停一下，想像這些聲音

00:05:50.382 --> 00:05:51.463
這台機器發出「喀喀喀喀」的聲音

00:05:51.463 --> 00:05:54.400
或是蒸汽引擎的聲音「叮」。沒錯吧？(笑聲)

00:05:54.400 --> 00:05:56.835
很顯然，你還需要一個印表機，每個人都需要

00:05:56.835 --> 00:05:59.843
這個圖片是關於另外一個機器的列印原理

00:05:59.843 --> 00:06:02.326
它叫做「不同的2號引擎」

00:06:02.326 --> 00:06:04.261
他沒有把這個機器做出來，不過科學博物館

00:06:04.261 --> 00:06:06.432
在80和90年代真的做出來了

00:06:06.432 --> 00:06:08.707
它是個完全機械性的印表機

00:06:08.707 --> 00:06:11.405
它只能印數字，因為他對數字很著迷

00:06:11.405 --> 00:06:14.922
它確實可印在紙上，甚至可以自動換行

00:06:14.922 --> 00:06:17.694
所以當你打到一行結束，它就可以變成這樣

00:06:17.694 --> 00:06:19.344
你還需要圖片，對吧？

00:06:19.344 --> 00:06:20.900
就是說，當你得處理一些關於圖片的事

00:06:20.900 --> 00:06:23.496
因此他說：「嗯，我需要個繪圖機。我有一大張紙

00:06:23.496 --> 00:06:25.604
還有鋼筆，這樣我就可以讓它作圖了。」

00:06:25.604 --> 00:06:27.434
因此他也設計了一個繪圖機

00:06:27.434 --> 00:06:31.359
你知道的，以那個時候的發展來說

00:06:31.359 --> 00:06:32.890
我認為他已經做出一個很好的機器了

00:06:32.890 --> 00:06:35.580
接下來則要介紹這位女士，Ada Lovelace

00:06:35.580 --> 00:06:38.301
現在，想像一下這些晚會，聚集了有名利的人們

00:06:38.301 --> 00:06:41.393
而這位女士的父親就是瘋狂、陰險

00:06:41.393 --> 00:06:43.815
、又危險的拜倫王

00:06:43.815 --> 00:06:46.335
她的母親擔心她會繼承拜倫王

00:06:46.335 --> 00:06:49.192
那些又古怪又壞的行為

00:06:49.192 --> 00:06:52.430
於是就想：「我知道怎麼解決了：數學。

00:06:52.430 --> 00:06:55.379
我們會教她數學，這樣她就會安靜下來了。」

00:06:55.379 --> 00:06:59.135
(笑聲) 原因是因為

00:06:59.135 --> 00:07:03.050
從來沒有數學家最後會瘋掉

00:07:03.050 --> 00:07:05.451
所以，嗯，這個主意還不錯 (笑聲)

00:07:05.451 --> 00:07:08.789
一切不會有問題。所以她開始學習數學

00:07:08.789 --> 00:07:11.527
並跟她母親去了一個這樣的晚會

00:07:11.527 --> 00:07:14.317
Charles Babbage ，你知道的，拿出他的機器

00:07:14.317 --> 00:07:16.151
威靈頓的公爵也在場

00:07:16.151 --> 00:07:17.723
Charles 展示了他的機器

00:07:17.723 --> 00:07:21.474
而 Ada Lovelace 就理解了。她是他生命中

00:07:21.474 --> 00:07:22.766
唯一一個說出：「我知道這個機器的功用

00:07:22.766 --> 00:07:24.973
也理解這個機器的未來會怎麼樣」的人。

00:07:24.973 --> 00:07:28.060
她對我們帮助非常大，因為我們之所以

00:07:28.060 --> 00:07:31.037
能知道許多 Babbage 設計的機器

00:07:31.037 --> 00:07:32.640
都歸功於她

00:07:32.640 --> 00:07:35.397
現在有些人稱她叫第一位程式設計者

00:07:35.397 --> 00:07:38.783
這其實是從她當初翻譯的一篇論文中節錄出來的

00:07:38.783 --> 00:07:41.694
這是一個以特定格式寫下的程式

00:07:41.694 --> 00:07:45.263
不過，正確來說她並不是真正的第一位程式設計者

00:07:45.263 --> 00:07:47.316
而且事實上，她做了更驚人的事

00:07:47.316 --> 00:07:48.886
不僅僅只是寫程式

00:07:48.886 --> 00:07:51.058
她看到了一些 Babbage 沒看到的東西

00:07:51.058 --> 00:07:54.242
因為 Babbage 對數學太著迷了

00:07:54.242 --> 00:07:58.191
他想做一個能算數學的機器

00:07:58.191 --> 00:08:01.450
Lavelace 說：「這台機器

00:08:01.450 --> 00:08:04.285
不只可以算數。」就像在座的各位一樣

00:08:04.285 --> 00:08:05.910
大家此刻身上都有一台電腦

00:08:05.910 --> 00:08:07.964
也就是手機

00:08:07.964 --> 00:08:10.192
如果你打開你的手機，每個手機

00:08:10.192 --> 00:08:12.207
、電腦、或任何其他計算設備

00:08:12.207 --> 00:08:14.288
都是數學。運作的基礎都是數字

00:08:14.288 --> 00:08:18.981
不論是影片、簡訊、音樂、或聲音，都是數字

00:08:18.981 --> 00:08:22.961
全部。數學讓這一切成為可能

00:08:22.961 --> 00:08:25.066
而 Lovalace 說「雖然你在使用的

00:08:25.066 --> 00:08:28.388
是數學函數和數學符號

00:08:28.388 --> 00:08:30.635
但這並不表示這些東西就不能

00:08:30.635 --> 00:08:33.988
代表其他東西，例如音樂」

00:08:33.988 --> 00:08:36.722
這是個非常大的進展，因為 Babbage 還在說著

00:08:36.722 --> 00:08:38.944
「我們可以繪出這些神奇的函數、

00:08:38.944 --> 00:08:42.612
印出表格和數字，然後畫圖！」(笑聲)

00:08:42.612 --> 00:08:44.508
Lovalce 則說：「你看，

00:08:44.508 --> 00:08:46.984
這機器可以做出曲子，

00:08:46.984 --> 00:08:50.532
只要你給它用來代表音樂的數字代號

00:08:50.532 --> 00:08:52.101
這就是我所說的 Loavelace 大躍進

00:08:52.101 --> 00:08:55.838
若你稱她為程式設計者，她的確是

00:08:55.838 --> 00:08:58.975
不過真正重要的是她看見了這機器

00:08:58.975 --> 00:09:01.171
在未來能有更多可能性

00:09:01.171 --> 00:09:03.350
而一百多年後，某個人出現了

00:09:03.350 --> 00:09:08.803
Alan Turing 在1936年重新發明了電腦

00:09:08.803 --> 00:09:11.380
當然，Babbage的機器是純機械的

00:09:11.380 --> 00:09:13.911
Turing 的機器是純理論的

00:09:13.911 --> 00:09:16.702
這兩人都是從數學的觀點來思考

00:09:16.702 --> 00:09:19.255
但 Turing 告訴我們一些很重要的事情

00:09:19.255 --> 00:09:22.190
他奠定了數學在電腦科學

00:09:22.190 --> 00:09:24.303
中的基礎，說到：

00:09:24.303 --> 00:09:27.490
「你怎麼把電腦創造出來的並不重要。」

00:09:27.490 --> 00:09:29.368
你的電腦是不是像Babbage那樣是純機械的，

00:09:29.368 --> 00:09:33.778
或者像今天這種電子的，都不重要

00:09:33.778 --> 00:09:36.582
也許未來的電腦是由細胞構成的

00:09:36.582 --> 00:09:39.728
或者又回歸到純機械的。一旦我們使用了奈米技術

00:09:39.728 --> 00:09:41.765
我們可以把 Babbage 的機器變得

00:09:41.765 --> 00:09:44.341
非常小。.所有東西都是電腦

00:09:44.341 --> 00:09:45.973
而在這之中，所有東西的本質都是計算

00:09:45.973 --> 00:09:47.978
這叫做 Church-Turing 理論

00:09:47.978 --> 00:09:50.645
所以突然間，你會開始聯想到，

00:09:50.645 --> 00:09:52.868
Babbage 當年造的那東西，其實就是台電腦

00:09:52.868 --> 00:09:55.693
事實上，它可以做出任何我們現在

00:09:55.693 --> 00:10:00.525
用電腦能做的事情，只不過很慢 (笑聲)

00:10:00.525 --> 00:10:02.631
為了讓大家了解有多慢，以下是說明：

00:10:02.631 --> 00:10:06.470
它有1k的記憶體

00:10:06.470 --> 00:10:09.388
並且使用打孔卡，必需手動插進去

00:10:09.388 --> 00:10:15.148
它的速度比第一台ZX81 (家用電腦) 要慢一萬倍

00:10:15.148 --> 00:10:16.751
它確實有一個記憶體

00:10:16.751 --> 00:10:19.930
如果你想的話，你可以擴大它的存儲

00:10:19.930 --> 00:10:22.256
(笑聲) 那麼，我們今天能做什麼呢?

00:10:22.256 --> 00:10:23.864
以下是計劃

00:10:23.864 --> 00:10:26.797
在Swindon 科學博物館的檔案中

00:10:26.797 --> 00:10:28.491
有上百個計劃和 上千頁文獻

00:10:28.491 --> 00:10:31.960
是 Charles Babbage 寫的、關於這個分析引擎的筆記

00:10:31.960 --> 00:10:35.921
其中有一系列計畫被我們稱作計劃28

00:10:35.921 --> 00:10:38.075
這也是個我與 Doron Swade 所創立的一個

00:10:38.075 --> 00:10:40.809
慈善機構的名字。Doron Swade 是科學博物館中

00:10:40.809 --> 00:10:43.048
管理電腦的成員，也是起草了這個計劃

00:10:43.048 --> 00:10:44.478
要建造出一個不一樣引擎的人

00:10:44.478 --> 00:10:47.036
我們的計劃就是把它做出來

00:10:47.036 --> 00:10:50.902
就在肯辛頓南部，我們會做出這個分析引擎

00:10:50.902 --> 00:10:52.904
這個工程分成很多部分

00:10:52.904 --> 00:10:55.424
其中一部分就是掃描 Babbage 的文獻

00:10:55.424 --> 00:10:57.346
這部分已經完成，而正在進行的第二部份

00:10:57.346 --> 00:11:00.456
則是研讀所有計劃然後決定要建造什麼

00:11:00.456 --> 00:11:04.900
第三部分是一個模擬那機器的電腦糢擬系統

00:11:04.900 --> 00:11:07.823
最後一部份，就是在博物館中把機器做出來

00:11:07.823 --> 00:11:10.399
當它完成時，你就會真正理解電腦是怎麼工作的

00:11:10.399 --> 00:11:12.233
因為你就不再只是盯著面前一個極小的晶片

00:11:12.233 --> 00:11:14.843
而是可以看看這個巨大的東西然後說：

00:11:14.843 --> 00:11:18.178
「阿，我看到記憶體在運作、CPU在運作、

00:11:18.178 --> 00:11:22.045
我聽見它運作的聲響。我說不定還聞的到！」 (笑聲)

00:11:22.045 --> 00:11:24.644
但在這之間呢，我們會做一個糢擬

00:11:24.644 --> 00:11:26.401
Babbage 自己寫到：

00:11:26.401 --> 00:11:28.019
一旦分析引擎真的被製造出來後

00:11:28.019 --> 00:11:31.723
它一定會對於未來的科學有所帮助

00:11:31.723 --> 00:11:33.568
當然，他從沒有成功做出來，因為他總是

00:11:33.568 --> 00:11:35.650
在他的新計劃上浪費時間，但當這東西真的

00:11:35.650 --> 00:11:39.160
在1940年代被做出來時，一切都改變了

00:11:39.160 --> 00:11:40.983
現在，我讓各位稍微看看它

00:11:40.983 --> 00:11:43.616
運作的樣子，這影片會展示出

00:11:43.616 --> 00:11:48.210
局部的CPU運作的機械原理

00:11:51.210 --> 00:11:54.209
這是三組齒輪

00:11:54.209 --> 00:11:57.031
它準備做加法。這是加法的運作原理

00:11:57.031 --> 00:11:59.688
如此一來，你可以想像這個巨大的機器

00:11:59.688 --> 00:12:00.847
因此呢，給我五年時間

00:12:00.847 --> 00:12:03.191
在2030之前，我們將會做出這個機器

00:12:03.191 --> 00:12:06.161
謝謝各位。 (鼓掌)

