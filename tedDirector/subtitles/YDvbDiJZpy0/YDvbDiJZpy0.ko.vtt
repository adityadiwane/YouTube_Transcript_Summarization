WEBVTT
Kind: captions
Language: ko

00:00:00.000 --> 00:00:07.000
번역: Davin Kang
검토: hansom Lee

00:00:12.760 --> 00:00:15.735
마이크로소프트 엑셀 같은
전자 스프레드시트를

00:00:15.760 --> 00:00:17.240
써본 분 계신가요?

00:00:18.240 --> 00:00:19.496
좋아요.

00:00:19.520 --> 00:00:24.096
자 그럼, 스프레드시트를 손으로 쓰며
사업을 운영하시는 분 계신가요?

00:00:24.120 --> 00:00:27.910
저희 아버지께서 필라델피아의
작은 인쇄소를 운영할 때처럼요.

00:00:28.160 --> 00:00:29.800
훨씬 적네요.

00:00:29.920 --> 00:00:33.220
그렇죠. 저 방법은 수백 년 동안
사용해왔던 방식입니다.

00:00:33.480 --> 00:00:36.496
1978년 초, 저는 새로운 
아이디어를 구상하고 있었고

00:00:36.520 --> 00:00:39.350
결국 그 결과로 개발한 것이
"비지캘크(VisiCalc)"입니다.

00:00:39.480 --> 00:00:41.136
그 다음해, 비지캘크(VisiCalc)는

00:00:41.160 --> 00:00:45.129
애플 2라는 개인 컴퓨터에 
탑재되어 운영되었죠.

00:00:45.240 --> 00:00:49.296
그로부터 6년이 지난 뒤에 
모든 것이 바뀌었고

00:00:49.320 --> 00:00:51.496
월스트리트 저널은 비지캘크가 무엇이고

00:00:51.520 --> 00:00:54.800
심지어 어디에 사용하는지에 대한 
기사를 실을 정도가 되었습니다.

00:00:55.760 --> 00:00:58.720
1990년에 스티브 잡스는 
이렇게 말했어요.

00:00:59.160 --> 00:01:02.400
"스프레드시트가 산업의 
발전을 가속시켰습니다."

00:01:02.880 --> 00:01:06.800
"비지캘크는 애플의 그 어떤 사업보다도
큰 성공을 가져다 주었습니다."

00:01:07.440 --> 00:01:09.590
이런 개인적 의견도 언급했습니다.

00:01:09.600 --> 00:01:12.330
"비지캘크가 다른 컴퓨터의
프로그램으로 쓰였더라면

00:01:12.330 --> 00:01:15.280
지금 다른 사람과 인터뷰를
하고 있겠죠." 라고요.

00:01:15.360 --> 00:01:21.396
비지캘크는 업무용 컴퓨터를
위한 도구였던 셈이죠.

00:01:21.760 --> 00:01:23.470
어떻게 그런 일이 가능했을까요?

00:01:23.680 --> 00:01:27.170
비지캘크는 무엇이며, 완성하기까지
제가 어떤 일들을 겪었을까요?

00:01:27.920 --> 00:01:33.256
제가 처음 프로그램을 배운 건
1966년, 제가 15살 때였습니다.

00:01:33.280 --> 00:01:36.120
이 사진을 찍은 지 겨우 2달 뒤였죠.

00:01:36.200 --> 00:01:39.160
이때는 소수의 고등학생들만 
컴퓨터를 접할 수 있었습니다.

00:01:39.560 --> 00:01:43.056
하지만 운과 저의 지독한 끈기 덕분에

00:01:43.080 --> 00:01:46.070
저는 도시에서 컴퓨터를 접할 수
있는 기회를 갖게 되었습니다.

00:01:46.200 --> 00:01:51.080
우드스탁에서 살고 있던 저는 
대학 진학을 위해 MIT로 갔고

00:01:51.520 --> 00:01:55.280
돈을 벌기 위해 멀틱스(Multics)
개발 프로젝트에 참여했습니다.

00:01:55.330 --> 00:02:00.336
멀틱스는 선구적이라 할만한
상호 시분할 운영 체제였습니다.

00:02:00.360 --> 00:02:03.536
리눅스 혹은 유닉스 운영 체제에 
대해 들어본 적 있으신가요?

00:02:03.560 --> 00:02:05.250
그 프로그램들은 
멀틱스로부터 나왔습니다.

00:02:05.320 --> 00:02:07.616
제가 참여한 멀틱스 버전은

00:02:07.640 --> 00:02:11.456
해석기 컴퓨터 프로그래밍 언어로서

00:02:11.480 --> 00:02:13.936
컴퓨터를 모르는 분야의 사람들이

00:02:13.960 --> 00:02:17.490
컴퓨터 단말기만 있으면 계산을 
할 수 있도록 하는 것이었습니다.

00:02:17.560 --> 00:02:19.816
MIT를 졸업한 뒤에는

00:02:19.840 --> 00:02:23.190
디지털 이큅먼트 코퍼레이션(DEC)에 
들어가서 일을 시작했습니다.

00:02:23.320 --> 00:02:24.860
DEC에서는

00:02:24.860 --> 00:02:29.700
전자 조판이라는 새로운 분야의 
소프트웨어 개발에 참여했죠.

00:02:29.800 --> 00:02:33.870
그 덕에 신문 기자들이 
타자기를 사용하는 대신에

00:02:33.870 --> 00:02:35.880
컴퓨터 단말기로 바꿀 수 있었습니다.

00:02:35.880 --> 00:02:37.096
저는 소프트웨어를 개발했고

00:02:37.120 --> 00:02:40.816
캔자스 시티 스타 신문사 등의
현장을 찾아다니며

00:02:40.840 --> 00:02:43.256
사용자 교육을 하거나 
반응을 듣기도 했습니다.

00:02:43.280 --> 00:02:45.136
이것은 현장 경험이었고

00:02:45.160 --> 00:02:49.190
MIT의 실험실에서 경험했던 
것과는 사뭇 달랐습니다.

00:02:49.880 --> 00:02:56.126
그 후, 저는 DEC에서 최초의 워드 
프로세서 개발 책임을 맡았습니다.

00:02:56.126 --> 00:02:57.320
또 다른 새로운 분야였죠.

00:02:57.720 --> 00:02:59.660
전자 조판의 경우와 마찬가지로

00:02:59.660 --> 00:03:05.500
컴퓨터를 모르는 사람도 친숙하고 
효율적으로 사용할 수 있는 

00:03:05.500 --> 00:03:07.980
사용자 환경을 만드는 
것이 중요했습니다.

00:03:08.360 --> 00:03:09.946
DEC을 나온 후에는 

00:03:09.946 --> 00:03:15.160
패스트푸드 업계에서 사용하는 
마이크로프로세서 기반의 

00:03:15.160 --> 00:03:19.360
전자금전 등록기를 만드는 
작은 회사에 들어갔습니다.

00:03:19.360 --> 00:03:23.056
그러나 저는 항상 친구 밥 프랭크스톤과
함께 회사를 시작하고 싶었습니다.

00:03:23.080 --> 00:03:25.456
MIT 멀틱스 프로젝트에서 
만났던 친구죠.

00:03:25.480 --> 00:03:29.176
그래서 저는 사업에 대한 것을 배우기
위해 학교로 돌아가기로 결심했죠.

00:03:29.200 --> 00:03:31.976
그래서 1977년 가을에

00:03:32.000 --> 00:03:35.170
하버드 경영대학원의 
MBA 과정에 입학했습니다.

00:03:35.840 --> 00:03:38.350
저는 컴퓨터 프로그래밍에 
대한 배경 지식을 가진

00:03:38.350 --> 00:03:41.540
몇 안 되는 학생 중 한 명 이었죠.

00:03:42.080 --> 00:03:44.910
졸업 사진의 앞 줄에 있는 
사람이 바로 저예요.

00:03:44.910 --> 00:03:45.980
(웃음)

00:03:45.980 --> 00:03:48.936
그때, 하버드에서 우리는 
사례 연구를 통해서 공부했습니다.

00:03:48.960 --> 00:03:50.896
하루에 약 3건 정도 다루었죠.

00:03:50.920 --> 00:03:56.640
사례는 특정 비즈니스 상황을 설명하는
수십여 쪽의 자료로 구성됩니다.

00:03:57.600 --> 00:04:02.176
거기에는 근거 자료들이 담겨 있었고,
그 근거 자료들은 종종 단어와 숫자들을

00:04:02.200 --> 00:04:05.360
포함하고 있어 특정 상황을 
설명하는 지표가 되었습니다.

00:04:05.840 --> 00:04:07.776
그 내용은 모두 약간씩 다릅니다.

00:04:07.800 --> 00:04:09.016
이건 제 숙제입니다.

00:04:09.040 --> 00:04:12.216
다시 말하지만, 숫자와 단어가 
의미있는 방식으로 배치되어 있죠.

00:04:12.240 --> 00:04:16.320
계산이 많았죠. 우리는 거의
계산기나 다름없었습니다.

00:04:16.720 --> 00:04:18.600
사실, 이건 제가 사용한 계산기인데요.

00:04:20.200 --> 00:04:22.976
할로윈에 저는 계산기 옷을 입었어요.

00:04:23.000 --> 00:04:24.440
(웃음)

00:04:25.785 --> 00:04:27.350
매 수업시간 시작마다

00:04:27.350 --> 00:04:30.829
교수는 학생 중 한명에게 
사례에 대한 발표를 시켰습니다.

00:04:31.079 --> 00:04:33.856
학생들은 무슨 일이 일어나고 
있었는지 설명해야 했고

00:04:33.880 --> 00:04:40.146
수업시간에 교수가 칠판에 쓴 
많은 정보들을 받아써야 했습니다.

00:04:40.169 --> 00:04:42.096
그리고 함께 토론을 했죠.

00:04:42.120 --> 00:04:46.576
정말로 좌절했던 일 중 하나는
숙제를 모두 다 끝냈는데

00:04:46.600 --> 00:04:49.686
다음 날, 단 하나의 숫자를 
잘못 입력하는 바람에

00:04:49.686 --> 00:04:51.856
다른 숫자들까지 전부 
틀렸음을 알았을 때였습니다.

00:04:52.200 --> 00:04:53.976
그러면 수업에 들어갈 수도 없죠.

00:04:54.000 --> 00:04:56.240
그러면 출석 점수에서 감점을 받습니다.

00:04:57.320 --> 00:05:02.460
그래서 저는 87명의 학생들 틈에서 
자주 공상하며 수업시간을 보냈습니다.

00:05:03.280 --> 00:05:07.620
당시 대부분의 프로그래머들은
중앙 컴퓨터를 개발했는데

00:05:07.620 --> 00:05:13.496
예를 들면 재고, 급여 대장, 
급여 청구 시스템 같은 것들을 만들었죠.

00:05:13.520 --> 00:05:16.016
그러나 저는 상호작용 워드 프로세싱과

00:05:16.040 --> 00:05:18.136
주문제작 개인용 계산 프로그램을 
개발하고 있었습니다.

00:05:18.160 --> 00:05:22.440
저는 종이 출력과 천공 카드 대신에

00:05:22.880 --> 00:05:25.656
마법의 칠판을 상상하고 있었어요.

00:05:25.680 --> 00:05:29.056
숫자 하나를 지우고 새로 쓰면

00:05:29.080 --> 00:05:31.936
다른 모든 숫자들이 자동으로 
바뀌는 그런 마법의 칠판이었죠.

00:05:31.960 --> 00:05:34.470
숫자를 다루는 워드 프로세싱처럼요.

00:05:34.600 --> 00:05:39.160
저는 제 계산기 밑에 
마우스가 장착되어 있고,

00:05:39.240 --> 00:05:42.610
전투기처럼 전방 시향 장치가
있다고 상상했습니다.

00:05:42.720 --> 00:05:46.856
거기에 숫자를 입력하고, 원을 그리고
합계 버튼도 누를 수 있는 거죠.

00:05:46.880 --> 00:05:50.616
그러는 과정에서 원하는 
답을 바로 얻을 수 있습니다.

00:05:50.640 --> 00:05:54.150
이제 저는 그 상상을 
현실로 바꾸기로 했습니다.

00:05:54.640 --> 00:05:57.490
아버지는 제게 초기 형태를 
잡는 법을 가르쳐주셨습니다.

00:05:57.560 --> 00:05:59.227
아버지는 저에게 실물 모형의 
예를 보여주셨습니다.

00:05:59.227 --> 00:06:02.536
아버지가 인쇄할 책자에 들어갈 내용의 
배치를 알아내기 위한 것이었습니다.

00:06:05.120 --> 00:06:08.056
그것을 이용해서 고객들의 의견을 듣고

00:06:08.070 --> 00:06:12.220
출판 작업에 들어가기 전에 
먼저 확인을 받는 거였죠.

00:06:12.440 --> 00:06:17.536
만들려고 하는 제품을
작업단계에서 단순화함으로써

00:06:17.560 --> 00:06:20.550
핵심적인 문제를 알아내는 것이었습니다.

00:06:20.720 --> 00:06:25.120
이것은 아주 적은 비용으로 문제에
대한 해결책을 찾을 수 있는 방법이죠.

00:06:25.720 --> 00:06:28.570
그래서 저도 초기 모형을 
만들기로 했습니다.

00:06:28.760 --> 00:06:33.336
저는 하버드의 시분할 운영 시스템에
연결된 영상 단말기를 이용해서

00:06:33.360 --> 00:06:34.856
작업에 착수했습니다.

00:06:34.880 --> 00:06:38.136
가장 먼저 해결해야 할 문제는

00:06:38.160 --> 00:06:40.840
값을 어떻게 수식화해서 
나타낼 것인가였습니다.

00:06:41.280 --> 00:06:42.640
그게 무슨 의미인지 보여드리죠.

00:06:44.000 --> 00:06:46.176
여러분이 어딘가를 지정하고

00:06:46.200 --> 00:06:49.296
단어를 하나 입력하고, 또 다른 곳에
입력을 한다고 가정하겠습니다.

00:06:49.320 --> 00:06:52.844
숫자를 입력하고, 다른 숫자를 입력해서
답이 나올 부분을 지정합니다.

00:06:53.240 --> 00:06:56.456
첫번째 입력값을 가르키고 마이너스를 
누른 다음, 두번째를 가르킵니다,

00:06:56.480 --> 00:06:57.680
그러면 결과값을 얻는 거죠.

00:06:58.360 --> 00:07:01.776
문제는 어떤 수식을 입력하는가였습니다.

00:07:01.800 --> 00:07:04.420
컴퓨터는 무엇을 입력해야 
하는지 알고 있어야 하며

00:07:04.444 --> 00:07:06.136
그리고 여러분이 수식을 봤을 때

00:07:06.160 --> 00:07:09.690
화면의 어느 값을 참고했는지 
알 수 었어야 했습니다.

00:07:09.840 --> 00:07:12.736
제가 가장 먼저 해야 할 일은
그걸 프로그래밍하는 것이었죠.

00:07:12.760 --> 00:07:14.665
제일 먼저 어딘가를 지정하면

00:07:14.689 --> 00:07:17.369
컴퓨터는 그 위치의 구분된 
이름을 입력하도록 요청합니다.

00:07:18.760 --> 00:07:22.536
이 단계는 꽤 명확하고 빨라서 
굉장히 귀찮을 수 있죠.

00:07:22.560 --> 00:07:26.490
그래서 컴퓨터는 자동으로 이름을 
만들어 내부에 넣어야 합니다.

00:07:26.600 --> 00:07:30.960
그리고 저는 왜 내가 만드는대로 
정렬되지 않을까라고 생각했죠.

00:07:31.480 --> 00:07:33.976
그래서 값1, 값2로 지정하는 
것으로 시도해보았습니다.

00:07:34.000 --> 00:07:36.762
만약 더 많은 값을 갖고 있었다면, 
그 값들이 어디에 위치하였었는지

00:07:36.786 --> 00:07:39.296
기억하지 못하게 될 것을
바로 깨닫게 되었죠 .

00:07:39.320 --> 00:07:44.616
그렇다면 값을 아무데나 입력하지 않고

00:07:44.640 --> 00:07:46.690
범위를 제한하면 되지 않을까 생각했죠.

00:07:46.720 --> 00:07:48.936
그러면 하나의 칸을 지정하면

00:07:48.960 --> 00:07:51.680
컴퓨터가 그 칸의 행과 열을 
이름으로 인식하는 것입니다.

00:07:52.640 --> 00:07:58.816
그리고 마치 지도처럼 위에는 가로로 
ABC로 하고, 세로로 숫자를 지정해서

00:07:58.840 --> 00:08:01.640
수식에서 B7의 값을 보면

00:08:01.760 --> 00:08:04.460
정확히 화면 어디에 
있는지 알 수 있습니다.

00:08:04.640 --> 00:08:08.880
그리고, 직접 수식을 입력하더라도
무엇을 해야 할지 알 수 있죠.

00:08:09.440 --> 00:08:12.520
범위를 제한했더니 제 문제를 
해결하는 데 도움이 됐습니다.

00:08:13.200 --> 00:08:18.800
새로운 기능도 쓸 수 있게 되었죠.
칸의 범위를 잡는 기능 같은 거죠.

00:08:19.360 --> 00:08:20.936
그렇다고 너무 제한적이지는 않았습니다.

00:08:20.960 --> 00:08:25.280
여전히 어떤 값, 어떤 수식이라도 
아무 칸에나 넣을 수 있습니다.

00:08:26.120 --> 00:08:29.960
40년이 지난 오늘날에도 
사용하고 있는 방식이죠.

00:08:31.109 --> 00:08:34.776
제 친구 밥과 저는 함께 
프로그램을 개발하기로 했습니다.

00:08:34.800 --> 00:08:39.216
저는 프로그램의 구체적인 작동 
방법을 알아내기 위해 더 공부했죠.

00:08:39.240 --> 00:08:42.496
저는 요약 카드를 작성해서
문서화를 시켰습니다.

00:08:42.520 --> 00:08:47.296
이 카드는 또한 제가 일반 사람들에게
제가 정의한 사용자 인터페이스를

00:08:47.320 --> 00:08:50.799
간결하고 더 명확하게 
설명할 수 있게 해주었습니다.

00:08:51.520 --> 00:08:56.936
밥은 매사추세츠주 알링턴의 
임대 아파트 다락방에서 일했습니다.

00:08:56.960 --> 00:08:59.260
이 사진이 다락방의 내부입니다.

00:09:00.240 --> 00:09:03.016
밥은 MIT 멀틱스 시스템에서 
이 같은 단말기를 위한

00:09:03.040 --> 00:09:05.760
컴퓨터 코드를 짜는 데에
몰두하고 있었습니다.

00:09:06.400 --> 00:09:09.896
그래서 그는 빌린 애플2 컴퓨터와 
전화선에 연결된 음향 결합기를 이용해서

00:09:09.920 --> 00:09:13.176
테스트 버전을 내려받은 뒤에

00:09:13.200 --> 00:09:14.820
그걸로 테스트를 진행했습니다.

00:09:14.920 --> 00:09:19.640
이러한 테스트 중 하나의 사례인
"펩시 챌린지"에 관한 사례입니다.

00:09:20.720 --> 00:09:23.840
인쇄기가 아직 작동하지 않아
저는 모든 것을 복사해야 했습니다.

00:09:24.480 --> 00:09:26.896
저장 기능이 없어서 
매번 수식이 깨질때마다

00:09:26.920 --> 00:09:29.920
모든 수식을 다시 입력해야 했죠.

00:09:30.240 --> 00:09:34.216
다음날 수업에서 저는 
사례에 대한 발표를 했죠.

00:09:34.240 --> 00:09:37.816
저는 5년치를 예상해서 
여러 시나리오를 만들었습니다.

00:09:37.840 --> 00:09:42.000
저는 이 사례의 우등생이었습니다.
비지캘크가 한 몫을 했죠.

00:09:42.160 --> 00:09:45.320
교수님이 제게 물었습니다.
"이걸 어떻게 한 건가?"

00:09:45.469 --> 00:09:48.136
글쎄요, 저는 그 비밀에 대해서 
이야기하고 싶지 않았어요.

00:09:48.160 --> 00:09:49.680
(웃음)

00:09:50.150 --> 00:09:51.180
그래서 이렇게 말했죠.

00:09:51.180 --> 00:09:53.720
"이것을 가져다가 이것을 더하고 
이것을 곱하여 이것을 뺐습니다."

00:09:53.720 --> 00:09:56.296
교수님이 말했죠.
"음, 어째서 비율을 사용하지 않고?"

00:09:56.320 --> 00:09:59.336
제가 대답했죠. "하! 비율--
비율은 정확하지 않은 걸요!"

00:09:59.360 --> 00:10:01.936
"나눗셈은 아직 작동하지 않아요."
이 말은 하지 않았습니다.

00:10:01.960 --> 00:10:05.056
(웃음)

00:10:05.080 --> 00:10:08.936
결국, 그럼에도 우리는 
비지캘크를 완성해서

00:10:08.960 --> 00:10:10.800
그런대로 대중에게 보여줄 수 
있을 정도는 되었습니다.

00:10:11.440 --> 00:10:13.416
저희 아버지는 홍보 자료로
사용할 수 있도록

00:10:13.440 --> 00:10:15.440
요약 카드를 인쇄해주셨죠.

00:10:16.280 --> 00:10:22.056
1979년 6월, 우리의 발명품 
비지캘크를 세상에 발표했습니다.

00:10:22.080 --> 00:10:26.200
뉴욕에서 개최된 미국 컴퓨터 
학회의 작은 부스에서 말이죠.

00:10:26.800 --> 00:10:30.960
뉴욕 타임즈에 이 확회와 관련된 
재미있는 기사가 있었습니다.

00:10:31.480 --> 00:10:33.936
"이 기계의 행동은 
마치 종교 의식같습니다.

00:10:33.960 --> 00:10:36.761
신자들이 모여 있는 듯이
콜로세움이라는 방에 화가들이 모여

00:10:36.761 --> 00:10:39.435
판테온 신전에 뭔가를 
조심스럽게 새겨넣고 있습니다.

00:10:39.435 --> 00:10:41.695
노란 바탕에 검은 글씨로
'VISICALC'라고 말입니다.

00:10:41.695 --> 00:10:43.496
"비지캘크 만세!"

00:10:43.520 --> 00:10:47.096
(헉) 뉴욕타임즈 왈, 
"비지컬크 만세."라네요

00:10:47.120 --> 00:10:48.616
(웃음)

00:10:48.640 --> 00:10:55.096
2년 동안 인기있는 비지니스 언론사들이
전자 스프레드시트에 대해 언급한 것은 

00:10:55.096 --> 00:10:56.816
이것이 마지막이었습니다.

00:10:56.840 --> 00:10:58.976
대부분은 그게 뭔지 알지도 못했지만

00:10:59.000 --> 00:11:00.200
아는 사람들도 있었습니다.

00:11:00.920 --> 00:11:05.120
1979 년 10 월, 우리는 
비지캘크를 출하했습니다.

00:11:05.880 --> 00:11:08.696
비지캘크는 보시는 것처럼 
제품 포장되어 있었습니다.

00:11:08.720 --> 00:11:11.200
그리고 이렇게 애플 2 컴퓨터에서 
사용하는 것으로 되어 있습니다.

00:11:12.000 --> 00:11:13.960
그리고 나머지도, 흔히 말하듯 
역사에 남겨져 있습니다.

00:11:14.360 --> 00:11:16.456
지금 이 이야기보다 훨씬 더 
어마마한 이야기들이 있어요.

00:11:16.480 --> 00:11:18.536
하지만 그 이야기들은 
다음을 기약하겠습니다.

00:11:18.560 --> 00:11:20.800
그렇지만 한가지, 하버드는 
기억하고 있습니다.

00:11:21.400 --> 00:11:22.600
여기가 그때 그 교실입니다.

00:11:23.240 --> 00:11:26.680
이 곳에서 일어난 일을 기념하기
위해 기념판을 두었습니다.

00:11:27.640 --> 00:11:30.040
(박수)

00:11:35.740 --> 00:11:39.336
그런데 이것이 한가지 
상기시켜 주는 것이 있습니다.

00:11:39.360 --> 00:11:44.856
여러분도 각자의 배경, 능력, 바람을
받아들여야 한다는 사실입니다.

00:11:44.880 --> 00:11:50.136
기본 모형을 제작하면 주요 문제를 
발견하고 해결할 수 있습니다

00:11:50.160 --> 00:11:52.950
이를 통해, 세상을 
바꿀 수 있을 거예요.

00:11:53.040 --> 00:11:54.256
감사합니다.

00:11:54.280 --> 00:11:58.880
(박수)

