WEBVTT
Kind: captions
Language: ja

00:00:00.000 --> 00:00:07.000
翻訳: Yasushi Aoki
校正: Eriko T

00:00:12.680 --> 00:00:15.865
Excelのような表計算ソフトを
使ったことのある人は

00:00:15.865 --> 00:00:17.660
どれくらいいますか？

00:00:18.150 --> 00:00:19.496
大勢ですね

00:00:19.520 --> 00:00:24.466
では フィラデルフィアで小さな印刷業を
営んでいた私の父のように

00:00:24.466 --> 00:00:27.940
会社の簿記を
手計算でやっているという人は？

00:00:28.160 --> 00:00:29.620
ずっと少ない

00:00:29.920 --> 00:00:33.300
それは何百年もの間 
ずっと行われていた方法です

00:00:33.480 --> 00:00:35.110
1978年の初めに 私は

00:00:35.110 --> 00:00:39.440
やがてVisiCalcとなるものの
アイデアに取り組み始めました

00:00:39.480 --> 00:00:40.810
翌年それは

00:00:40.810 --> 00:00:45.219
新製品だったApple II パーソナル・
コンピューター用に 売り出されました

00:00:45.240 --> 00:00:48.740
その後の６年の間に
大きな変化があったことは

00:00:48.740 --> 00:00:51.696
誰もがVisiCalc を知っており 
たぶん使ってもいると

00:00:51.696 --> 00:00:55.710
ウォールストリート・ジャーナル紙が社説で
想定していたことを見ても分かるでしょう

00:00:55.710 --> 00:00:59.030
スティーブ・ジョブズは
1990年のインタビューで言っています

00:00:59.040 --> 00:01:02.710
「表計算ソフトが
PC業界を牽引した」

00:01:02.740 --> 00:01:06.920
「VisiCalcは他の何よりも
Appleの成功に貢献した」

00:01:06.920 --> 00:01:09.550
彼はより個人的なコメントとして
こうも言っています

00:01:09.550 --> 00:01:12.460
「もしVisiCalcが他のコンピューター向けに
書かれていたなら

00:01:12.460 --> 00:01:15.620
あなたが今インタビューしている相手は
違っていたはずだ」

00:01:15.620 --> 00:01:21.640
VisiCalcは会社でパソコンが
使われるようになる きっかけになったのです

00:01:21.640 --> 00:01:23.610
それはどうやって
生まれたのか？

00:01:23.610 --> 00:01:27.660
それは何だったのか？
どのようにして私はそれを作ることになったのか？

00:01:27.920 --> 00:01:33.256
私がプログラミングを学び始めたのは
1966年 15歳の時で

00:01:33.280 --> 00:01:35.930
この写真を撮った
２ヶ月後のことです

00:01:35.930 --> 00:01:39.630
当時はコンピューターに触れられる
高校生なんて そういませんでしたが

00:01:39.630 --> 00:01:43.030
私は幸運と
ものすごい根気強さのお陰で

00:01:43.030 --> 00:01:46.180
地元のコンピューターの利用時間を
手にできました

00:01:46.200 --> 00:01:51.460
ウッドストックのぬかるみで寝た後 
MITに進学し

00:01:51.480 --> 00:01:55.310
バイトでMulticsプロジェクトの
仕事をしました

00:01:55.320 --> 00:02:00.280
Multicsは対話的タイムシェアリング
システムの草分けでした

00:02:00.280 --> 00:02:03.460
LinuxとかUnixというのを
聞いたことがあるかもしれませんが

00:02:03.460 --> 00:02:05.350
あれはMulticsから
生まれたものです

00:02:05.350 --> 00:02:07.616
私はMulticsのための

00:02:07.640 --> 00:02:11.456
インタプリタ言語に
取り組みました

00:02:11.480 --> 00:02:13.936
端末の前に
座って計算を行う

00:02:13.960 --> 00:02:17.530
コンピューターが専門でない
人たちが使うものです

00:02:17.560 --> 00:02:19.816
MITを卒業すると

00:02:19.840 --> 00:02:22.680
DECに就職しました

00:02:23.320 --> 00:02:26.496
DECでは 電子化組版という

00:02:26.520 --> 00:02:29.780
新しい分野の
ソフトウェアを開発し

00:02:29.800 --> 00:02:32.640
新聞社が 記者の使う
タイプライターを

00:02:32.640 --> 00:02:35.850
コンピューターに置き換える
手助けをしました

00:02:35.870 --> 00:02:37.206
ソフトウェアができたら

00:02:37.206 --> 00:02:40.550
カンザスシティ・スター紙のような
現場に赴いて

00:02:40.550 --> 00:02:43.356
ユーザーのトレーニングをし
フィードバックを集めました

00:02:43.356 --> 00:02:45.136
この時の実体験は

00:02:45.160 --> 00:02:49.000
MITの研究室で見てきたのとは
随分違っていました

00:02:49.880 --> 00:02:53.306
その後 私はDEC初の
ワープロソフト開発で

00:02:53.306 --> 00:02:57.700
プロジェクトリーダーになりました
また新分野です

00:02:57.720 --> 00:03:00.770
組版の時と同様 
重要だったのは

00:03:00.770 --> 00:03:07.780
コンピューターに詳しくない人たちが 自然に効率良く
使えるユーザーインタフェースを作ることでした

00:03:08.360 --> 00:03:12.476
DECの後 マイクロプロセッサを使った
ファストフード業界向けの

00:03:12.476 --> 00:03:18.480
電子キャッシュレジスターを作る
小さな会社で働きました

00:03:19.220 --> 00:03:23.020
でも私は Multicsプロジェクトで
出会った友人のボブ・フランクストンと

00:03:23.020 --> 00:03:25.440
一緒に会社を始めたいと
ずっと思っていたので

00:03:25.440 --> 00:03:29.216
大学に戻り ビジネスについて
学べるだけ学ぶことにし

00:03:29.216 --> 00:03:31.690
1977年秋に

00:03:31.690 --> 00:03:35.680
ハーバード・ビジネス・スクールの
MBAコースに入りました

00:03:35.720 --> 00:03:39.436
そこの学生で 私のように
プログラミングの経験がある者は

00:03:39.436 --> 00:03:41.490
ごくわずかでした

00:03:41.910 --> 00:03:45.256
卒業アルバムには 
最前列に座っている私の写真があります

00:03:45.280 --> 00:03:46.250
(笑)

00:03:46.250 --> 00:03:48.900
ハーバードでは
ケーススタディを使って学びました

00:03:48.900 --> 00:03:51.186
毎回３つくらいの事例を検討します

00:03:51.186 --> 00:03:57.130
それぞれの事例は特定のビジネス状況に関する
何十ページかの記述からなっています

00:03:57.600 --> 00:03:59.990
それにはよく別紙が付いていて

00:03:59.990 --> 00:04:05.690
その想定状況に関する
資料やデータがありました

00:04:05.710 --> 00:04:07.660
それぞれが何かしら
違っていました

00:04:07.660 --> 00:04:09.376
これは私のやった宿題です

00:04:09.376 --> 00:04:12.216
筋が通るように構成された
数字や記述が並んでいます

00:04:12.240 --> 00:04:16.690
沢山の計算が必要で 
私たちはいつも電卓を手元に置いていました

00:04:16.720 --> 00:04:19.380
これが私の使っていた電卓です

00:04:20.090 --> 00:04:22.976
ハロウィーンの時も
電卓を身に付けたものです

00:04:23.000 --> 00:04:24.570
(笑)

00:04:25.785 --> 00:04:27.300
授業のはじめに

00:04:27.300 --> 00:04:30.799
先生が誰かに
事例の説明をさせます

00:04:31.079 --> 00:04:33.856
学生は状況を説明して

00:04:33.880 --> 00:04:35.710
データを読み上げ

00:04:35.710 --> 00:04:40.409
先生がそれを教室の前にある
何枚もの電動式黒板に書き取ります

00:04:40.409 --> 00:04:42.256
それからみんなで議論します

00:04:42.256 --> 00:04:45.050
すごく苛立たしかったのは

00:04:45.050 --> 00:04:49.400
宿題をすっかり済ませ 翌日授業に出ると 
計算間違いがあって

00:04:49.400 --> 00:04:52.206
自分の出した数字が
全然駄目だと気付いたときです

00:04:52.206 --> 00:04:54.256
そうなると授業であまり
発言できなくなりますが

00:04:54.256 --> 00:04:57.290
評価は授業への貢献度で
なされるのです

00:04:57.320 --> 00:05:02.670
他の87人の学生達とその教室にいて
私はよく夢想していました

00:05:03.280 --> 00:05:07.050
当時のプログラマーの多くは
メインフレームで

00:05:07.050 --> 00:05:13.440
在庫システムや 給与システムや
請求支払いシステムなんかを開発していましたが

00:05:13.440 --> 00:05:15.590
私には対話的ワープロソフトや

00:05:15.590 --> 00:05:18.336
オンデマンドの個人向けソフトの
開発経験がありました

00:05:18.336 --> 00:05:22.760
そのためプリンタ出力や
パンチカードというインタフェースではなく

00:05:22.760 --> 00:05:25.656
「魔法の黒板」を夢想していました

00:05:25.680 --> 00:05:29.056
数字を消して
新しい値を書くと

00:05:29.080 --> 00:05:31.890
他の数字が自動的に
再計算されるという

00:05:31.890 --> 00:05:34.690
数字のための
ワープロみたいなものです

00:05:34.690 --> 00:05:39.210
私がイメージしていたのは 
底がマウスのようになっている電卓と

00:05:39.240 --> 00:05:42.680
戦闘機みたいなヘッド・アップ・
ディスプレーがあって

00:05:42.720 --> 00:05:46.856
数字をタイプし まるで囲んで
合計ボタンを押すと

00:05:46.880 --> 00:05:50.616
交渉しているその場で
答えが得られるというものです

00:05:50.640 --> 00:05:54.240
その夢をどうにか
現実にしたいと思いました

00:05:54.640 --> 00:05:57.550
父は私にプロトタイピングというのを
教えてくれました

00:05:57.560 --> 00:05:59.176
冊子を印刷するとき

00:05:59.200 --> 00:06:02.536
ページ上の配置を決めるために使う
実寸大のひな形を

00:06:02.560 --> 00:06:05.096
見せてもらったことがあります

00:06:05.120 --> 00:06:08.056
顧客からフィードバックを
得るのにそれを使い

00:06:08.080 --> 00:06:12.050
OKが出たら
印刷にかけるんです

00:06:12.440 --> 00:06:17.500
作ろうとしているものを単純化した
実際に動くものを作ることで

00:06:17.500 --> 00:06:20.450
主要な問題点が
浮かび上がり

00:06:20.720 --> 00:06:25.700
そのような問題への解決策を
ずっと少ない費用で見つけられます

00:06:25.720 --> 00:06:28.720
それでプロトタイプを
作ってみることにしました

00:06:28.760 --> 00:06:33.336
ハーバード大のタイムシェアリングシステムに
接続された端末に行って

00:06:33.360 --> 00:06:34.856
取り組み始めました

00:06:34.880 --> 00:06:37.780
私がまず直面した
問題の１つは

00:06:37.780 --> 00:06:41.260
式の中の変数を
どう表現するかということでした

00:06:41.280 --> 00:06:43.150
どういうことか説明しましょう

00:06:43.820 --> 00:06:45.640
考えていたのはこうです

00:06:45.640 --> 00:06:49.436
どこか指定して言葉を書き
別のところに数字を入れ

00:06:49.436 --> 00:06:53.080
さらに別の数字を入れます
答えを出す場所を指定してから

00:06:53.080 --> 00:06:56.696
最初の数字を指し マイナスを押し 
２番目の数字を指すと

00:06:56.696 --> 00:06:58.420
結果が現れます

00:06:58.420 --> 00:07:01.650
問題は 式をどう表すか
ということです

00:07:01.650 --> 00:07:04.480
何が入るのかコンピューターに
分かるものにする必要があります

00:07:04.480 --> 00:07:06.786
そして画面のどこが
参照されているのか

00:07:06.786 --> 00:07:09.520
式を見れば分かるようにする
必要があります

00:07:09.840 --> 00:07:12.736
はじめの案は
プログラマー的なやり方で

00:07:12.760 --> 00:07:14.665
最初にどこかを指定したとき

00:07:14.689 --> 00:07:18.329
識別名をユーザーに付けさせる
というものです

00:07:18.760 --> 00:07:22.500
これは面倒くさすぎるということが
すぐに分かりました

00:07:22.500 --> 00:07:26.610
コンピューターが自動的に名前を付けて
保持しておくようにする必要があります

00:07:26.610 --> 00:07:31.450
では作られた順番で
名前を付けたらと考えました

00:07:31.480 --> 00:07:33.976
変数１ 変数２ という具合に

00:07:34.000 --> 00:07:35.556
しかし変数が何個もあると

00:07:35.556 --> 00:07:39.140
どこにどれがあるのか
覚えられなくなってしまいます

00:07:39.140 --> 00:07:44.120
それなら 変数をどこにでも
置けるようにする代わりに

00:07:44.120 --> 00:07:46.680
碁盤目上に制限したら
どうかと考えました

00:07:46.720 --> 00:07:48.936
マス目を指定したとき

00:07:48.960 --> 00:07:52.420
その行と列を
名前にすることができます

00:07:52.640 --> 00:07:58.640
地図みたいに 上にABC 
横に123と書いておけば

00:07:58.640 --> 00:08:01.520
式の中に B7 とあったとき

00:08:01.520 --> 00:08:04.610
画面上のどこを指すのか
一目瞭然です

00:08:04.640 --> 00:08:09.420
式を自分で書く場合も 
どうすればいいか すぐわかります

00:08:09.440 --> 00:08:13.180
ユーザーを碁盤目上に制限することで 
私の問題は解決しました

00:08:13.200 --> 00:08:18.990
同時に 一続きのマス目を指定できるといった 
新しい可能性も開けました

00:08:18.990 --> 00:08:21.426
それでいて この制限は
きついものではなく

00:08:21.426 --> 00:08:26.130
ユーザーは好きな値や式を 
どのマス目にでも入れることができます

00:08:26.130 --> 00:08:30.730
そしてこれは40年後の今も
そのまま使われている方法です

00:08:31.109 --> 00:08:34.710
友人のボブと私はこの製品を
一緒に作ることにしました

00:08:34.710 --> 00:08:39.276
そのプログラムがどう振る舞うべきか
見極めるため 私はさらに取り組みました

00:08:39.276 --> 00:08:42.496
ドキュメントとなるものとして
説明シートを書きましたが

00:08:42.520 --> 00:08:45.530
それはまた 作っている
ユーザーインタフェースが

00:08:45.530 --> 00:08:51.369
普通の人に対し簡潔明瞭に
説明できるものにする上でも役立ちました

00:08:51.400 --> 00:08:56.900
ボブはマサチューセッツ州アーリントンに借りた
アパートの屋根裏で作業していました

00:08:56.900 --> 00:08:59.410
これがその屋根裏部屋です

00:09:00.110 --> 00:09:03.366
ボブがMITのMulticsシステムの
利用時間を購入して

00:09:03.366 --> 00:09:06.420
このような端末を使って
プログラムを書きました

00:09:06.420 --> 00:09:09.530
それから電話回線と
音響カプラを使い

00:09:09.530 --> 00:09:13.070
借用したApple II に
テスト版をダウンロードして

00:09:13.070 --> 00:09:14.910
テストを行います

00:09:14.920 --> 00:09:20.160
テストの一環として
「ペプシチャレンジ」の宿題を使いました

00:09:20.540 --> 00:09:24.360
印刷機能は まだできてなかったので 
全部手で書き写す必要がありました

00:09:24.360 --> 00:09:27.736
保存機能は まだできてなかったので 
プログラムがクラッシュするたびに

00:09:27.736 --> 00:09:30.400
式をすべて入力し直さなければ
なりませんでした

00:09:30.400 --> 00:09:34.286
翌る日 授業で私は手を挙げて 
指されると事例の解説をしました

00:09:34.286 --> 00:09:37.816
５年の予測をし 
あらゆる種類のシナリオを考察しました

00:09:37.840 --> 00:09:42.130
この事例でAの評価をもらいました
VisiCalc はすでに役立っていたのです

00:09:42.160 --> 00:09:45.349
先生に「いったいどうやったの？」
と聞かれましたが

00:09:45.349 --> 00:09:48.576
我々の極秘プログラムのことを
明かしたくはなかったので —

00:09:48.576 --> 00:09:49.680
(笑)

00:09:50.200 --> 00:09:51.950
「これに これを加えて

00:09:51.950 --> 00:09:54.130
これを掛けて これを引きました」
と言うと

00:09:54.130 --> 00:09:56.290
「比を使わなかったのはどうして？」
と聞くので

00:09:56.290 --> 00:09:59.260
「比なんか正確じゃありませんよ！」
と答えましたが

00:09:59.260 --> 00:10:02.536
実際は割り算がまだ
できるようになってなかったんです

00:10:02.536 --> 00:10:05.056
(笑)

00:10:05.080 --> 00:10:06.850
そうこうするうちに

00:10:06.850 --> 00:10:11.210
VisiCalcは お披露目できるまで
出来上がりました

00:10:11.320 --> 00:10:14.056
マーケティングに使える
説明シートのサンプルを

00:10:14.056 --> 00:10:16.000
父が刷ってくれました

00:10:16.280 --> 00:10:21.970
1979年6月に発売元が
VisiCalcの告知をしました

00:10:21.970 --> 00:10:26.870
ニューヨークで行われた巨大なナショナル・コンピューター・
カンファレンスの 小さなブースでのことです

00:10:26.870 --> 00:10:31.420
ニューヨークタイムズ紙が このカンファレンスについて
ユーモラスな記事を書いています

00:10:31.420 --> 00:10:33.936
「機械が宗教儀式に
見えることを行う —

00:10:33.960 --> 00:10:35.341
信者たちが集まる中

00:10:35.365 --> 00:10:38.461
コロシアムの画家たちが
殿堂に付け加える

00:10:38.485 --> 00:10:41.656
黄色地に黒で大きく書かれた
『VISICALC』の文字を

00:10:41.680 --> 00:10:43.496
VISICALCを賛美せよ！」

00:10:43.520 --> 00:10:47.096
(おおっ) ニューヨークタイムズ曰く
「VISICALCを賛美せよ」

00:10:47.120 --> 00:10:48.616
(笑)

00:10:48.640 --> 00:10:51.570
その後２年くらいは

00:10:51.570 --> 00:10:56.740
大手のビジネス誌が電子表計算ソフトに
言及することは ありませんでした

00:10:56.740 --> 00:10:59.106
ほとんどの人はまだ
理解していなかったのです

00:10:59.106 --> 00:11:00.910
理解した人もいましたが

00:11:00.920 --> 00:11:05.590
1979年10月に
VisiCalcが発売されました

00:11:05.880 --> 00:11:08.696
こんなパッケージに入っていて

00:11:08.720 --> 00:11:12.030
Apple II の上で
こんな感じに動作しました

00:11:12.030 --> 00:11:14.280
その後のことは
皆の知る通りです

00:11:14.280 --> 00:11:16.626
まだまだ話し足りない
ことがありますが

00:11:16.626 --> 00:11:18.536
それはまたの機会にしましょう

00:11:18.560 --> 00:11:21.340
ただ１つだけ ハーバードが
記憶してくれていることについて

00:11:21.400 --> 00:11:23.240
これが例の教室です

00:11:23.240 --> 00:11:27.450
そこで起きたことを記念する
プレートが飾られています

00:11:27.640 --> 00:11:30.040
(拍手)

00:11:36.400 --> 00:11:39.080
同時にこれが伝えているのは

00:11:39.080 --> 00:11:44.856
皆さんもまた 自分独自の事情や
能力や要求を生かし

00:11:44.880 --> 00:11:50.136
プロトタイプを作って
重要な問題を見つけて取り組み

00:11:50.160 --> 00:11:53.030
それを通して世界を変えるように
ということです

00:11:53.040 --> 00:11:54.256
ありがとうございました

00:11:54.280 --> 00:11:58.880
(拍手)

