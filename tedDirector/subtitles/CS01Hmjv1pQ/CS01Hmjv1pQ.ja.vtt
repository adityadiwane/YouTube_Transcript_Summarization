WEBVTT
Kind: captions
Language: ja

00:00:00.000 --> 00:00:07.000
翻訳: Mitsumasa Ihara
校正: Hidetoshi Yamauchi

00:00:15.260 --> 00:00:18.260
Stuxnet コンピュータ・ワームの背後にあるアイデアは、

00:00:18.260 --> 00:00:20.260
実はかなり簡単です。

00:00:20.260 --> 00:00:23.260
我々としては、イランが爆弾を手に入れてほしくありません。

00:00:23.260 --> 00:00:26.260
核兵器を開発するためのイランの重要な資産は、

00:00:26.260 --> 00:00:30.260
Natanz ウラン濃縮施設です。

00:00:30.260 --> 00:00:32.260
ご覧の灰色のボックス、

00:00:32.260 --> 00:00:35.260
これらはリアルタイム制御システムです。

00:00:35.260 --> 00:00:38.260
もし、何とかしてこれらのシステム、

00:00:38.260 --> 00:00:41.260
駆動スピードやバルブを制御するシステムを脅かすと、

00:00:41.260 --> 00:00:44.260
実際に遠心分離機に多くの問題を

00:00:44.260 --> 00:00:46.260
引き起こすことができます。

00:00:46.260 --> 00:00:48.260
この灰色のボックスは、

00:00:48.260 --> 00:00:51.260
Windows ソフトを実行しません； まったく異なる技術です。

00:00:51.260 --> 00:00:53.260
しかし、もし何とかして

00:00:53.260 --> 00:00:56.260
巧妙な Windows ウィルスを、

00:00:56.260 --> 00:00:58.260
ノートブックに、

00:00:58.260 --> 00:01:00.260
保守エンジニアが使用するノートブックに仕組み、

00:01:00.260 --> 00:01:03.260
この灰色のボックスを構成すると、

00:01:03.260 --> 00:01:05.260
うまく行きます。

00:01:05.260 --> 00:01:08.260
これが Stuxnet の背後にある筋立てです。

00:01:08.260 --> 00:01:13.260
それで、 Windows ドロッパーから始めます。

00:01:13.260 --> 00:01:16.260
ペイロードが灰色のボックスに行き、

00:01:16.260 --> 00:01:18.260
遠心分離機にダメージを与え、

00:01:18.260 --> 00:01:20.260
イランの核計画が遅れます--

00:01:20.260 --> 00:01:22.260
任務完遂。

00:01:22.260 --> 00:01:24.260
簡単、でしょ？

00:01:24.260 --> 00:01:27.260
我々がどのように解明したかをお話ししましょう。

00:01:27.260 --> 00:01:30.260
六ヶ月前に Stuxnet に関する調査を開始したとき、

00:01:30.260 --> 00:01:33.260
こいつの目的が何なのかまったく分かりませんでした。

00:01:33.260 --> 00:01:35.260
唯一分かっていたことは、

00:01:35.260 --> 00:01:38.260
ものすごく複雑な、 Windows 側、ドロッパー側で

00:01:38.260 --> 00:01:41.260
使われた複数のゼロ・デイ脆弱性です。

00:01:41.260 --> 00:01:44.260
何かをしたいようでした、

00:01:44.260 --> 00:01:46.260
これら灰色のボックス、これらリアルタイム制御システムについて。

00:01:46.260 --> 00:01:48.260
そのため、我々の注意を引きました、

00:01:48.260 --> 00:01:50.260
研究室のプロジェクトを開始し、

00:01:50.260 --> 00:01:54.260
そこで我々の環境を Stuxnet で感染させ、

00:01:54.260 --> 00:01:56.260
こいつを検査しました。

00:01:56.260 --> 00:01:59.260
すると、まさに可笑しなことが起こりました。

00:01:59.260 --> 00:02:02.260
Stuxnet は研究用のラットのように振る舞い、

00:02:02.260 --> 00:02:05.260
我々のチーズを好まず、

00:02:05.260 --> 00:02:07.260
においを嗅ぎましたが、食べたがりませんでした。

00:02:07.260 --> 00:02:09.260
私には意味がわかりませんでした。

00:02:09.260 --> 00:02:12.260
風味の異なるチーズで実験しました後、

00:02:12.260 --> 00:02:16.260
分かりました、これは、指示された攻撃だと。

00:02:16.260 --> 00:02:18.260
完全に指示されていました。

00:02:18.260 --> 00:02:20.260
ドロッパーは灰色のボックスで、

00:02:20.260 --> 00:02:22.260
活発に徘徊しました、

00:02:22.260 --> 00:02:25.260
特有の設定構成が見つかれば、

00:02:25.260 --> 00:02:29.260
たとえ、感染しようとする実際のプログラムが、

00:02:29.260 --> 00:02:31.260
そのターゲット上で実際に稼働していても。

00:02:31.260 --> 00:02:34.260
そうでなければ、 Stuxnet は何もしません。

00:02:34.260 --> 00:02:36.260
そのため、まさに私の注意を引きました。

00:02:36.260 --> 00:02:38.260
我々はこれに取りかかり始めました、

00:02:38.260 --> 00:02:40.260
ほとんど２４時間ぶっ通しで。

00:02:40.260 --> 00:02:43.260
というのは、そのターゲットが何なのかが分からないので、

00:02:43.260 --> 00:02:45.260
可能性としては、たとえば、

00:02:45.260 --> 00:02:47.260
アメリカの発電所や、

00:02:47.260 --> 00:02:49.260
ドイツの化学工場があります。

00:02:49.260 --> 00:02:52.260
そのため、ターゲットが何かをすぐに見つけ出した方がいいでしょう。

00:02:52.260 --> 00:02:54.260
それで、攻撃コードを

00:02:54.260 --> 00:02:56.260
抽出し、逆コンパイルすると、

00:02:56.260 --> 00:02:59.260
二つのデジタル爆弾として構成されていることを発見しました--

00:02:59.260 --> 00:03:02.260
小さいやつと、大きいやつです。

00:03:02.260 --> 00:03:06.260
また、非常に専門技術的に巧まれていることが分かりました。

00:03:06.260 --> 00:03:10.260
明らかに内部情報を有する連中によって。

00:03:10.260 --> 00:03:12.260
彼らはこまごました事柄すべてを知っていました。

00:03:12.260 --> 00:03:14.260
攻撃対象について。

00:03:14.260 --> 00:03:17.260
たぶん、オペレータの靴のサイズさえ知っています。

00:03:17.260 --> 00:03:19.260
彼らはすべてを知っています。

00:03:19.260 --> 00:03:22.260
もし、Stuxnet のドロッパーが複雑でハイテクであると

00:03:22.260 --> 00:03:24.260
聞いたことがあるとしたら、

00:03:24.260 --> 00:03:26.260
教えましょう、

00:03:26.260 --> 00:03:28.260
このペイロードは、極めて高度です。

00:03:28.260 --> 00:03:30.260
我々がかつて見たことのあるもの

00:03:30.260 --> 00:03:33.260
すべてを超えています。

00:03:33.260 --> 00:03:36.260
ここに、実際の攻撃コードのサンプルをお見せします。

00:03:36.260 --> 00:03:38.260
ここで話をしているのは--

00:03:38.260 --> 00:03:41.260
およそ約15,000行のコードです。

00:03:41.260 --> 00:03:44.260
ほとんど古い型のアセンブリ言語のように見えます。

00:03:44.260 --> 00:03:46.260
どのようにして我々がこのコードの

00:03:46.260 --> 00:03:48.260
意味を理解できたかをお話しましょう。

00:03:48.260 --> 00:03:51.260
我々がまず探したのは、システム・ファンクション・コールです。

00:03:51.260 --> 00:03:53.260
これらが何をするかを知っているからです。

00:03:53.260 --> 00:03:57.260
その後、タイマーとデータ構造を探し、

00:03:57.260 --> 00:03:59.260
現実世界に関連付けようとしました、

00:03:59.260 --> 00:04:01.260
潜在的な現実世界のターゲットに。

00:04:01.260 --> 00:04:04.260
そのため、ターゲットの理論が必要です、

00:04:04.260 --> 00:04:07.260
証明したり、反証したりできる理論が必要です。

00:04:07.260 --> 00:04:09.260
ターゲットの理論を手に入れるために、

00:04:09.260 --> 00:04:11.260
念頭に置きます、

00:04:11.260 --> 00:04:13.260
絶対に本格的な破壊行為であり、

00:04:13.260 --> 00:04:15.260
価値の高いターゲットに違いなく、

00:04:15.260 --> 00:04:18.260
イランに位置する可能性が最も高いことを。

00:04:18.260 --> 00:04:22.260
なぜなら、そこで最も多くの感染が報告されていたからです。

00:04:22.260 --> 00:04:25.260
すると、そのエリアには数千もターゲットはありません。

00:04:25.260 --> 00:04:27.260
おおむね、 Bushehr 原子力発電所、

00:04:27.260 --> 00:04:29.260
Natanz 燃料濃縮プラントに

00:04:29.260 --> 00:04:31.260
落ち着きます。

00:04:31.260 --> 00:04:33.260
それで、アシスタントに言いました、

00:04:33.260 --> 00:04:36.260
「顧客の中で遠心分離機と発電所の専門家すべてのリストをくれ」と。

00:04:36.260 --> 00:04:38.260
彼らに電話をして、知恵を借りました。

00:04:38.260 --> 00:04:40.260
かれらの専門知識と、

00:04:40.260 --> 00:04:43.260
コードとデータで見つけたことを合致させるために。

00:04:43.260 --> 00:04:45.260
これは、かなりうまく行きました。

00:04:45.260 --> 00:04:47.260
それで、関連付けることができました、

00:04:47.260 --> 00:04:49.260
この小さなデジタルの弾頭と、

00:04:49.260 --> 00:04:51.260
ローター制御とを。

00:04:51.260 --> 00:04:54.260
ローターは、遠心分離機内の可動部であり、

00:04:54.260 --> 00:04:56.260
ご覧の黒い物体です。

00:04:56.260 --> 00:04:59.260
このローターの速度を操作すると、

00:04:59.260 --> 00:05:01.260
実際にローターに侵入することができ、

00:05:01.260 --> 00:05:05.260
最終的には遠心分離機を爆発させることさえできます。

00:05:05.260 --> 00:05:07.260
我々が見たのは、また

00:05:07.260 --> 00:05:09.260
その攻撃の目的を、

00:05:09.260 --> 00:05:12.260
実にゆっくりと不気味に行うことであり--

00:05:12.260 --> 00:05:14.260
明らかに、

00:05:14.260 --> 00:05:17.260
保守エンジニアを困らせて、

00:05:17.260 --> 00:05:20.260
この問題をすぐに理解できないようにしていることです。

00:05:20.260 --> 00:05:23.260
大きいデジタルの弾頭 -- これに狙いを定め、

00:05:23.260 --> 00:05:25.260
非常に詳しく、

00:05:25.260 --> 00:05:27.260
データとデータ構造を調べました。

00:05:27.260 --> 00:05:29.260
たとえば、164という数が

00:05:29.260 --> 00:05:31.260
このコードの中で実に目立っていおり；

00:05:31.260 --> 00:05:33.260
見過ごすことができません。

00:05:33.260 --> 00:05:35.260
私は科学文献を調べ始めました、

00:05:35.260 --> 00:05:37.260
こうした遠心分離機がどのように、

00:05:37.260 --> 00:05:39.260
Natanz で実際に構築されたかについて。

00:05:39.260 --> 00:05:41.260
そして、発見しました、これらは

00:05:41.260 --> 00:05:43.260
カスケードと呼ばれる形で構成されており、

00:05:43.260 --> 00:05:47.260
各カスケードは 164 の遠心分離機を保持していることを。

00:05:47.260 --> 00:05:49.260
それで分かりました、合致しました。

00:05:49.260 --> 00:05:51.260
さらに良かったのです。

00:05:51.260 --> 00:05:53.260
イランのこれらの遠心分離機は

00:05:53.260 --> 00:05:57.260
15 のいわゆるステージにさらに分割されています。

00:05:57.260 --> 00:05:59.260
攻撃コードで何を見つけたか解りますか？

00:05:59.260 --> 00:06:01.260
ほとんど同一の構造です。

00:06:01.260 --> 00:06:04.260
やはり、これも見事な合致です。

00:06:04.260 --> 00:06:07.260
我々が調べていたことについて非常に確かな確信が得られました。

00:06:07.260 --> 00:06:10.260
ここで間違わないでほしいのですが、こんなに風に行ったわけではありません。

00:06:10.260 --> 00:06:13.260
これらは、何週間にわたる

00:06:13.260 --> 00:06:16.260
まさに重労働の成果です。

00:06:16.260 --> 00:06:19.260
全くの行き止まりに入り込むことが多く、

00:06:19.260 --> 00:06:21.260
戻ってこなければなりませんでした。

00:06:21.260 --> 00:06:23.260
とにかく、理解できました、

00:06:23.260 --> 00:06:25.260
二つのデジタルの弾頭は、

00:06:25.260 --> 00:06:27.260
実際には一つの同じターゲットを、

00:06:27.260 --> 00:06:29.260
異なる角度から狙っていました。

00:06:29.260 --> 00:06:32.260
小さい弾頭は、一つのカスケードを取って、

00:06:32.260 --> 00:06:35.260
ローターを回転させ、速度を落とし、

00:06:35.260 --> 00:06:37.260
大きい弾頭は、

00:06:37.260 --> 00:06:39.260
六つのカスケードに向けて

00:06:39.260 --> 00:06:41.260
バルブを操作しています。

00:06:41.260 --> 00:06:43.260
全体で、我々は非常に確信があります、

00:06:43.260 --> 00:06:45.260
ターゲットが何かを実際に特定しました。

00:06:45.260 --> 00:06:48.260
Natanz です、Natanz だけです。

00:06:48.260 --> 00:06:50.260
そのため、心配はいりません、

00:06:50.260 --> 00:06:52.260
他のターゲットが、Stuxnet によって

00:06:52.260 --> 00:06:54.260
攻撃される可能性については。

00:06:54.260 --> 00:06:57.260
我々の見た中でかなりすごいものがあります--

00:06:57.260 --> 00:06:59.260
本当に驚きました。

00:06:59.260 --> 00:07:01.260
下にあるのは灰色のボックスで、

00:07:01.260 --> 00:07:04.260
その上に遠心分離機が見えます。

00:07:04.260 --> 00:07:06.260
こいつがするのは、

00:07:06.260 --> 00:07:09.260
センサからの入力値を盗み取るのです--

00:07:09.260 --> 00:07:11.260
例えば、圧力センサや

00:07:11.260 --> 00:07:13.260
振動センサからの入力値です--

00:07:13.260 --> 00:07:16.260
これを正規のコードに与え、

00:07:16.260 --> 00:07:18.260
このコードが攻撃中に稼働して、

00:07:18.260 --> 00:07:20.260
偽の入力データを使用します。

00:07:20.260 --> 00:07:22.260
実際のところ、この偽のデータは、

00:07:22.260 --> 00:07:25.260
Stuxnetによって予め記録されているのです。

00:07:25.260 --> 00:07:27.260
ちょうどハリウッド映画のようです、

00:07:27.260 --> 00:07:29.260
強盗の間に、

00:07:29.260 --> 00:07:32.260
監視カメラに予め記録されたビデオを送り込むのです。

00:07:32.260 --> 00:07:34.260
すごい、でしょ？

00:07:35.260 --> 00:07:37.260
このアイデアは、明らかに、

00:07:37.260 --> 00:07:40.260
制御室のオペレータを欺くだけでなく、

00:07:40.260 --> 00:07:44.260
実際、もっと危険で攻撃的です。

00:07:44.260 --> 00:07:46.260
このアイデアは、

00:07:46.260 --> 00:07:49.260
デジタルの安全装置を迂回することです。

00:07:50.260 --> 00:07:52.260
我々にはデジタルの安全装置が必要です、

00:07:52.260 --> 00:07:55.260
人間のオペレータが充分に素早く対応できない場合には。

00:07:55.260 --> 00:07:57.260
例えば、発電所において、

00:07:57.260 --> 00:08:00.260
大きな蒸気タービンの速度が上がり過ぎたとき、

00:08:00.260 --> 00:08:03.260
数ミリ秒以内に安全弁を開放しなければなりません。

00:08:03.260 --> 00:08:06.260
明らかに、これは人間のオペレータではできません。

00:08:06.260 --> 00:08:08.260
このような場合にデジタルの安全装置が必要になります。

00:08:08.260 --> 00:08:10.260
それで、侵害されると、

00:08:10.260 --> 00:08:13.260
本当に酷いことが起こる可能性があります。

00:08:13.260 --> 00:08:15.260
発電所が爆発するかもしれません。

00:08:15.260 --> 00:08:18.260
オペレータも安全装置も気付かないでしょう。

00:08:18.260 --> 00:08:20.260
ゾッとします。

00:08:20.260 --> 00:08:22.260
しかし、もっと悪いのです。

00:08:22.260 --> 00:08:25.260
これから言うことは大変重要です。

00:08:25.260 --> 00:08:27.260
考えてみてください。

00:08:27.260 --> 00:08:30.260
この攻撃は、汎用です。

00:08:30.260 --> 00:08:34.260
専用のものとは無関係です。

00:08:34.260 --> 00:08:36.260
遠心分離機とも、

00:08:36.260 --> 00:08:39.260
ウラン濃縮とも。

00:08:39.260 --> 00:08:42.260
そのため、なんにでも働きます、例えば、

00:08:42.260 --> 00:08:44.260
発電所や

00:08:44.260 --> 00:08:47.260
自動車工場でも。

00:08:47.260 --> 00:08:49.260
汎用なのです。

00:08:49.260 --> 00:08:51.260
--攻撃する者としては--何ら

00:08:51.260 --> 00:08:54.260
このペイロードを USB スティックで持ち込む

00:08:54.260 --> 00:08:56.260
必要はないのです、

00:08:56.260 --> 00:08:58.260
Stuxnet の場合で見たように。

00:08:58.260 --> 00:09:01.260
拡散のために従来のワーム技術を使用することもできるでしょう。

00:09:01.260 --> 00:09:04.260
とにかくできるだけ広く拡散させるのです。

00:09:04.260 --> 00:09:06.260
そのようにすると、

00:09:06.260 --> 00:09:08.260
結局のところ、

00:09:08.260 --> 00:09:13.260
大量破壊のサイバー兵器になります。

00:09:14.260 --> 00:09:16.260
これが、帰結です、

00:09:16.260 --> 00:09:19.260
我々が直面しなければならない帰結です。

00:09:19.260 --> 00:09:22.260
そのため、不幸なことに、

00:09:22.260 --> 00:09:25.260
このような攻撃のターゲットの最大数は、

00:09:25.260 --> 00:09:27.260
中東ではなく、

00:09:27.260 --> 00:09:30.260
アメリカやヨーロッパそして日本にあるのです。

00:09:30.260 --> 00:09:32.260
この緑の領域のすべて、

00:09:32.260 --> 00:09:35.260
これらがターゲットの豊富な環境です。

00:09:35.260 --> 00:09:38.260
我々はこのような帰結に立ち向かわなければなりません。

00:09:38.260 --> 00:09:41.260
今すぐ準備を始めた方がよいでしょう。

00:09:41.260 --> 00:09:43.260
ありがとう。

00:09:43.260 --> 00:09:49.260
（拍手）

00:09:49.260 --> 00:09:51.260
クリス・アンダーセン：質問があります。

00:09:53.260 --> 00:09:55.260
ラルフ、かなり広く報告されたのは、

00:09:55.260 --> 00:09:57.260
皆の推測ではモサドが、

00:09:57.260 --> 00:09:59.260
背後の主な実体であるということです。

00:09:59.260 --> 00:10:02.260
これはあなたの見解ですか？

00:10:02.260 --> 00:10:04.260
ラルフ・ラングナー：わかりました、ほんとに聞きたいですか？

00:10:04.260 --> 00:10:06.260
ええ、わかりました。

00:10:06.260 --> 00:10:09.260
私の見解は、モサドが絡んでいますが、

00:10:09.260 --> 00:10:12.260
主導力は、イスラエルではありません。

00:10:12.260 --> 00:10:14.260
背後にいる主導力は、

00:10:14.260 --> 00:10:17.260
サイバー超大国です。

00:10:17.260 --> 00:10:19.260
一つしかありません。

00:10:19.260 --> 00:10:21.260
それはアメリカです--

00:10:21.260 --> 00:10:23.260
幸運にも、幸運にもです。

00:10:23.260 --> 00:10:25.260
というのは、そうでなければ、

00:10:25.260 --> 00:10:28.260
我々の問題はさらにもっと大きくなるでしょう。

00:10:28.260 --> 00:10:32.260
CA：我々を怖がらせてくれてありがとう。ラルフ、ありがとう。

00:10:32.260 --> 00:10:34.260
（拍手）

