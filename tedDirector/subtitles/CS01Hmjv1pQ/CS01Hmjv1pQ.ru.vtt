WEBVTT
Kind: captions
Language: ru

00:00:00.000 --> 00:00:07.000
Переводчик: Nikolay Frolov
Редактор: Aliaksandr Autayeu

00:00:15.260 --> 00:00:18.260
Идея, лежащая в основе компьютерного червя Стакснет

00:00:18.260 --> 00:00:20.260
на самом деле довольно проста.

00:00:20.260 --> 00:00:23.260
Мы не хотим, чтобы Иран получил Бомбу.

00:00:23.260 --> 00:00:26.260
Их главный объект по разработке ядерных вооружений —

00:00:26.260 --> 00:00:30.260
фабрика по обогащению урана в Натанзе.

00:00:30.260 --> 00:00:32.260
Серые коробки, которые вы видите,

00:00:32.260 --> 00:00:35.260
это системы непрерывного контроля.

00:00:35.260 --> 00:00:38.260
Если нам удастся взломать эти системы,

00:00:38.260 --> 00:00:41.260
управляющие скоростями вращения и клапанами,

00:00:41.260 --> 00:00:44.260
мы сможем причинить кучу проблем

00:00:44.260 --> 00:00:46.260
центрифуге.

00:00:46.260 --> 00:00:48.260
Серые коробки работают не под управлением Windows.

00:00:48.260 --> 00:00:51.260
Это совершенно иная технология.

00:00:51.260 --> 00:00:53.260
Но если нам удастся

00:00:53.260 --> 00:00:56.260
установить хороший Windows вирус

00:00:56.260 --> 00:00:58.260
на ноутбук,

00:00:58.260 --> 00:01:00.260
используемый инженером этой машины

00:01:00.260 --> 00:01:03.260
для настройки этой серой коробки,

00:01:03.260 --> 00:01:05.260
тогда мы в деле.

00:01:05.260 --> 00:01:08.260
Вот по такому сценарию и действует Стакснет.

00:01:08.260 --> 00:01:13.260
Мы начинаем с заброса вируса в Windows.

00:01:13.260 --> 00:01:16.260
Вирус попадает в серую коробку,

00:01:16.260 --> 00:01:18.260
приносит вред центрифуге,

00:01:18.260 --> 00:01:20.260
и иранская ядерная программа откладывается —

00:01:20.260 --> 00:01:22.260
миссия выполнена.

00:01:22.260 --> 00:01:24.260
Просто, не правда ли?

00:01:24.260 --> 00:01:27.260
Я хочу рассказать о том, как мы это обнаружили.

00:01:27.260 --> 00:01:30.260
Когда мы начали исследовать Стакснет полгода назад,

00:01:30.260 --> 00:01:33.260
было совершенно неизвестно, зачем нужна эта штука.

00:01:33.260 --> 00:01:35.260
Единственно, было известно,

00:01:35.260 --> 00:01:38.260
что её Windows-компонента, забрасываемая компонента, очень, очень сложна,

00:01:38.260 --> 00:01:41.260
и использует несколько до сих пор неизвестных уязвимостей.

00:01:41.260 --> 00:01:44.260
Кажется, она хочет сделать что-то

00:01:44.260 --> 00:01:46.260
с этими серыми коробками, с системами непрерывного контроля.

00:01:46.260 --> 00:01:48.260
Это привлекло наше внимание,

00:01:48.260 --> 00:01:50.260
и мы начали лабораторный проект,

00:01:50.260 --> 00:01:54.260
в котором мы заражали нашу компьютерную среду Стакснетом

00:01:54.260 --> 00:01:56.260
и смотрели, что делает эта штука.

00:01:56.260 --> 00:01:59.260
И затем случились очень забавные вещи.

00:01:59.260 --> 00:02:02.260
Стакснет вел себя, как лабораторная крыса,

00:02:02.260 --> 00:02:05.260
которой не нравился наш сыр —

00:02:05.260 --> 00:02:07.260
принюхивалась, но не хотела есть.

00:02:07.260 --> 00:02:09.260
Мы ничего не понимали.

00:02:09.260 --> 00:02:12.260
И после того, как мы поэкспериментировали с различными ароматами сыра,

00:02:12.260 --> 00:02:16.260
я понял, что это направленная атака.

00:02:16.260 --> 00:02:18.260
Она полностью направленная.

00:02:18.260 --> 00:02:20.260
Внедрённая программа активно исследовала

00:02:20.260 --> 00:02:22.260
серую коробку,

00:02:22.260 --> 00:02:25.260
на предмет определённых настроек,

00:02:25.260 --> 00:02:29.260
и даже на предмет того, запущена ли на данной машине программа,

00:02:29.260 --> 00:02:31.260
которую она старается заразить.

00:02:31.260 --> 00:02:34.260
И если поиски не давали результата, Стакснет бездействовал.

00:02:34.260 --> 00:02:36.260
Это сильно привлекло моё внимание,

00:02:36.260 --> 00:02:38.260
и мы начали работать над этим

00:02:38.260 --> 00:02:40.260
почти круглосуточно,

00:02:40.260 --> 00:02:43.260
потому что я понимал, что мы не знаем, что это за цель.

00:02:43.260 --> 00:02:45.260
Это могла быть

00:02:45.260 --> 00:02:47.260
американская ядерная электростанция,

00:02:47.260 --> 00:02:49.260
или химический завод в Германии.

00:02:49.260 --> 00:02:52.260
Нам лучше поскорее отыскать потенциальную цель.

00:02:52.260 --> 00:02:54.260
Мы извлекли и декомпилировали

00:02:54.260 --> 00:02:56.260
атакующий код,

00:02:56.260 --> 00:02:59.260
и мы обнаружили, что он представляет собой две бомбы —

00:02:59.260 --> 00:03:02.260
поменьше и побольше.

00:03:02.260 --> 00:03:06.260
Мы также увидели, что они сделаны очень профессионально,

00:03:06.260 --> 00:03:10.260
людьми, которые очевидно обладали всей внутренней информацией.

00:03:10.260 --> 00:03:12.260
Они знали каждый бит и байт

00:03:12.260 --> 00:03:14.260
того, что им нужно было атаковать.

00:03:14.260 --> 00:03:17.260
Они вероятно даже знали размер ботинок оператора.

00:03:17.260 --> 00:03:19.260
Им было известно всё.

00:03:19.260 --> 00:03:22.260
Если вы слышали, что заражающая программа Стакснет

00:03:22.260 --> 00:03:24.260
сложна и высокотехнологична,

00:03:24.260 --> 00:03:26.260
позвольте сказать вам вот что:

00:03:26.260 --> 00:03:28.260
наполнение — просто «ядерная физика».

00:03:28.260 --> 00:03:30.260
Это круче всего,

00:03:30.260 --> 00:03:33.260
что нам когда-либо приходилось видеть.

00:03:33.260 --> 00:03:36.260
Здесь вы видите кусочек настоящего атакующего кода.

00:03:36.260 --> 00:03:38.260
Мы говорим о —

00:03:38.260 --> 00:03:41.260
приблизительно о 15 000 строк кода.

00:03:41.260 --> 00:03:44.260
Выглядит почти как старый добрый код на ассемблере.

00:03:44.260 --> 00:03:46.260
И я хочу рассказать вам, как нам удалось

00:03:46.260 --> 00:03:48.260
разобраться в этом коде.

00:03:48.260 --> 00:03:51.260
В первую очередь мы искали все системные вызовы,

00:03:51.260 --> 00:03:53.260
потому что мы знали, что они делают.

00:03:53.260 --> 00:03:57.260
И затем мы смотрели на таймеры и структуры данных

00:03:57.260 --> 00:03:59.260
и пытались связать их с реальным миром —

00:03:59.260 --> 00:04:01.260
чтобы определить потенциальные мишени в реальном мире.

00:04:01.260 --> 00:04:04.260
Нам очень нужны гипотезы о потенциальных мишенях,

00:04:04.260 --> 00:04:07.260
которые мы могли бы доказать или опровергнуть.

00:04:07.260 --> 00:04:09.260
Чтобы сформулировать такие гипотезы,

00:04:09.260 --> 00:04:11.260
мы вспомнили,

00:04:11.260 --> 00:04:13.260
что это определённо крутой саботаж,

00:04:13.260 --> 00:04:15.260
поэтому цель должна представлять большую ценность,

00:04:15.260 --> 00:04:18.260
и вероятнее всего она расположена в Иране,

00:04:18.260 --> 00:04:22.260
потому что там было обнаружено наибольшее количество заражений.

00:04:22.260 --> 00:04:25.260
И вы не найдёте там несколько сотен потенциальных объектов.

00:04:25.260 --> 00:04:27.260
Всё сводится в итоге

00:04:27.260 --> 00:04:29.260
к ядерной электростанции в Бушере

00:04:29.260 --> 00:04:31.260
и к заводу по обогащению урана в Натанзе.

00:04:31.260 --> 00:04:33.260
Я сказал своему помощнику:

00:04:33.260 --> 00:04:36.260
«Достань мне список всех центрифуг и специалистов электростанциям из нашей клиентской базы.»

00:04:36.260 --> 00:04:38.260
Я обзвонил их всех и использовал их мозги в попытке

00:04:38.260 --> 00:04:40.260
совместить их опыт

00:04:40.260 --> 00:04:43.260
с тем, что мы нашли в коде и данных.

00:04:43.260 --> 00:04:45.260
И это сработало отлично.

00:04:45.260 --> 00:04:47.260
Мы смогли сопоставить

00:04:47.260 --> 00:04:49.260
небольшую цифровую боеголовку

00:04:49.260 --> 00:04:51.260
с управлением ротором.

00:04:51.260 --> 00:04:54.260
Ротор — это движущаяся часть внутри центрифуги,

00:04:54.260 --> 00:04:56.260
тот чёрный объект, который вы видите.

00:04:56.260 --> 00:04:59.260
И если вам удастся манипулировать скоростью этого ротора,

00:04:59.260 --> 00:05:01.260
вы сможете сломать ротор

00:05:01.260 --> 00:05:05.260
и в результате даже взорвать центрифугу.

00:05:05.260 --> 00:05:07.260
Мы также увидели,

00:05:07.260 --> 00:05:09.260
что цель атаки

00:05:09.260 --> 00:05:12.260
заключалась в том, чтобы сделать это медленно и аккуратно —

00:05:12.260 --> 00:05:14.260
очевидно в попытке

00:05:14.260 --> 00:05:17.260
свести обслуживающих инженеров с ума,

00:05:17.260 --> 00:05:20.260
потому что они не смогли бы быстро её вычислить.

00:05:20.260 --> 00:05:23.260
Большая цифровая боеголовка — мы поняли для чего она,

00:05:23.260 --> 00:05:25.260
изучая внимательнее

00:05:25.260 --> 00:05:27.260
данные и структуру данных.

00:05:27.260 --> 00:05:29.260
К примеру, число 164

00:05:29.260 --> 00:05:31.260
выделяется в этом коде.

00:05:31.260 --> 00:05:33.260
Его сложно пропустить.

00:05:33.260 --> 00:05:35.260
Я начал изучать научную литературу

00:05:35.260 --> 00:05:37.260
об этих центрифугах,

00:05:37.260 --> 00:05:39.260
установленных в Натанзе

00:05:39.260 --> 00:05:41.260
и обнаружил, что они устроены

00:05:41.260 --> 00:05:43.260
в форме того, что называется каскадом,

00:05:43.260 --> 00:05:47.260
и каждый каскад установлено 164 центрифуги.

00:05:47.260 --> 00:05:49.260
Это имело смысл, и это было совпадением.

00:05:49.260 --> 00:05:51.260
Вышло даже лучше.

00:05:51.260 --> 00:05:53.260
Эти центрифуги в Иране

00:05:53.260 --> 00:05:57.260
были разделены на 15, как это называется, ступеней.

00:05:57.260 --> 00:05:59.260
И догадайтесь, что мы нашли в атакующем коде?

00:05:59.260 --> 00:06:01.260
Почти ту же самую структуру.

00:06:01.260 --> 00:06:04.260
Опять же, очень хорошее совпадение.

00:06:04.260 --> 00:06:07.260
Это вселило в нас уверенность, что мы понимаем, с чем имеем дело.

00:06:07.260 --> 00:06:10.260
Не поймите меня неправильно, это, конечно, произошло не так.

00:06:10.260 --> 00:06:13.260
Эти результаты были получены

00:06:13.260 --> 00:06:16.260
в течение нескольких недель очень напряжённой работы.

00:06:16.260 --> 00:06:19.260
И мы часто утыкались в тупики

00:06:19.260 --> 00:06:21.260
и начинали заново.

00:06:21.260 --> 00:06:23.260
В любом случае, мы выяснили,

00:06:23.260 --> 00:06:25.260
что обе цифровые боеголовки

00:06:25.260 --> 00:06:27.260
были нацелены на одну и ту же цель,

00:06:27.260 --> 00:06:29.260
но под разными углами.

00:06:29.260 --> 00:06:32.260
Маленькая боеголовка принималась за один каскад,

00:06:32.260 --> 00:06:35.260
раскручивала и замедляла роторы,

00:06:35.260 --> 00:06:37.260
а большая боеголовка

00:06:37.260 --> 00:06:39.260
захватывала шесть каскадов

00:06:39.260 --> 00:06:41.260
и манипулировала вентилями.

00:06:41.260 --> 00:06:43.260
В итоге, мы уверены,

00:06:43.260 --> 00:06:45.260
что мы на самом деле определили, что является целью.

00:06:45.260 --> 00:06:48.260
Это Натанз и это только Натанз.

00:06:48.260 --> 00:06:50.260
И нам не нужно беспокоиться,

00:06:50.260 --> 00:06:52.260
что другие мишени

00:06:52.260 --> 00:06:54.260
могут быть поражены Стакснетом.

00:06:54.260 --> 00:06:57.260
Вот кое-что замечательное из того, что мы увидели —

00:06:57.260 --> 00:06:59.260
реально снесло мне башню.

00:06:59.260 --> 00:07:01.260
Там внизу расположена серая коробка,

00:07:01.260 --> 00:07:04.260
а наверху вы видите центрифуги.

00:07:04.260 --> 00:07:06.260
И что делает эта штука,

00:07:06.260 --> 00:07:09.260
она перехватывает входные данные из датчиков —

00:07:09.260 --> 00:07:11.260
к примеру, из датчиков давления

00:07:11.260 --> 00:07:13.260
и датчиков вибрации —

00:07:13.260 --> 00:07:16.260
и передаёт исходному коду,

00:07:16.260 --> 00:07:18.260
которые всё ещё работает во время атаки,

00:07:18.260 --> 00:07:20.260
поддельные входные данные.

00:07:20.260 --> 00:07:22.260
И эти поддельные входные данные

00:07:22.260 --> 00:07:25.260
записаны в Стакснет.

00:07:25.260 --> 00:07:27.260
Это прямо как в голливудских фильмах,

00:07:27.260 --> 00:07:29.260
когда во время ограбления

00:07:29.260 --> 00:07:32.260
камерам наблюдения посылается заранее записанное видео.

00:07:32.260 --> 00:07:34.260
Круто, правда?

00:07:35.260 --> 00:07:37.260
Идея здесь, конечно,

00:07:37.260 --> 00:07:40.260
не только в том, чтобы перехитрить операторов комнаты управления.

00:07:40.260 --> 00:07:44.260
На самом деле всё гораздо опаснее и агрессивнее.

00:07:44.260 --> 00:07:46.260
Идея заключается в том,

00:07:46.260 --> 00:07:49.260
чтобы обмануть цифровую систему безопасности.

00:07:50.260 --> 00:07:52.260
Нам нужны цифровые системы безопасности,

00:07:52.260 --> 00:07:55.260
когда человек не может действовать достаточно быстро.

00:07:55.260 --> 00:07:57.260
К примеру, на электростанции,

00:07:57.260 --> 00:08:00.260
когда большая турбина слишком сильно ускоряется,

00:08:00.260 --> 00:08:03.260
вам необходимо открыть предохранительный клапан в течении миллисекунды.

00:08:03.260 --> 00:08:06.260
Очевидно, человек на такое неспособен.

00:08:06.260 --> 00:08:08.260
Здесь нам необходима цифровая система безопасности.

00:08:08.260 --> 00:08:10.260
И если они взломаны,

00:08:10.260 --> 00:08:13.260
могут произойти очень плохие вещи.

00:08:13.260 --> 00:08:15.260
Ваша станция может взорваться.

00:08:15.260 --> 00:08:18.260
И ни ваши операторы, ни ваша система безопасности этого не заметят.

00:08:18.260 --> 00:08:20.260
Это страшно.

00:08:20.260 --> 00:08:22.260
Но будет ещё страшнее.

00:08:22.260 --> 00:08:25.260
То, что я собираюсь сказать, очень важно.

00:08:25.260 --> 00:08:27.260
Подумайте.

00:08:27.260 --> 00:08:30.260
Эта атака универсальная.

00:08:30.260 --> 00:08:34.260
Они никак не связана в деталях

00:08:34.260 --> 00:08:36.260
с центрифугами,

00:08:36.260 --> 00:08:39.260
с обогащением урана.

00:08:39.260 --> 00:08:42.260
Она также хорошо сработала бы, к примеру,

00:08:42.260 --> 00:08:44.260
на электростанции

00:08:44.260 --> 00:08:47.260
или на автомобильном заводе.

00:08:47.260 --> 00:08:49.260
Это универсальный инструмент.

00:08:49.260 --> 00:08:51.260
Вам нет необходимости — как атакующему —

00:08:51.260 --> 00:08:54.260
нет необходимости внедрять содержимое

00:08:54.260 --> 00:08:56.260
через USB,

00:08:56.260 --> 00:08:58.260
как мы видели это в случае Стакснета.

00:08:58.260 --> 00:09:01.260
Вы могли бы использовать обычную технологию распространения через червей.

00:09:01.260 --> 00:09:04.260
Просто распространите его настолько, насколько возможно.

00:09:04.260 --> 00:09:06.260
И если вы сделаете это,

00:09:06.260 --> 00:09:08.260
вы получите

00:09:08.260 --> 00:09:13.260
кибер-оружие массового поражения.

00:09:14.260 --> 00:09:16.260
Это последствие,

00:09:16.260 --> 00:09:19.260
которое мы должны признать.

00:09:19.260 --> 00:09:22.260
К несчастью,

00:09:22.260 --> 00:09:25.260
наибольшее число потенциальных мишеней для таких атак

00:09:25.260 --> 00:09:27.260
расположено не на Ближнем Востоке.

00:09:27.260 --> 00:09:30.260
А в США, Европе и Японии.

00:09:30.260 --> 00:09:32.260
Все эти зелёные области,

00:09:32.260 --> 00:09:35.260
всё это области с большим количеством мишеней.

00:09:35.260 --> 00:09:38.260
Мы должны признать последствия,

00:09:38.260 --> 00:09:41.260
и мы должны начать готовиться к ним уже сейчас.

00:09:41.260 --> 00:09:43.260
Спасибо.

00:09:43.260 --> 00:09:49.260
(Аплодисменты)

00:09:49.260 --> 00:09:51.260
Крис Андерсон: У меня вопрос.

00:09:53.260 --> 00:09:55.260
Ральф, довольно широко известно,

00:09:55.260 --> 00:09:57.260
что считается, что Моссад

00:09:57.260 --> 00:09:59.260
является главной силой, стоящей за этим.

00:09:59.260 --> 00:10:02.260
А как вы считаете?

00:10:02.260 --> 00:10:04.260
Ральф Лангнер: Хорошо, вы действительно хотите это услышать?

00:10:04.260 --> 00:10:06.260
Хорошо, хорошо.

00:10:06.260 --> 00:10:09.260
На мой взгляд, Моссад участвует в этом,

00:10:09.260 --> 00:10:12.260
но ведущей силой является не Израиль.

00:10:12.260 --> 00:10:14.260
Ведущая сила, стоящая за этим,

00:10:14.260 --> 00:10:17.260
супер кибер-держава.

00:10:17.260 --> 00:10:19.260
Есть только одна такая,

00:10:19.260 --> 00:10:21.260
и это США —

00:10:21.260 --> 00:10:23.260
к счастью, к счастью.

00:10:23.260 --> 00:10:25.260
Потому что иначе,

00:10:25.260 --> 00:10:28.260
у нас были бы куда большие проблемы.

00:10:28.260 --> 00:10:32.260
К.А.: Спасибо за то, что напугали нас до смерти. Спасибо, Ральф.

00:10:32.260 --> 00:10:34.260
(Аплодисменты)

