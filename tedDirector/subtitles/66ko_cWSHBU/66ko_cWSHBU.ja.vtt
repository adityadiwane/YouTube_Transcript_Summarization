WEBVTT
Kind: captions
Language: ja

00:00:00.000 --> 00:00:07.000
翻訳: Tomoyuki Suzuki
校正: Masako Kigami

00:00:12.954 --> 00:00:16.537
私と研究仲間は
動く点の科学に魅せられています

00:00:16.927 --> 00:00:18.101
これらの点は何でしょう？

00:00:18.101 --> 00:00:19.412
全て我々自身です

00:00:19.412 --> 00:00:24.521
我々は家の中 事務所の中を動き回り
街や世界中で

00:00:24.521 --> 00:00:26.587
買物や旅行をしています

00:00:26.958 --> 00:00:30.918
こんな動きを全て理解できたら
素晴らしいと思いませんか？

00:00:30.918 --> 00:00:33.808
ここにパターン、意味を見出し
洞察することができたら？

00:00:34.259 --> 00:00:36.068
幸運なことにも 我々は

00:00:36.068 --> 00:00:40.807
自分達自身の情報を実に上手く
取得できる時代に生きています

00:00:40.807 --> 00:00:44.494
それがセンサー、ビデオ または
アプリであろうとも

00:00:44.494 --> 00:00:47.303
見事なほど詳細に
動きを追跡することができます

00:00:48.092 --> 00:00:53.148
そんな動きを得るのに最適なのが

00:00:53.148 --> 00:00:54.682
スポーツです

00:00:54.682 --> 00:01:00.039
バスケ、野球、サッカーやフットサルであれ

00:01:00.039 --> 00:01:04.465
競技場に装置を取り付け
選手の動きを１秒にも満たない間隔で

00:01:04.465 --> 00:01:05.802
撮影し追跡します

00:01:05.802 --> 00:01:10.208
そう 我々がやっていることは
スポーツ選手を

00:01:10.208 --> 00:01:12.191
－皆さんがご想像されるとおり－

00:01:12.191 --> 00:01:13.587
動く点へと変換することです

00:01:13.946 --> 00:01:18.904
他の生データと同様に
膨大な数の動く点を取得します

00:01:18.904 --> 00:01:21.430
取り扱いは面倒で
面白い作業ではありません

00:01:21.430 --> 00:01:25.223
でも選手の動きには 例えばバスケのコーチが
知りたいものが含まれています

00:01:25.223 --> 00:01:29.057
問題はコーチが 各ゲームを逐次観察し
それを記憶し分析することが

00:01:29.057 --> 00:01:31.804
不可能であるということです

00:01:31.804 --> 00:01:33.758
１人の人間には不可能であっても

00:01:33.758 --> 00:01:35.661
機械になら出来ます

00:01:35.661 --> 00:01:39.363
問題は機械がコーチの様な視点を持って
ゲームを見ることができないことです

00:01:39.363 --> 00:01:41.624
いや 少なくとも今までは不可能でした

00:01:42.228 --> 00:01:44.331
では我々は機械に
何を学習させたのでしょう？

00:01:45.569 --> 00:01:47.380
単純な方法で始めました

00:01:47.380 --> 00:01:51.203
パス、シュートやリバウンドを
教えました

00:01:51.203 --> 00:01:53.768
バスケファンならご存知ですよね？

00:01:53.768 --> 00:01:56.624
次にもう少しだけ複雑なことに
取り組みました

00:01:56.624 --> 00:02:01.377
ポストアップ、ピックアンドロールや
アイソレーションなどです

00:02:01.377 --> 00:02:04.920
選手なら大抵知っていることですが
ご存じなくても問題ありません

00:02:05.560 --> 00:02:10.924
そして 今では機械はダウン・スクリーンや

00:02:10.924 --> 00:02:14.021
ワイド・ピンといったプレイも
把握できるようになりました

00:02:14.021 --> 00:02:16.771
基本的に
プロだけが知っているプレイです

00:02:16.771 --> 00:02:21.157
機械にはコーチの視点で見るように
学習させました

00:02:22.008 --> 00:02:23.866
どうやって出来たのでしょう？

00:02:24.511 --> 00:02:27.653
コーチにピックアンドロールについて
説明を求めれば

00:02:27.653 --> 00:02:29.317
解説してくれたことでしょうが

00:02:29.317 --> 00:02:32.173
それをアルゴリズムに組込むのは
至難の業です

00:02:33.026 --> 00:02:37.328
ピックアンドロールとは
４人で行う２対２の攻防戦での

00:02:37.328 --> 00:02:39.486
こういったダンスのような動きです

00:02:39.486 --> 00:02:41.128
このように動いていきます

00:02:41.128 --> 00:02:43.685
スクリナー(ディフェンスをガードする選手)が

00:02:43.685 --> 00:02:46.918
ボールマンのディフェンスの横に行き

00:02:46.918 --> 00:02:48.199
ずっとガードするのです

00:02:48.199 --> 00:02:51.540
そして２人が動き こうなります　ジャーン！
これがピックアンドロールです

00:02:51.540 --> 00:02:53.779
(笑)

00:02:53.779 --> 00:02:56.287
アルゴリズム化が困難な例です

00:02:56.913 --> 00:03:01.278
スクリナーが邪魔をするのですが

00:03:01.278 --> 00:03:04.174
近づいても 停止しなければ

00:03:04.174 --> 00:03:05.939
おそらくピックアンドロールでは
ありません

00:03:06.560 --> 00:03:10.529
逆に 停止しても
十分に近づかなければ

00:03:10.529 --> 00:03:12.290
ピックアンドロールとは
ならないでしょう

00:03:12.642 --> 00:03:15.903
近づいて停止しても

00:03:15.903 --> 00:03:19.462
リングの下では
ピックアンドロールにはならないでしょう

00:03:19.462 --> 00:03:22.010
私の間違いで何れも
ピックアンドロールかもしれません

00:03:22.010 --> 00:03:26.602
正確なタイミング、距離と場所に
依存するので

00:03:26.602 --> 00:03:28.097
判断を難しくしています

00:03:28.579 --> 00:03:33.547
幸いにも機械学習では
我々が知っていることの記述を

00:03:33.547 --> 00:03:35.314
我々の限界以上にこなします

00:03:35.314 --> 00:03:37.759
どのように？
例をお見せしましょう

00:03:37.759 --> 00:03:40.589
機械に向かって言います
「おはよう 機械君

00:03:41.077 --> 00:03:44.720
ここにピックアンドロールと
そうでないものが あるんだ

00:03:44.720 --> 00:03:47.076
違いを見分けてごらん」

00:03:47.076 --> 00:03:50.807
この問題を解く鍵は
判別を可能とする特徴を捉えることです

00:03:50.807 --> 00:03:52.940
りんごとみかんの違いを

00:03:52.940 --> 00:03:54.345
学習させるならば

00:03:54.345 --> 00:03:56.744
「色と形に注目してみたら？」
と言うことでしょう

00:03:56.744 --> 00:03:59.711
我々が解決すべき問題は
違いが何かということです

00:03:59.711 --> 00:04:00.982
コンピューターが

00:04:00.982 --> 00:04:04.505
動く点を追跡する時に
鍵となる特徴とは何でしょうか？

00:04:04.505 --> 00:04:09.352
相対的 絶対的な位置、距離、タイミング
それに速度といった

00:04:09.352 --> 00:04:11.440
全ての情報を把握すること

00:04:11.440 --> 00:04:16.392
それこそが 動く点の科学の神髄です

00:04:16.392 --> 00:04:19.925
「時空パターン認識」という専門用語を
使うのが適切です

00:04:19.925 --> 00:04:22.847
初めての言葉ですから
舌を噛むかもしれません

00:04:22.847 --> 00:04:24.410
こんな言葉ですから

00:04:24.410 --> 00:04:27.575
ポイントはNBAのコーチにとっての関心は
ピックアンドロールが

00:04:27.575 --> 00:04:29.521
あったかどうかでは無く
どのようにして

00:04:29.521 --> 00:04:31.620
そのプレイが起きたかということです

00:04:31.620 --> 00:04:34.631
なぜ 重要なのでしょう？
少し掘り下げてみましょう

00:04:34.631 --> 00:04:36.426
現代のバスケットボールでは

00:04:36.426 --> 00:04:39.065
ピックアンドロールは
おそらく最も重要なプレイです

00:04:39.065 --> 00:04:41.709
どうやって仕掛け
これをどうディフェンスするのかで

00:04:41.709 --> 00:04:44.403
基本的に多くのゲームで勝敗を左右します

00:04:44.403 --> 00:04:48.228
だから この動きには
様々なバリエーションがあり

00:04:48.228 --> 00:04:51.900
バリエーションを理解することが
とても重要です

00:04:51.900 --> 00:04:54.429
ですから
この装置がとても重宝します

00:04:55.228 --> 00:04:56.428
例をお見せします

00:04:56.428 --> 00:04:58.831
２対２の攻防戦で

00:04:58.831 --> 00:05:01.007
ピックアンドロールをしようとしています

00:05:01.007 --> 00:05:04.086
ボールマンの動きには
テイクとリジェクトがあり

00:05:04.086 --> 00:05:07.111
スクリナーには
ロールとポップがあります

00:05:07.111 --> 00:05:10.121
一方ボールマンのディフェンスは
オーバーかアンダーをし

00:05:10.121 --> 00:05:14.710
スクリナーのディフェンスは
ショウかアップツータッチかソフトをします

00:05:14.710 --> 00:05:17.352
またディフェンスが一緒になって
スイッチやブリッズをします

00:05:17.352 --> 00:05:20.035
始めの頃は こういったことについて
知りませんでした

00:05:20.035 --> 00:05:23.979
このような矢印通りに動いてくれれば簡単で

00:05:23.979 --> 00:05:28.047
理解しやすいことでしょう
でも実際の動きはとても複雑です

00:05:28.047 --> 00:05:33.555
選手はくねくねと複雑に動くので
プレイのバリエーションを

00:05:33.555 --> 00:05:34.882
正確に把握すること－

00:05:34.882 --> 00:05:36.774
精度良く プレイを再現することは困難です

00:05:36.774 --> 00:05:40.416
だから コーチは人間の判断力を
信用することになります

00:05:40.416 --> 00:05:43.820
時空パターン認識には
このような困難がありますが

00:05:43.820 --> 00:05:45.294
我々は解析に成功しました

00:05:45.318 --> 00:05:49.478
コーチたちは我々の機械の
プレイ認識能力を信頼しています

00:05:49.478 --> 00:05:53.035
今年に至っては NBAリーグの

00:05:53.035 --> 00:05:54.682
ほぼ全てのチームが

00:05:54.682 --> 00:05:59.114
バスケットボールの動く点を
追跡する機械に搭載された

00:05:59.114 --> 00:06:01.872
ソフトを利用しています

00:06:01.872 --> 00:06:07.049
それだけでなく
とても大切な試合に勝利するための

00:06:07.049 --> 00:06:10.425
戦略変更を
我々はアドバイスすることができました

00:06:10.425 --> 00:06:14.181
これはとてもワクワクすることです
30年もの間 リーグに在籍してきた

00:06:14.181 --> 00:06:17.248
コーチたちが 機械による
アドバイスを受け入れるのですから

00:06:17.874 --> 00:06:20.804
ピックアンドロールを超えたことも
素晴らしことです

00:06:20.804 --> 00:06:22.904
コンピューターは
簡単なことから始め

00:06:22.904 --> 00:06:24.992
もっともっと複雑なことを学習し

00:06:24.992 --> 00:06:26.577
今や多くの事を把握しています

00:06:26.577 --> 00:06:29.436
正直言えば 私自身は
学習内容を殆ど理解していませんが

00:06:29.436 --> 00:06:33.175
私より賢いなんて
特別なことではありません

00:06:33.175 --> 00:06:36.843
こう思ったことがあります
機械はコーチを超えられるか?

00:06:36.843 --> 00:06:38.922
人間以上に知り得るか?

00:06:38.922 --> 00:06:40.691
今や その答えは「イエス」です

00:06:40.691 --> 00:06:43.272
コーチはシュートを上手く放つ
選手を欲しがります

00:06:43.272 --> 00:06:44.947
私がゴールの近くにいて

00:06:44.947 --> 00:06:47.137
近くに誰もいなければ
シュートを決めやすく

00:06:47.137 --> 00:06:51.101
逆に ゴールから遠く 敵に囲まれていれば
シュートを決めるのが難しくなります

00:06:51.101 --> 00:06:56.209
しかし シュートの良し悪しの程度を
定量的に判断できませんでした

00:06:56.209 --> 00:06:57.359
今までは です

00:06:57.771 --> 00:07:00.853
ここで時空パターン認識の
再登場です

00:07:00.853 --> 00:07:02.251
各シュートを分析しました

00:07:02.251 --> 00:07:05.280
調べることは「シュートの場所は？
リングとの角度は？

00:07:05.280 --> 00:07:08.066
ディフェンスの位置は？
その距離は？

00:07:08.066 --> 00:07:09.421
立っている角度は？」などです

00:07:09.421 --> 00:07:12.422
複数のディフェンダーがいる時も
選手の動きを追って

00:07:12.422 --> 00:07:13.879
シュートのタイプを予測できます

00:07:13.879 --> 00:07:17.977
選手の速度から
このような状況下で

00:07:17.977 --> 00:07:22.188
どのようなシュートが放たれるかという
予測モデルを構築できます

00:07:22.188 --> 00:07:23.688
なぜ これが重要なのでしょう？

00:07:24.102 --> 00:07:26.929
シュートについて解析してみます

00:07:26.929 --> 00:07:29.633
かつては一元的なものでしたが
今は２つの因子に分解します

00:07:29.633 --> 00:07:32.284
シュートの質と
シューターの質です

00:07:33.680 --> 00:07:36.966
このバブル・チャートをご覧ください
TEDには不可欠ですよね？

00:07:36.966 --> 00:07:38.004
(笑)

00:07:38.004 --> 00:07:39.329
各点はNBAの選手です

00:07:39.329 --> 00:07:42.483
点の大きさは選手の大きさ
色はポジションを表しています

00:07:42.483 --> 00:07:44.639
横軸は シュートの成功可能性で

00:07:44.639 --> 00:07:46.616
左に行けば難易度が上がり

00:07:46.616 --> 00:07:49.194
右に行けば難易度が下がります

00:07:49.194 --> 00:07:51.275
縦軸は 選手のシュート能力です

00:07:51.275 --> 00:07:53.861
上に行くほど良い選手で
下の方は その逆です

00:07:53.861 --> 00:07:55.621
例えば 通常47%の確率で

00:07:55.621 --> 00:07:57.718
シュートを成功させる選手がいるとします

00:07:57.718 --> 00:07:59.345
以前なら これが情報の全てです

00:07:59.345 --> 00:08:04.219
でも今なら NBAの平均的な選手なら
49%の確率で成功させるシュートを

00:08:04.219 --> 00:08:06.204
この選手は2%低くさせると
いうことができます

00:08:06.204 --> 00:08:07.888
この選手は2%低くさせると
いうことができます

00:08:08.266 --> 00:08:12.781
47%といっても様々な組み合わせが
あることが重要です

00:08:13.714 --> 00:08:16.287
47%の数字をたたき出す

00:08:16.287 --> 00:08:20.267
100億円プレイヤーの獲得を
考えるのならば

00:08:20.267 --> 00:08:23.346
難しいシュートを成功させる選手なのか
シュートの質は低くても

00:08:23.346 --> 00:08:25.743
チャンスの高いシュートを放つ
選手なのかは重要な要素です

00:08:27.130 --> 00:08:30.487
機械学習では
選手の見方は変わりませんが

00:08:30.487 --> 00:08:32.369
試合の見方が変わります

00:08:32.369 --> 00:08:36.148
数年前NBAのファイナルで
大いに盛り上がった試合がありました

00:08:36.148 --> 00:08:39.379
３点を追うマイアミ
後り時間は20秒

00:08:39.379 --> 00:08:41.428
シリーズの敗北が目前でした

00:08:41.428 --> 00:08:44.793
レブロン・ジェームズという選手が
同点となる３点シュートを放つも

00:08:44.793 --> 00:08:46.015
外れました

00:08:46.015 --> 00:08:47.876
クリス・ボッシュ選手が
リバウンドに入り

00:08:47.876 --> 00:08:50.058
レイ・アレン選手にパス
そのアレン選手が

00:08:50.058 --> 00:08:52.001
３点シュートを沈め
延長戦に入りました

00:08:52.001 --> 00:08:54.121
結局試合に勝利し
ファイナルを制しました

00:08:54.121 --> 00:08:56.566
史上 もっともエキサイティングな
試合の１つでした

00:08:57.438 --> 00:09:00.891
各選手の 各瞬間における

00:09:00.891 --> 00:09:02.103
シュート成功率や

00:09:02.103 --> 00:09:05.083
各瞬間にリバウンドを取る確率が分かると

00:09:05.083 --> 00:09:08.526
この場面を まったく新しい見方で
捉えられます

00:09:09.618 --> 00:09:12.310
残念ながらその時のビデオを
お見せできませんが

00:09:12.310 --> 00:09:16.827
３週間ほど前に
我々がプレイしている週例の試合の時に

00:09:16.827 --> 00:09:19.279
皆さんのために
そのプレイを再現しました

00:09:19.279 --> 00:09:21.573
(笑)

00:09:21.573 --> 00:09:25.199
分析を行った選手の動きを再現しました

00:09:25.199 --> 00:09:29.478
これは私たちです
ここは毎週プレイしているロスアンジェルスの

00:09:29.478 --> 00:09:31.066
チャイナタウンにある公園です

00:09:31.066 --> 00:09:33.321
レイ・アランのあのプレイを
再現しています

00:09:33.321 --> 00:09:35.550
全てが あのプレイの
追跡データのとおりです

00:09:36.772 --> 00:09:38.313
そしてシュート

00:09:38.313 --> 00:09:40.853
その瞬間と解析結果を

00:09:40.853 --> 00:09:43.464
お見せします

00:09:43.464 --> 00:09:47.218
違いは プロの選手ではなく
私たちであり

00:09:47.218 --> 00:09:49.860
アナウンスもプロでなく私がしますので

00:09:49.860 --> 00:09:51.337
我慢してお付き合いください

00:09:53.153 --> 00:09:54.671
３点を追うマイアミ

00:09:54.671 --> 00:09:55.821
３点を追うマイアミ

00:09:56.107 --> 00:09:59.385
残り20秒

00:09:59.385 --> 00:10:00.583
ジェフのドリブル

00:10:02.656 --> 00:10:04.631
ジョシュにパスを回し
３点シュート

00:10:04.631 --> 00:10:06.480
[ シュート成功率を計算中 ]

00:10:07.278 --> 00:10:08.428
[ シュートの質 ]

00:10:09.048 --> 00:10:10.833
[ リバウンドの確率 ]

00:10:12.373 --> 00:10:13.570
失敗！

00:10:13.570 --> 00:10:15.016
[ リバウンドの確率 ]

00:10:15.777 --> 00:10:17.057
ノエルがリバウンドし

00:10:17.057 --> 00:10:18.509
ダリアにパス

00:10:18.509 --> 00:10:21.874
[ シュートの質 ]

00:10:22.676 --> 00:10:24.320
３点シュートが決まった！

00:10:24.320 --> 00:10:26.880
残り５秒で同点に

00:10:26.880 --> 00:10:28.522
観衆は大興奮

00:10:28.522 --> 00:10:30.205
(笑)

00:10:30.205 --> 00:10:31.776
こんな感じのプレイでした

00:10:31.776 --> 00:10:32.951
(拍手)

00:10:32.951 --> 00:10:34.150
だいたいこんな感じです

00:10:34.150 --> 00:10:35.681
(拍手)

00:10:36.121 --> 00:10:41.629
NBAだったら あれが成功する確率は
９%程度です

00:10:41.629 --> 00:10:43.914
そういったことを知ることができます

00:10:43.914 --> 00:10:47.429
このプレイの再現に
何回費やしたかは秘密です

00:10:47.429 --> 00:10:49.200
(笑)

00:10:49.200 --> 00:10:51.096
いいですよ お教えます！
４回でした

00:10:51.096 --> 00:10:52.121
(笑)

00:10:52.121 --> 00:10:53.286
ダリア お見事！

00:10:53.647 --> 00:10:57.934
しかし こんなビデオ映像や
NBAの各試合の

00:10:57.934 --> 00:11:02.639
各瞬間の分析そのものが
重要だというのではなく

00:11:02.639 --> 00:11:06.568
動きを追跡するのに
専門家チームが必要ではなく

00:11:07.083 --> 00:11:10.764
動作を解析するのに
専門家である必要がないという事実です

00:11:10.764 --> 00:11:15.654
さらには スポーツに限る必要はありません
我々はいつでも どこでも動いています

00:11:15.654 --> 00:11:18.023
家の中でも 動いています

00:11:21.428 --> 00:11:22.633
オフィスでも

00:11:24.238 --> 00:11:26.928
買物したり 旅行したり

00:11:29.318 --> 00:11:30.571
街の中

00:11:32.065 --> 00:11:33.683
世界中を動き回っています

00:11:35.270 --> 00:11:37.589
何を知り 何を学べるでしょう？

00:11:37.589 --> 00:11:39.918
ピックアンドロールの代わりに

00:11:39.918 --> 00:11:42.952
機械はおそらく
私の娘が最初の一歩を歩み出すときに

00:11:42.952 --> 00:11:45.035
動きを捉え
私に知らせてくれることでしょう

00:11:45.035 --> 00:11:47.571
文字通り いつにでも起こりうることです

00:11:48.140 --> 00:11:51.837
建物や街のデザインを良くするのにも
利用できるでしょう

00:11:52.362 --> 00:11:56.559
動く点の科学を進歩させることによって

00:11:56.559 --> 00:12:00.202
より良いスマートな動きができるようになり
進歩するものと信じています

00:12:00.607 --> 00:12:01.820
どうも有難うございました

00:12:01.820 --> 00:12:06.865
(拍手)

