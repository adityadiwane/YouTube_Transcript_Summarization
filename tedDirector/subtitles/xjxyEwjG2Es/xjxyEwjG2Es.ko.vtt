WEBVTT
Kind: captions
Language: ko

00:00:00.000 --> 00:00:07.000
번역: Alicia Chong
검토: Jeong-Lan Kinser

00:00:12.709 --> 00:00:16.185
서체는 우리가 엄청나게 많이
사용하는 것입니다.

00:00:16.185 --> 00:00:19.089
이 세상의 대부분에서
벗어날수가 없는 것이죠.

00:00:19.107 --> 00:00:24.172
하지만 일부 관심있는 사용자들은
특정 서체가 어디에서 유래 했는지

00:00:24.172 --> 00:00:27.736
언제, 또는 누가 디자인 했는 지
알고 싶어 하기도 합니다.

00:00:27.736 --> 00:00:31.549
마치, 정말로, 그것을 창조하는데 있어
어떤 인간 중개인이 개입되어 있었는지,

00:00:31.549 --> 00:00:36.877
만일 소프트웨어에서 
현실화 된 게 아니면 말이죠.

00:00:36.877 --> 00:00:40.613
하지만 저는 이것들에 대해
관심을 가져야합니다.

00:00:40.613 --> 00:00:42.130
이게 제 일이거든요.

00:00:42.130 --> 00:00:48.780
저는 저기 보이는 잘못된 T자와
E자 사이의 공백이 잘 못된 것에 대해

00:00:48.780 --> 00:00:50.948
상당히 화가 나는 몇 안되는 
사람중 하나입니다.

00:00:50.948 --> 00:00:54.290
전 그걸 보기 힘들고, 크리스 또한
그렇겠죠. 슬라이드를 내려 주세요.

00:00:54.290 --> 00:00:56.122
좋습니다.

00:00:56.122 --> 00:01:01.330
제 강연은 서체가 기술과 디자인에 
연결성에 관한 겁니다.

00:01:01.330 --> 00:01:04.943
기술은 여러번 바뀌어 왔습니다.

00:01:04.943 --> 00:01:11.486
제가 사진,디지털, 데스크탑, 스크린,
웹등의 일을 시작한 이후로 말이죠.

00:01:11.486 --> 00:01:13.224
그 변화에 살아 남아야 하기 때문에

00:01:13.224 --> 00:01:17.658
이 기술이 디자인 하는데 어떤 영향을
미칠 지에 대해 이해 하려고 노력했죠.

00:01:17.658 --> 00:01:22.689
이 슬라이드는 디자인 양식에 
영향을 주는 도구에 대한 것입니다.

00:01:22.699 --> 00:01:27.320
여러분 왼쪽이고 
저의 오른쪽에 있는 두 글자 K는

00:01:27.320 --> 00:01:30.125
최근에 컴퓨터에 의해 새롭게 
만들어진 현대적인 형태입니다.

00:01:30.126 --> 00:01:32.448
이 선은 모두 완정한 직선입니다.

00:01:32.448 --> 00:01:38.718
곡선은 수학 공식인 베이지 공식에 의해
만들어진 부드러움을 가지고 있습니다.

00:01:38.724 --> 00:01:45.281
오른쪽의, 고대 고딕체는
손으로 거친 철을 자른 것입니다.

00:01:45.281 --> 00:01:47.405
어떤 직선도 완전한 직선은 아닙니다.

00:01:47.405 --> 00:01:49.570
곡선들은 불분명합니다.

00:01:49.570 --> 00:01:58.124
기계나 프로그램으로는 포착할 수 없는
사람 손으로 만든 생명의 불꽃이 있죠.

00:01:58.131 --> 00:02:00.110
얼마나 큰 차이인가요?

00:02:00.110 --> 00:02:02.689
저는 거짓말을 합니다.

00:02:02.689 --> 00:02:05.677
TED에서 거짓말이라니. 
정말 죄송합니다.

00:02:05.677 --> 00:02:07.798
이 둘 다 컴퓨터에서 만들어졌어요.

00:02:07.798 --> 00:02:11.414
같은 소프트웨어, 같은 베지어 곡선으로
만들어진 같은 형태의 서체입니다.

00:02:11.416 --> 00:02:16.200
왼쪽에 있는것은 망명자인 
'수자나 닉코'에 의해 만들어 졌고.

00:02:16.204 --> 00:02:17.829
다른 하나는 제가 만들었습니다.

00:02:17.829 --> 00:02:20.995
도구는 동일하지만 
글자 모양은 다릅니다.

00:02:20.995 --> 00:02:23.728
디자이너가 다르기 때문에
글자 모양이 다릅니다.

00:02:23.728 --> 00:02:26.985
그게 다에요. 수자나는 글자들이 
저렇게 보이기 원했고,

00:02:26.985 --> 00:02:30.106
저는 이렇게 보이기 원했습니다. 
이게 이야기의 전부입니다.

00:02:30.106 --> 00:02:32.470
서체의 모습은 매우 고치기 쉽습니다.

00:02:32.470 --> 00:02:39.021
조각이나 건축학과 같은 예술과 달리,
세체는 그 방법들을 숨기고 있습니다

00:02:39.030 --> 00:02:41.827
저는 제 자신을 
산업 디자이너라고 생각합니다.

00:02:41.827 --> 00:02:43.393
제가 디자인한 물건이 생산되어

00:02:43.393 --> 00:02:47.099
읽혀지고, 의미를 전달하는
기능을 가지고 있습니다.

00:02:47.107 --> 00:02:48.753
하지만 그것 말고도 더 있습니다.

00:02:48.753 --> 00:02:50.601
미적 요소와 같은 것이 
좀 더 있습니다.

00:02:50.601 --> 00:02:53.317
디자이너들의 다른 해석에 의해

00:02:53.317 --> 00:02:56.349
두 문자 모양을 
달리지게 하는 것은 무엇일까요?

00:02:56.349 --> 00:03:01.272
패션 디자이너나 자동차 디자이너의
작품에서 알 수 있는것 처럼,

00:03:01.273 --> 00:03:06.890
여러 디자이너의 개인 스타일에 따라
작품이 만들어지는 것은 무엇일까요?

00:03:06.890 --> 00:03:08.660
저 또한 디자이너로서,

00:03:08.660 --> 00:03:12.900
기술적 영향을 느꼈던 몇번의 
경험이 있다는것을 인정합니다.

00:03:12.900 --> 00:03:15.959
이건 60년대 중반부터 나온 것인데요,

00:03:15.959 --> 00:03:19.894
금속활자에서 사진으로,
뜨거운 것에서 차가운것으로요.

00:03:19.896 --> 00:03:24.443
이것은 약간의 혜택을 주었을 뿐만 아니라
하나의 단점을 주기도 했습니다:

00:03:24.443 --> 00:03:33.562
문자를 위해 18개의 개별로 구분하여
수용하는 공간 문자 시스템입니다.

00:03:33.562 --> 00:03:38.334
이 시기에, 저는 이 18 개 단위 
상자 내에 가능한 많은

00:03:38.334 --> 00:03:45.282
다른 변종 산스 세리프 타입의 시리즈를
설계 해 달라는 요청을 받았습니다.

00:03:45.282 --> 00:03:47.141
빠르게 계산해 보았을 때,

00:03:47.141 --> 00:03:51.990
저는 오직 3 종류의 관련 디자인을 
만들 수 있다는 것을 알 수 있었죠.

00:03:51.990 --> 00:03:53.617
여러분들은 지금 
그 디자인을 보고 있습니다.

00:03:53.617 --> 00:03:55.751
압축된 팰베티가 서체, 
추가적으로 압축된 서체,

00:03:55.751 --> 00:03:57.885
가장 압축된 서체 (폰트 이름)

00:03:57.885 --> 00:04:01.589
이 엄격한 18개 단위가 저를 틀안에
가두어 버렸습니다.

00:04:01.592 --> 00:04:05.674
디자인의 비율을 이미 
결정 해버린 셈이었습니다.

00:04:05.674 --> 00:04:09.744
여기에, 적어도 
소문자 서체가 있습니다,

00:04:09.744 --> 00:04:12.176
여러분은 이 서체를 보고 
이렇게 말하시겠어요,

00:04:12.176 --> 00:04:15.575
" 불상한 매튜, 그는 반드시
이게 문제라고 제출해야 했을텐데,

00:04:15.575 --> 00:04:19.152
그래서, 신이 
그 결과를 보여 주는군." (웃음)

00:04:19.152 --> 00:04:20.689
저는 그러지 않기를 바랍니다.

00:04:20.689 --> 00:04:23.306
만약에 오늘날 똑같은 일을 했더라면,

00:04:23.306 --> 00:04:28.840
18개의 간격 단위 대신, 저는 
1000개의 간격단위로 했을 겁니다.

00:04:28.840 --> 00:04:31.293
분명히 저는 더 많은 변수를 
만들 수 있었을 겁니다.

00:04:31.293 --> 00:04:35.989
그렇다고 해서 이 3가지의
폰트 모양이 더 좋아졌을까요?

00:04:35.989 --> 00:04:37.841
실제로 해 보지 않고서
말로만 하기는 어렵습니다만,

00:04:37.841 --> 00:04:42.638
그게 18/1000 비율 보다 더 낫지
않다는 것 한가지는 장담할 수 있어요

00:04:42.638 --> 00:04:46.095
제 짐작으로는, 만약 개선이 되도
그것은 아주 약간이라는 거죠,

00:04:46.095 --> 00:04:50.574
왜냐하면 시스템의 기능에 맞게 
디자인 되었고,

00:04:50.574 --> 00:04:52.983
그리고 제가 말했듯이 모양은 
고치기가 매우 쉽서귿요.

00:04:52.983 --> 00:04:55.770
이것은 방법을 숨기고 있습니다.

00:04:55.770 --> 00:04:58.452
모든 산업 디자인들은 
제약조건들을 가지고 작업됩니다.

00:04:58.452 --> 00:05:00.944
이것은 예술이 아닙니다.

00:05:00.944 --> 00:05:05.482
해야할 질문은 제약조건은 
타협을 강제 하지 않느냐입니다.

00:05:05.489 --> 00:05:09.440
제약조건을 받아들임으로써 우리는
더 낮은 표준에서 작업하는걸까요?

00:05:09.440 --> 00:05:11.411
전 그렇게 믿지 않습니다.

00:05:11.411 --> 00:05:13.535
'찰스 임사'가 말한 말이 
저에게는 항상 격려가됬습니다.

00:05:13.535 --> 00:05:19.360
그가 말하길, 그는 항상 제약조건에서
일했지만 타협하지 않았다고 했습니다.

00:05:19.360 --> 00:05:24.275
제약 조건과 타협 사이의 차이는
분명 매우 애매 하지만,

00:05:24.280 --> 00:05:29.951
일에 대한 저의 태도가 
가장 중심에 있었습니다.

00:05:29.951 --> 00:05:32.707
이걸 읽었던 걸 기억하시나요?

00:05:32.707 --> 00:05:36.557
전화번호부인데, 옛 그리움을 즐길 수
있도록 슬라이드를 잠시 멈출게요.

00:05:36.557 --> 00:05:39.167
(웃음)

00:05:39.167 --> 00:05:45.938
미국 전화번호부를 위해 제가
70년대 초에 디자인한 판입니다.

00:05:45.951 --> 00:05:53.440
제가 처음 경험한 디지털 타입이었고,
상당히 유별난 세례식이었죠.

00:05:53.440 --> 00:05:58.439
제가 말했듯이 전화번호부를 위해 디자인
되어 등유와 유연으로 만들어진

00:05:58.439 --> 00:06:03.517
잉크를 이용한 초고속 인쇄기를 통해
신문에 작은 크기로 인쇄되었습니다.

00:06:03.517 --> 00:06:10.508
이건 타이포그래피 디자이너에게
친절한 환경은 아닙니다.

00:06:10.520 --> 00:06:18.669
제 난관은 매우 불리한 생산 조건에서도
최대한 잘 실행되게 설계하는 것이었죠.

00:06:18.669 --> 00:06:21.520
제가 말하지만, 그때 우리는
디지털 형태의 초기 단계였습니다.

00:06:21.520 --> 00:06:26.089
저는 손으로 사각형 그래프 용지에
모든 글자를 그려야 했습니다.

00:06:26.089 --> 00:06:28.006
벨 센티니얼에는 4개의 역기가
있었는데요--

00:06:28.006 --> 00:06:32.349
픽셀 하나씩 각 레스터선을 이용해서
키보드에 넣기 위해 인코딩 했죠.

00:06:32.349 --> 00:06:36.764
2년이란 시간이 걸렸지만,
저는 많은 것을 배웠습니다.

00:06:36.764 --> 00:06:39.824
개같은 뭔가에 의해
씹혀진 것처럼 보이지만,

00:06:39.838 --> 00:06:43.430
서체나 아귀에 있는 
교차지점에서 누락된 픽셀은

00:06:43.430 --> 00:06:53.299
싼 종이에 잉크확산의 효과를 공부한 후
그에 따라 글꼴을 제가 개정한 결과죠.

00:06:53.299 --> 00:06:59.232
이 이상한 가공물은 규모와 생산공정의
바람직하지 않은 영향을

00:06:59.244 --> 00:07:01.530
보상하기 위해 설계되었습니다.

00:07:01.530 --> 00:07:04.376
처음부터, AT&amp;T사는

00:07:04.376 --> 00:07:07.617
헬베티가 폰트로 전화번호부를 
만들고 싶어 했습니다.

00:07:07.617 --> 00:07:11.782
하지만 제 친구 에릭 스피커만이
그랬죠 헬베티가 영화에서 보면,

00:07:11.785 --> 00:07:16.550
헬베티가서체는 가능한 서로 
유사하게 보이도록 설계 되었다고요.

00:07:16.561 --> 00:07:19.835
이 작은 크기에서 가독성을
높이기 위한 방법은 아닙니다.

00:07:19.835 --> 00:07:22.425
슬라이드에서 보면 
매우 우아해 보입니다.

00:07:22.425 --> 00:07:27.905
여러분이 슬라이드 아래를 보시면,
제가 벨 센테니어에 가능한

00:07:27.905 --> 00:07:32.805
모양들을 조금씩 오픈한 
형태로 만들어야 했습니다.

00:07:32.823 --> 00:07:35.480
80년대 중반에는,

00:07:35.480 --> 00:07:40.026
디지털 윤곽선 글꼴과 
벡터 기술의 초기.

00:07:40.026 --> 00:07:44.291
그시기에 문제는 글꼴의 크기와

00:07:44.291 --> 00:07:52.141
컴퓨터 메모리에서 폰트를 찾고 저장하기
위해 필요한 데이터의 양이었어요.

00:07:52.141 --> 00:07:56.789
그것은 한번에 조판 시스템에 쓸수 
있는 글꼴의 수를 제한했죠.

00:07:56.789 --> 00:08:00.938
저는 데이터를 분석했습니다.

00:08:00.938 --> 00:08:06.707
그리고 왼쪽에 보이시는 셰리프 활자는 
중간에 보이시는 산 세리프 서체보다

00:08:06.707 --> 00:08:09.473
거의 두배 많은 데이터를 필요했습니다.

00:08:09.473 --> 00:08:13.495
왜냐하면 셰리프 브래킷에 우아한 
커브들 만들기 위해서는

00:08:13.495 --> 00:08:16.043
그 많은 포인트들이 필요했어요.

00:08:16.043 --> 00:08:19.477
그리고 슬라이드 아래쪽의 숫자들은

00:08:19.477 --> 00:08:24.964
각 폰트를 저장하는 데 필요한 
데이터의 양을 표시합니다.

00:08:24.964 --> 00:08:32.300
그래서 중간에 있는 산세리프는 81 대
151 으로 훨씬 더 경제적입니다.

00:08:32.313 --> 00:08:35.970
"아하. 엔지니어들은 문제가 있어"
라고 저는 생각했습니다.

00:08:35.970 --> 00:08:38.205
"디자이너가 구조하는구나."

00:08:38.205 --> 00:08:42.482
오른쪽에서 보이시는것이 제가 만든 
곡선 없는 셰리프 유형입니다.

00:08:42.499 --> 00:08:46.885
직선 부분과 모사리를 깍아 이용해서
다각형으로 만들었습니다.

00:08:46.898 --> 00:08:51.266
그리고 보세요, 
산세리프와같이 경제적입니다.

00:08:51.266 --> 00:08:53.565
오른쪽에 있는 이것은
차터라고 부릅니다.

00:08:53.565 --> 00:08:55.535
그래서 저는 그렇게 계산된 걸 가지고 
엔지니어 책임자에게 갔습니다.

00:08:55.535 --> 00:09:00.113
그리고 난 자랑스럽게 말했습니다.
"제가 당신의 문제를 풀었습니다."

00:09:00.121 --> 00:09:03.834
그가 물었어요, "오. 무슨 문제요?"

00:09:03.834 --> 00:09:05.480
그리고 제가 대답했죠,

00:09:05.480 --> 00:09:09.692
"당신도 알다시피 당신이 요구하는
세리프체와 엄청난 데이터 문제등요."

00:09:09.692 --> 00:09:12.754
그리고 그는 이렇게 말했죠 "아! 
우리는 지난주에 그 문제를 해결했죠."

00:09:12.754 --> 00:09:17.200
자릿수에 따라 서체의 크기를 
줄이는 소형의 틀을 만들었어요.

00:09:17.200 --> 00:09:20.718
이제 원하는 만큼 서체들을 
시스템에 많이 저장할 수있어요.

00:09:20.726 --> 00:09:23.340
"그렇군요, 알려줘서 감사합니다." 
라고 저는 말했어요.

00:09:23.340 --> 00:09:24.970
저는 또다시 실망했어요.

00:09:24.970 --> 00:09:31.525
기술적 문제가 없는 디자인 해결 
방법만이 저에게 남겨졌어요.

00:09:31.525 --> 00:09:33.957
하지만 이 이야기는 여기서부터 
저에게 흥미로웠습니다.

00:09:33.957 --> 00:09:37.942
홧김에 제 디자인을 버리지 않았어요.

00:09:37.953 --> 00:09:39.690
저는 꾸준히 인내심을 갖졌어요.

00:09:39.690 --> 00:09:45.108
실제로, 기술적 연습이 
미학적인 연습으로 된 셈이죠.

00:09:45.122 --> 00:09:48.171
어떻게 보면, 전 이 서체를 
좋아하게 됬습니다.

00:09:48.171 --> 00:09:50.490
유래는 그만 잊어요. 집어치워요.

00:09:50.490 --> 00:09:52.980
저는 그 디자인 자체를 좋아했습니다.

00:09:52.980 --> 00:09:58.993
단순화된 차터의 모양은 일반 음성 
품질과 복잡하지 않는 부족함으로

00:09:58.997 --> 00:10:01.487
저를 기쁘게 했습니다.

00:10:01.487 --> 00:10:07.280
자, 가끔 기술혁신 때에는 디자이너들은
정착되지 않은 것에 영향받고 싶어하죠.

00:10:07.296 --> 00:10:12.993
우리는 그 것에 반응하고 싶어 하고,
새로운 것을 탐구하도록 강요받고 싶어요

00:10:12.993 --> 00:10:15.837
그래서 차터는 저에게 우화같은 것이죠.

00:10:15.837 --> 00:10:22.847
결국엔, 기술과 카터의 디자인 간에는
강한 인과관계는 없었습니다.

00:10:22.847 --> 00:10:26.582
그동안 제가 기술에 대해 
오해 하고 있었죠.

00:10:26.582 --> 00:10:32.020
기술은 제게 뭔가를 제안했지만,
제 손이 하도록 강요하지는 않았고,

00:10:32.027 --> 00:10:34.744
저는 이것이 자주 발생한다고 
생각합니다.

00:10:34.744 --> 00:10:37.370
기술자들은 매우 똑똑합니다.

00:10:37.370 --> 00:10:40.456
제가 덜 똑똑하기 때문에 
가끔 좌절하고 그러지만,

00:10:40.456 --> 00:10:44.280
저는 항상 그들과 작업하는 것과 
그들한테서 배우는 것을 즐깁니다.

00:10:44.280 --> 00:10:46.600
90년 중반에 관해 이야기 하자면,

00:10:46.600 --> 00:10:51.681
저는 마이크로소프트회사에 화면
글꼴에 대해서 이야기를 시작했습니다.

00:10:51.681 --> 00:10:54.725
그 때까지는, 
화면에 표시되는 모든 서체들은

00:10:54.725 --> 00:10:59.269
물론, 기존에 쓰였던 글꼴을
기준으로 변형되었습니다.

00:10:59.269 --> 00:11:06.493
그러나 MS는 정확히 흐름과, 
전자 통신에 향한 쇄도,

00:11:06.493 --> 00:11:13.958
화면에서 읽고 쓰는 것이 인쇄된 것보다
더 우선 순위였다는 것을 봤죠.

00:11:13.958 --> 00:11:17.323
그 시점에서는 
우선 순위가 바뀌고 있었습니다.

00:11:17.323 --> 00:11:19.829
그들은 화면의 문제점을 직시하고

00:11:19.829 --> 00:11:23.134
그들이 원했던 것은 적용된게 아닌,
오직 화면의 문제인

00:11:23.134 --> 00:11:29.567
거친 해상도 디슬플레이를 위해 
디자인된 작은 코어 글꼴 세트였어요.

00:11:29.567 --> 00:11:31.539
저는 MS에게 말했죠,

00:11:31.539 --> 00:11:38.024
특정 기술에 맞는 서체를 디자인 
하는것을 자체 구식인 서체라고요.

00:11:38.024 --> 00:11:43.688
저는 과거에 기술적인 문제를 완화하기
위해 수많은 서체들을 디자인 했었죠.

00:11:43.697 --> 00:11:46.532
기술자들 덕분에 기술적인 
문제들은 해결되었습니다.

00:11:46.532 --> 00:11:49.021
그리고 제 서체 또한 그랬어요.

00:11:49.021 --> 00:11:52.152
그것은 단지 임시방편이었습니다.

00:11:52.152 --> 00:11:55.303
MS가 다시 와 말하길, 더 나은
해상도와 저렴한 컴퓨터 모니터는

00:11:55.323 --> 00:11:59.110
최소한 10년은 
더 있어야 생긴다고 했습니다.

00:11:59.116 --> 00:12:04.170
그래서 저는 나쁘지 않다고 생각했어요,
십년은 임시변통보다는 더 하니까요.

00:12:04.182 --> 00:12:06.183
그래서 저는 설득되었고, 
저는 확신했습니다.

00:12:06.183 --> 00:12:10.175
그리고 지금의 버다나와 조지아가 된
서체를 위해 작업했습니다.

00:12:10.177 --> 00:12:16.477
처음으로 종이에 직접하지 않고,
바로 화면에서 픽셀 적업을 했어요.

00:12:16.477 --> 00:12:20.330
그때 당시의 화면은 이진법이었습니다.

00:12:20.330 --> 00:12:23.370
픽셀은 켜져있거나 꺼져있었습니다.

00:12:23.370 --> 00:12:27.685
지금 여러분이 보이시는 것은 
대문자 H의 윤곽인데요,

00:12:27.692 --> 00:12:30.493
얇은 검은선이 윤곽입니다.

00:12:30.493 --> 00:12:37.189
회색은 등고선인데요, 어떻게 비트맵에
덧붙여 메모리에 저장할지 알려주죠.

00:12:37.189 --> 00:12:39.024
화면에 어떻게 보이는지 알려줍니다.

00:12:39.024 --> 00:12:42.170
비트맵이 아웃라인 한테서 
래스터화됬어요.

00:12:42.170 --> 00:12:50.871
모두 직선인 이 대문자 H는 데카르트 
그리드 위에서 정확히 동기화됐습니다.

00:12:50.871 --> 00:12:53.993
O는 그렇지않죠.

00:12:53.993 --> 00:12:56.720
이것은 폰트 디자인이기 보다는 
오히려 벽돌쌓기 같습니다.

00:12:56.720 --> 00:12:59.621
하지만 믿어 주세요,
이건 좋은 비트맵 O 입니다.

00:12:59.621 --> 00:13:04.106
X와 Y축 모두 대칭이란 이유 때문이죠.

00:13:04.116 --> 00:13:08.704
사실상 이진수 비트맵에서 
더 이상 요구할 수 없습니다.

00:13:08.704 --> 00:13:12.298
저는 때때로 어려운 글자를 
서너가지의 다른 버전의

00:13:12.298 --> 00:13:14.814
예를들어 소문자 'a' 만 
만들더라도 것을 만드는데요.

00:13:14.814 --> 00:13:18.520
그리고 나면, 떨어진 상태에서
그중 가장 최고를 선택하죠.

00:13:18.520 --> 00:13:20.595
그중 최고가 없었어요,

00:13:20.595 --> 00:13:27.480
그래서 그중 어느것이 덜 나쁜지를 
디자이너가 판단하죠.

00:13:27.480 --> 00:13:29.900
그게 타협인 것일까요?

00:13:29.900 --> 00:13:34.464
제겐 그렇지 않아요. 기술이 허락하는
최고의 기준으로 일을하고 있다면,

00:13:34.464 --> 00:13:39.253
비록 그 기준이 이상적인 것에서 
상당히 멀다 하더라도 말이죠.

00:13:39.253 --> 00:13:42.982
여러분은 이 슬라이드에 두가지 
비트맵 서체를 보실텐데요,

00:13:42.982 --> 00:13:46.590
위에있는 소문자 "a"가 아래에 있는 
"a" 보다 더 좋은 것 같아요.

00:13:46.590 --> 00:13:49.159
물론, 완벽한지는 않아요.

00:13:49.159 --> 00:13:54.446
아마 서체가 더 작았더라면 
효과를 더 자세히 볼수 있겠죠.

00:13:54.446 --> 00:13:58.338
저는 필요이상으로 이상주의자가
아닌 실용주의자입니다.

00:13:58.341 --> 00:14:02.070
어떠한 특정한 기질에 따라,
완벽하게 할 수는 없지만,

00:14:02.070 --> 00:14:09.490
능력이 닿는 데까지 최선을 다하는 것에
대한 특정한 만족감이 있습니다.

00:14:09.490 --> 00:14:14.334
조지아 이태리 폰트의 소문자 H입니다.

00:14:14.334 --> 00:14:18.457
비트 맵이 들쭉날쭉 거칠해 보이죠.
들쑥나쭉 거칩니다.

00:14:18.466 --> 00:14:23.802
실험을 통해 저는 스트로크가
픽셀의 경계에서 잘 분해되도록

00:14:23.802 --> 00:14:30.439
이탤릭체를 위한 최상의 기울어짐이 
있다는것을 발견했습니다

00:14:30.440 --> 00:14:37.241
이 예는, 얼마나 거칠고 좌우 다리가
같은 레벨에서 분화하는지 보이죠.

00:14:37.241 --> 00:14:40.740
그건 승리한 것입니다.
바로 거기가 좋은 것이죠.

00:14:40.740 --> 00:14:45.858
그리고 낮은 깊이에서는, 
많은 선택의 여지가 없어요.

00:14:45.858 --> 00:14:50.886
이것은 "S"자 입니다.

00:14:50.886 --> 00:14:55.640
버다나와 조지아 글꼴이 
나온지 18년이 됐습니다.

00:14:55.640 --> 00:14:57.780
MS는 절대적으로 옳았습니다.

00:14:57.780 --> 00:15:00.194
10년이라는 시간이 걸렸지만,

00:15:00.194 --> 00:15:04.924
이제 화면표시에는
해상도가 향상 되었고,

00:15:04.927 --> 00:15:11.549
앤티 앨리어싱등을 통해 매우
높은 광도계 향상을 가져왔습니다.

00:15:11.553 --> 00:15:15.250
그것들의 미션이 모두 완료됐지만,

00:15:15.250 --> 00:15:21.500
제가 거친 표시용 화면을 위해 디자인한
글꼴들의 종말을 의미하는건가요?

00:15:21.511 --> 00:15:24.906
지금은 사용되지 않는 화면과

00:15:24.906 --> 00:15:28.568
시장에 나오는 새로운 글꼴들 
속에서 살아 남을까요?

00:15:28.581 --> 00:15:36.421
혹은 기술에서 독립적인 그들만의 
기술 진화의 틈새를 만들었을까요?

00:15:36.421 --> 00:15:41.397
달리 말하면, 그것들은 활자체의
흐름속으로 흡수된 것일까요?

00:15:41.400 --> 00:15:45.058
저는 확실하지 않지만 
그것들은 꽤 잘 이용돼 왔어요.

00:15:45.058 --> 00:15:49.713
"이봐, 오늘날 마모율로 보자면,
18년은 무엇을 해도 좋은 나이야,

00:15:49.713 --> 00:15:51.618
그래서 나는 불평하지 않아."

00:15:51.618 --> 00:15:54.457
감사합니다.

00:15:54.457 --> 00:15:56.634
(박수)

