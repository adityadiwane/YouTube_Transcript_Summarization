WEBVTT
Kind: captions
Language: zh-TW

00:00:00.000 --> 00:00:07.000
譯者: Gibbs Lee
審譯者: Justine Bai

00:00:12.709 --> 00:00:14.235
我們以龐大的數量

00:00:14.235 --> 00:00:15.950
消耗著印刷文字

00:00:15.950 --> 00:00:17.449
在世界上絕大多數地方

00:00:17.449 --> 00:00:19.107
這是完全無可避免的

00:00:19.107 --> 00:00:22.667
但是很少有消費者會在意

00:00:22.687 --> 00:00:24.462
如果事實上 字體的創造

00:00:24.462 --> 00:00:27.226
有人類力量參與其中

00:00:27.226 --> 00:00:30.579
如果它不是從軟體環境裡自動生成

00:00:30.579 --> 00:00:33.376
那麼某一特定的字體從何而來

00:00:33.376 --> 00:00:36.620
或者何時由何人設計

00:00:37.088 --> 00:00:40.613
但我必須關心這類問題

00:00:40.613 --> 00:00:42.130
因為這是我的工作

00:00:42.130 --> 00:00:44.340
我和另外少數人

00:00:44.340 --> 00:00:46.454
會因為T和E之間的間距問題

00:00:46.454 --> 00:00:49.048
而怒不可遏

00:00:49.048 --> 00:00:50.948
正如你們所見

00:00:50.948 --> 00:00:52.390
我得換掉那張幻燈片

00:00:52.390 --> 00:00:54.461
因為我無法忍受 克理斯也是

00:00:54.461 --> 00:00:56.122
這樣 總算好了

00:00:56.122 --> 00:00:57.890
所以我的演講是關於

00:00:57.890 --> 00:01:01.290
技術與印刷文字之間的聯繫

00:01:01.290 --> 00:01:03.953
自從我開始工作以來

00:01:03.953 --> 00:01:06.825
技術經歷了幾次變革：

00:01:06.825 --> 00:01:10.920
相片 數位 桌面 螢幕 網頁

00:01:11.486 --> 00:01:13.464
我必須在這些變革中求得生存

00:01:13.464 --> 00:01:15.928
並且試圖理解這對我的設計工作

00:01:15.928 --> 00:01:17.319
意味著什麼

00:01:17.319 --> 00:01:22.201
這張是關於工具對形態的影響

00:01:22.489 --> 00:01:25.529
這兩個字母 兩個K

00:01:25.529 --> 00:01:28.715
你們左手邊 我的右手邊的 是現代設計

00:01:28.715 --> 00:01:30.126
在電腦上完成的

00:01:30.126 --> 00:01:32.168
所有的直線都絕對筆直

00:01:32.168 --> 00:01:34.978
這些曲線根據貝塞爾曲線公式

00:01:34.978 --> 00:01:38.531
都有種精準的平滑度

00:01:38.724 --> 00:01:41.221
右邊是古代哥德字母

00:01:41.221 --> 00:01:45.280
是用耐久的鋼材質手工切割的

00:01:45.280 --> 00:01:47.405
沒有一條絕對的直線

00:01:47.405 --> 00:01:49.570
曲線也相對微妙

00:01:49.570 --> 00:01:54.284
它有種來自人類手工的生命力

00:01:54.284 --> 00:01:56.198
這是機器或電腦程式

00:01:56.198 --> 00:01:58.131
永遠也無法捕捉的

00:01:58.131 --> 00:02:00.110
多麼強烈的對比

00:02:00.110 --> 00:02:02.689
好吧 其實我撒謊了

00:02:02.689 --> 00:02:05.677
在TED上撒謊 真是很抱歉

00:02:05.677 --> 00:02:07.798
這兩種字體都是在電腦上製作的

00:02:07.798 --> 00:02:09.724
同樣的軟體 同樣是貝塞爾公式

00:02:09.724 --> 00:02:11.416
同樣的字體格式

00:02:11.416 --> 00:02:13.950
你們左邊這個

00:02:13.950 --> 00:02:16.204
是由 Emigre 的 Zuzana Licko 所創作的

00:02:16.204 --> 00:02:17.639
右邊這個是我製作的

00:02:17.639 --> 00:02:20.995
工具是一樣的 而字體卻不一樣

00:02:20.995 --> 00:02:22.518
這些字體的不同

00:02:22.518 --> 00:02:23.724
是由於設計者的不同

00:02:23.724 --> 00:02:26.985
僅此而已 Zuzana 想要那樣的字體

00:02:26.985 --> 00:02:30.106
而我想要這樣的字體 就是這樣

00:02:30.106 --> 00:02:32.310
印刷文字的適應性很強

00:02:32.310 --> 00:02:35.631
不像藝術品 如雕塑或建築

00:02:35.631 --> 00:02:38.762
印刷文字隱藏了手法

00:02:39.030 --> 00:02:41.827
我把自己看作是工業設計者

00:02:41.827 --> 00:02:43.393
我設計的東西要投入生產

00:02:43.393 --> 00:02:45.269
而且具有功能：

00:02:45.269 --> 00:02:47.107
滿足人們閱讀與表達的需要

00:02:47.107 --> 00:02:48.753
但字體的設計不止於此

00:02:48.753 --> 00:02:50.601
其中還有美學元素

00:02:50.601 --> 00:02:53.317
通過不同設計者的不同解讀

00:02:53.317 --> 00:02:56.349
這兩種字體為何變得不同？

00:02:56.349 --> 00:02:58.362
是什麼賦予了某些設計師的作品

00:02:58.362 --> 00:03:01.273
一種特有的個人風格

00:03:01.273 --> 00:03:03.810
就像你在時裝設計 汽車設計等作品中

00:03:03.810 --> 00:03:06.885
所能發現的那樣？

00:03:06.885 --> 00:03:08.660
我承認 作為一名設計師

00:03:08.660 --> 00:03:09.810
曾經有些時候

00:03:09.810 --> 00:03:12.899
我的確感受到技術的影響力

00:03:12.899 --> 00:03:15.959
這是從60年代中期開始

00:03:15.959 --> 00:03:18.194
金屬鑄排變成照相排版

00:03:18.194 --> 00:03:19.896
“熱排”變成“冷排”

00:03:19.896 --> 00:03:21.093
這帶來一些好處

00:03:21.093 --> 00:03:24.439
但同時也有一個弊端：

00:03:24.439 --> 00:03:27.112
文字間距系統

00:03:27.112 --> 00:03:31.095
只提供18個獨立的單位

00:03:31.095 --> 00:03:33.558
來讓我們調試字母

00:03:33.558 --> 00:03:35.534
這時 有人讓我設計

00:03:35.534 --> 00:03:38.272
一系列的壓縮無襯線字體

00:03:38.272 --> 00:03:41.435
要有盡可能多的變體

00:03:41.435 --> 00:03:44.948
但都限於這18個單位

00:03:45.282 --> 00:03:46.921
做了簡單的算數後

00:03:46.921 --> 00:03:49.390
我發現我其實只能製作

00:03:49.390 --> 00:03:53.617
三個有關設計 如大家所見

00:03:53.617 --> 00:03:56.208
Helvetica字體的壓縮版 超壓縮版

00:03:56.208 --> 00:04:00.019
和終極壓縮版
這種嚴格的18單位的系統

00:04:00.019 --> 00:04:01.592
著實限制了我的發揮

00:04:01.592 --> 00:04:03.425
它一定程度上決定了

00:04:03.425 --> 00:04:05.629
設計的比例

00:04:05.714 --> 00:04:09.744
這是這三種字體的小寫體

00:04:09.744 --> 00:04:12.436
看著這些 你會不會說：

00:04:12.436 --> 00:04:15.575
可憐的馬修 他不得不屈服於一個問題

00:04:15.575 --> 00:04:18.933
上帝可鑒 結果就是這樣

00:04:19.382 --> 00:04:20.689
我不希望這樣

00:04:20.689 --> 00:04:22.930
如果這個任務放到今天

00:04:22.930 --> 00:04:25.756
我會用1000個單位

00:04:25.756 --> 00:04:28.484
而不是18個

00:04:28.720 --> 00:04:31.293
很明顯 我就能做更多變體

00:04:31.293 --> 00:04:35.989
但是這三種字體會變得更好嗎？

00:04:35.989 --> 00:04:37.841
若沒有著手去做 則很難說

00:04:37.841 --> 00:04:40.788
但我能告訴你 在1000/18的比例下

00:04:40.788 --> 00:04:42.637
他們絕不會變得更好

00:04:42.637 --> 00:04:44.575
我的直覺告訴你們 任何的改善

00:04:44.575 --> 00:04:47.653
都會微乎其微 因為它們在設計之初

00:04:47.653 --> 00:04:50.574
就被限於一個必須去適應的系統

00:04:50.574 --> 00:04:52.983
而我剛才說過 印刷文字的適應性很高

00:04:52.983 --> 00:04:55.770
印刷字的確隱藏了其手法

00:04:55.770 --> 00:04:58.452
所有的工業設計師都在制約內工作

00:04:58.452 --> 00:05:00.944
這不是藝術

00:05:00.944 --> 00:05:02.822
問題是 制約會不會

00:05:02.822 --> 00:05:05.489
強加某種折衷？

00:05:05.489 --> 00:05:07.000
接受一種制約的同時

00:05:07.000 --> 00:05:09.449
你是否降低了工作標準？

00:05:09.449 --> 00:05:10.731
我不這樣認為

00:05:10.731 --> 00:05:13.535
查爾斯·伊姆斯的話
一直鼓勵著我

00:05:13.535 --> 00:05:15.080
他說 他明白自己的工作

00:05:15.080 --> 00:05:16.278
受到一些制約

00:05:16.278 --> 00:05:19.344
但從不會降低工作品質

00:05:19.344 --> 00:05:21.905
制約和折衷

00:05:21.905 --> 00:05:24.280
之間的區別很微妙

00:05:24.280 --> 00:05:28.849
但卻是我工作態度的核心

00:05:29.951 --> 00:05:32.842
還記得這種閱讀體驗嗎？

00:05:32.842 --> 00:05:34.577
電話簿 這張幻燈片會停一會

00:05:34.577 --> 00:05:38.402
讓你們享受懷舊的愉悅

00:05:38.802 --> 00:05:41.548
這是70年代中期，

00:05:41.548 --> 00:05:44.177
我設計的 Bell Centennial 字體

00:05:44.177 --> 00:05:45.951
在美國電話簿上的早期試驗

00:05:45.951 --> 00:05:49.270
這是我對數碼印刷字的初次體驗

00:05:49.270 --> 00:05:53.023
如思想洗禮一般

00:05:53.440 --> 00:05:55.039
我說過 這是為電話簿設計的

00:05:55.039 --> 00:05:58.407
要以微小字型大小印在新聞用紙上

00:05:58.407 --> 00:06:00.725
用高速的輪轉印刷機

00:06:00.725 --> 00:06:03.477
和煤油煤煙制的墨水

00:06:03.477 --> 00:06:07.318
這種工作環境對一個排印設計者來說

00:06:07.318 --> 00:06:10.083
並不舒適

00:06:10.520 --> 00:06:11.979
所以對我的挑戰就是

00:06:11.979 --> 00:06:14.370
設計的字體在這種惡劣的生產環境中

00:06:14.370 --> 00:06:18.499
能盡可能地表現出色

00:06:18.665 --> 00:06:21.519
如我所說 我們還處於數碼排印的初期

00:06:21.519 --> 00:06:24.159
我必須在方格紙上

00:06:24.159 --> 00:06:26.054
動手畫出每個字

00:06:26.054 --> 00:06:28.006
——Bell Centennial 字體有四種粗細——

00:06:28.006 --> 00:06:31.359
一個像素一個像素地畫 然後給每個光柵線編碼

00:06:31.359 --> 00:06:32.480
使它們適用於鍵盤

00:06:32.480 --> 00:06:36.075
我花了兩年時間 但學到了很多

00:06:36.764 --> 00:06:38.394
這些字母看起來像是被

00:06:38.394 --> 00:06:39.958
狗或其他什麼咬了一樣

00:06:39.958 --> 00:06:41.780
但是在筆劃的交叉點

00:06:41.780 --> 00:06:43.385
之所以有些像素缺失

00:06:43.385 --> 00:06:46.309
是因為我瞭解了墨水

00:06:46.309 --> 00:06:49.389
在廉價紙上會是什麼效果

00:06:49.505 --> 00:06:53.242
於是對字型做了相應修改

00:06:53.242 --> 00:06:56.492
設計這些奇怪的人造字型是為了抵消

00:06:56.492 --> 00:06:59.244
測量和生產過程所帶來的

00:06:59.244 --> 00:07:01.530
不理想的效果

00:07:01.530 --> 00:07:04.376
一開始 AT&amp;T 想要

00:07:04.376 --> 00:07:07.617
在電話簿裡應用 Helvetica 字體

00:07:07.617 --> 00:07:09.282
但是正如我的朋友艾瑞克·史皮克曼

00:07:09.282 --> 00:07:11.785
在《Helvetica》這部紀錄片理所說
如果大家看過的話

00:07:11.785 --> 00:07:13.820
Helvetica 字體的設計是為了

00:07:13.820 --> 00:07:16.561
讓所有字母都盡可能相似

00:07:16.561 --> 00:07:19.835
這並不是為了提高小號字的可讀性

00:07:19.835 --> 00:07:22.425
在幻燈片上看相當優美

00:07:22.425 --> 00:07:24.615
我必須在 Bell Centennial 字體中

00:07:24.615 --> 00:07:27.615
盡可能的區分每一個數字的樣式

00:07:27.615 --> 00:07:30.440
這是通過將這種樣式的形狀打開

00:07:30.440 --> 00:07:32.823
如最後一行這樣

00:07:32.823 --> 00:07:35.480
這時已經快到80年代中期

00:07:35.480 --> 00:07:38.036
這是數碼輪廓字體和向量技術

00:07:38.036 --> 00:07:40.393
發展的早期

00:07:40.393 --> 00:07:42.431
當時有一個問題

00:07:42.431 --> 00:07:44.287
是關於字型的大小

00:07:44.287 --> 00:07:48.981
以及在電腦裡尋找和儲存一種字型

00:07:48.981 --> 00:07:51.791
所需要的數據量

00:07:52.141 --> 00:07:54.889
這限制了你能一次從排版系統中

00:07:54.889 --> 00:07:56.789
得到的字型的數量

00:07:56.789 --> 00:08:00.938
我對這些數據進行了分析

00:08:00.938 --> 00:08:03.462
發現 你們左手邊

00:08:03.462 --> 00:08:04.921
這種典型的襯線體

00:08:04.921 --> 00:08:06.937
需要的數據量幾乎是

00:08:06.937 --> 00:08:09.473
中間的無襯線體的兩倍

00:08:09.473 --> 00:08:14.215
這是因為做出優雅的襯線弧度

00:08:14.215 --> 00:08:16.360
所需要的那些點

00:08:16.580 --> 00:08:19.477
順便說一句 幻燈片底部的數字

00:08:19.477 --> 00:08:22.329
它們表示了儲存各種字體

00:08:22.329 --> 00:08:24.704
所需要的數據量

00:08:24.984 --> 00:08:27.150
所以位於中間的無襯線體

00:08:27.150 --> 00:08:30.114
去掉了襯線 則變得更省數據

00:08:30.114 --> 00:08:32.313
由原來的151變成81

00:08:32.313 --> 00:08:35.970
我想：啊哈 工程師們遇到了問題

00:08:35.970 --> 00:08:38.205
我們設計師來解決

00:08:38.205 --> 00:08:40.552
我便製作了一種襯線體 就是你們右邊這個

00:08:40.552 --> 00:08:42.499
去掉了彎曲的襯線

00:08:42.499 --> 00:08:44.915
我把它們變成了多邊形
由許多線段組成

00:08:44.915 --> 00:08:46.898
且對襯線彎曲處進行了斜切

00:08:46.898 --> 00:08:51.266
看 結果跟無襯線體一樣節省數據

00:08:51.266 --> 00:08:53.565
右邊這種 我們叫它 Charter 字體

00:08:53.565 --> 00:08:55.535
所以我帶著這些數據

00:08:55.535 --> 00:08:57.993
去找工程部主管 驕傲地說：

00:08:57.993 --> 00:09:00.121
我解決了你的問題

00:09:00.121 --> 00:09:03.834
他說：哦 什麼問題？

00:09:03.834 --> 00:09:05.480
我說：你知道的 就是

00:09:05.480 --> 00:09:08.897
襯線體的數據量要求過大之類的

00:09:08.897 --> 00:09:12.444
他說：我們上禮拜已經解決了

00:09:12.444 --> 00:09:14.600
我們寫了一個壓縮例程

00:09:14.600 --> 00:09:17.180
將所有字型的大小減小一個數量級

00:09:17.180 --> 00:09:19.168
現在你想在系統裡有多少字型

00:09:19.168 --> 00:09:20.726
就能有多少

00:09:20.726 --> 00:09:23.340
我說：好吧 謝謝你讓我知道

00:09:23.340 --> 00:09:24.970
再次受挫

00:09:24.970 --> 00:09:27.015
我手裡的這個設計方案

00:09:27.015 --> 00:09:31.311
卻是為了一個不存在的技術問題

00:09:31.488 --> 00:09:33.957
但就在這裡 我突然來了興致

00:09:33.957 --> 00:09:36.552
我並沒有一氣之下

00:09:36.552 --> 00:09:37.953
扔掉我的設計

00:09:37.953 --> 00:09:39.690
我還要繼續

00:09:39.690 --> 00:09:41.858
一開始的一個技術性操作

00:09:41.858 --> 00:09:45.122
現在卻成了一個美學課題

00:09:45.122 --> 00:09:48.171
也就是說 我開始喜歡這個字體了

00:09:48.171 --> 00:09:50.490
別想一開始為什麼了 管他呢

00:09:50.490 --> 00:09:52.980
我就是喜歡這個字體本身

00:09:52.980 --> 00:09:55.363
Charter 的這種簡化形式

00:09:55.363 --> 00:09:57.446
給了它一種簡單明了的特質

00:09:57.446 --> 00:09:58.997
和不做作的留白

00:09:58.997 --> 00:10:01.487
這讓我很高興

00:10:01.487 --> 00:10:04.040
要知道 在技術革新的年代

00:10:04.040 --> 00:10:05.560
設計者想要被

00:10:05.560 --> 00:10:07.296
未知的想法所影響

00:10:07.296 --> 00:10:10.377
我們想回應未知 想推進自己

00:10:10.377 --> 00:10:12.938
探索未知的世界

00:10:12.938 --> 00:10:15.837
所以 Charter 是我給自己上的一課

00:10:15.837 --> 00:10:19.627
最終 技術和 Charter 的設計之間

00:10:19.627 --> 00:10:22.820
並沒有確切的因果聯繫

00:10:22.820 --> 00:10:26.582
我當時誤解了那些技術

00:10:26.582 --> 00:10:29.910
技術的確給了我一點啟發

00:10:29.910 --> 00:10:32.027
但並沒有迫使我做什麼

00:10:32.027 --> 00:10:34.744
而且我認為這時常發生

00:10:34.744 --> 00:10:37.370
大家知道 工程師都很聰明

00:10:37.370 --> 00:10:38.926
除了偶爾因為自己不夠聰明

00:10:38.926 --> 00:10:40.453
而感到挫敗以外

00:10:40.453 --> 00:10:42.180
我一直都為能跟他們合作和

00:10:42.180 --> 00:10:44.258
向他們學習而感到高興

00:10:44.258 --> 00:10:46.600
說到這裡 在90年代中期

00:10:46.600 --> 00:10:49.291
我開始跟微軟談論

00:10:49.291 --> 00:10:51.679
螢幕字型的事情

00:10:51.679 --> 00:10:54.100
直到那時 所有的螢幕字型

00:10:54.100 --> 00:10:56.853
當然都還是從之前的印刷字

00:10:56.853 --> 00:10:59.230
改造而成

00:10:59.230 --> 00:11:01.733
但是微軟正確地預見到

00:11:01.733 --> 00:11:03.883
這次變革 這次向

00:11:03.883 --> 00:11:06.670
電子通訊的潮湧

00:11:06.670 --> 00:11:08.910
向螢幕閱讀和書寫的邁進

00:11:08.910 --> 00:11:11.833
而印刷產物可能會在重要性上

00:11:11.833 --> 00:11:14.056
位居第二

00:11:14.056 --> 00:11:17.635
所以 重點任務就是開始嘗試

00:11:17.635 --> 00:11:19.829
他們想要一小組核心字型

00:11:19.829 --> 00:11:23.134
不是改編而來 而是專為螢幕設計

00:11:23.134 --> 00:11:25.707
來解決一些螢幕上的問題

00:11:25.707 --> 00:11:29.549
也就是他們低解析度的顯示螢幕

00:11:29.549 --> 00:11:33.080
我跟微軟說，專門為一項技術

00:11:33.080 --> 00:11:34.649
而設計的字體

00:11:34.649 --> 00:11:38.024
首先自身就過時了

00:11:38.024 --> 00:11:40.118
我過去設計了很多字體

00:11:40.118 --> 00:11:43.697
都為了緩解技術問題

00:11:43.697 --> 00:11:46.532
多虧工程師們 技術問題已經沒有了

00:11:46.532 --> 00:11:49.021
而我的設計也沒有了

00:11:49.021 --> 00:11:52.152
因為這種設計只是一個中轉站

00:11:52.152 --> 00:11:53.693
微軟回來告訴我

00:11:53.693 --> 00:11:55.323
負擔得起的解析度較高的

00:11:55.323 --> 00:11:56.520
電腦顯示器

00:11:56.520 --> 00:11:59.116
至少還需十年

00:11:59.116 --> 00:12:01.770
所以我想 十年 那還不算太糟

00:12:01.770 --> 00:12:04.182
起碼比中轉期要長

00:12:04.182 --> 00:12:06.183
這樣我就被說服了

00:12:06.183 --> 00:12:08.505
我們開始合作
製作出今天的 Verdana

00:12:08.505 --> 00:12:10.177
和Georgia字體

00:12:10.177 --> 00:12:12.517
第一次沒有在紙上工作

00:12:12.517 --> 00:12:16.477
而是從像素開始就直接在螢幕上操作

00:12:16.477 --> 00:12:20.330
那時 螢幕是二進制的

00:12:20.330 --> 00:12:23.370
像素要麼開 要麼關

00:12:23.370 --> 00:12:26.225
這是一個字母的輪廓

00:12:26.225 --> 00:12:27.692
大寫 H

00:12:27.692 --> 00:12:30.493
其中的細黑線便是輪廓

00:12:30.493 --> 00:12:33.369
這就是它如何在電腦裡儲存的

00:12:33.369 --> 00:12:35.039
輪廓置於點陣圖之上

00:12:35.039 --> 00:12:37.187
也就是灰色區域

00:12:37.187 --> 00:12:39.024
這就是它在熒幕上如何顯示的

00:12:39.024 --> 00:12:42.170
點陣圖在輪廓之內都被光柵化

00:12:42.170 --> 00:12:44.411
這裡 H 是由直線寫成

00:12:44.411 --> 00:12:46.499
所以輪廓和點陣圖在直角網格上

00:12:46.499 --> 00:12:49.434
完美同步

00:12:50.867 --> 00:12:53.638
而字母 O 就不是了

00:12:53.993 --> 00:12:56.720
這看起來更像壘磚 而不是字體設計

00:12:56.720 --> 00:12:59.621
但相信我 這是個很好的 O 形點陣圖

00:12:59.621 --> 00:13:01.636
就是因為它在 x 和 y 軸上

00:13:01.636 --> 00:13:04.116
都是對稱的

00:13:04.116 --> 00:13:06.974
在二進制的點陣圖上 能達到這樣

00:13:06.974 --> 00:13:08.694
其實就夠了

00:13:08.694 --> 00:13:11.408
有時我會為一個較麻煩的字母

00:13:11.408 --> 00:13:13.454
做3到4個不同版本

00:13:13.454 --> 00:13:14.960
比如小寫 a

00:13:14.960 --> 00:13:18.500
然後靠後站一點選擇一個最好的

00:13:18.500 --> 00:13:20.595
其實 沒有最好的

00:13:20.595 --> 00:13:23.020
那麼設計者就要判斷

00:13:23.020 --> 00:13:24.409
試圖去決定

00:13:24.409 --> 00:13:27.450
哪個是最不糟糕的

00:13:27.450 --> 00:13:29.900
這算一種折衷嗎？

00:13:29.900 --> 00:13:31.446
對我來說不是 因為這是

00:13:31.446 --> 00:13:34.533
技術有限的情況下的最高標準

00:13:34.533 --> 00:13:36.742
儘管這個標準

00:13:36.742 --> 00:13:39.221
可能遠低於理想水準

00:13:39.221 --> 00:13:40.812
你現在看到的是

00:13:40.812 --> 00:13:43.324
兩種不同的點陣圖字型

00:13:43.324 --> 00:13:44.670
我認為 上面一種的字母 a

00:13:44.670 --> 00:13:46.583
好於下面一種的字母 a

00:13:46.583 --> 00:13:48.751
但上面那個仍不是很好

00:13:49.159 --> 00:13:52.976
或許縮小點效果會更好

00:13:52.976 --> 00:13:54.442
好吧 或許不是

00:13:54.442 --> 00:13:56.838
所以說我是個實用主義者
而非理想主義者

00:13:56.838 --> 00:13:58.341
一切從需求出發

00:13:58.341 --> 00:14:00.270
對一種特定的性情

00:14:00.270 --> 00:14:02.250
都有一種特定的滿足感

00:14:02.250 --> 00:14:05.608
做的事或許不能完美

00:14:05.608 --> 00:14:09.477
但仍然是盡你所能

00:14:09.477 --> 00:14:14.334
這是小寫 h 的 Georgia 斜體

00:14:14.334 --> 00:14:16.777
點陣圖看起來邊緣不齊且粗糙

00:14:16.777 --> 00:14:18.466
但它就是這樣的

00:14:18.466 --> 00:14:20.462
但是通過實驗我發現

00:14:20.462 --> 00:14:23.679
對螢幕上的斜體來說

00:14:23.679 --> 00:14:25.625
有一個最佳的斜度

00:14:25.625 --> 00:14:27.957
從而讓筆畫在像素邊緣

00:14:27.957 --> 00:14:30.016
能合理地分割

00:14:30.440 --> 00:14:33.221
看看這個例子 儘管粗糙

00:14:33.221 --> 00:14:35.271
但是左邊和右邊

00:14:35.271 --> 00:14:37.220
卻在同一水平線分割

00:14:37.220 --> 00:14:40.410
這就是勝利 這樣就很好了

00:14:40.740 --> 00:14:43.918
當然了 在較低的色深

00:14:43.918 --> 00:14:45.841
你並無太多選擇

00:14:45.841 --> 00:14:50.093
這是 s 如果大家看不太出來的話

00:14:50.886 --> 00:14:53.040
距離 Verdana 和 Georgia 的發佈

00:14:53.040 --> 00:14:55.690
已有18年了

00:14:55.690 --> 00:14:57.780
微軟當時是對的

00:14:57.780 --> 00:15:00.194
真的花了十年

00:15:00.194 --> 00:15:01.994
但現在的螢幕

00:15:01.994 --> 00:15:04.927
的確改善了空間解析度

00:15:04.927 --> 00:15:08.399
而且極大提高了光度解析度

00:15:08.399 --> 00:15:11.553
這多虧了反鋸齒之類的技術

00:15:11.553 --> 00:15:15.250
那麼微軟的使命完成了

00:15:15.250 --> 00:15:16.980
是否意味著我一開始

00:15:16.980 --> 00:15:19.200
為低解析度螢幕設計的字體

00:15:19.200 --> 00:15:21.511
又將被拋棄？

00:15:21.511 --> 00:15:23.169
在那批螢幕過時

00:15:23.169 --> 00:15:25.168
新的網頁字型湧入市場的情況下

00:15:25.168 --> 00:15:28.581
我設計的字體能生存下去嗎？

00:15:28.581 --> 00:15:30.441
或者 它們是否建立了

00:15:30.441 --> 00:15:32.929
自己的演化領域

00:15:32.929 --> 00:15:36.416
並獨立於技術？

00:15:36.416 --> 00:15:38.287
換句話說 它們是否被納入

00:15:38.287 --> 00:15:41.000
排印設計的主流？

00:15:41.400 --> 00:15:45.058
我不確定 但目前為止它們表現還不錯

00:15:45.058 --> 00:15:47.553
嘿 以今天的損耗率來看

00:15:47.553 --> 00:15:49.704
18年對任何事物都很長了

00:15:49.704 --> 00:15:51.618
所以我並沒抱怨什麼

00:15:51.618 --> 00:15:52.587
謝謝

00:15:52.587 --> 00:15:56.634
（掌聲）

