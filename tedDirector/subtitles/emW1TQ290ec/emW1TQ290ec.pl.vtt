WEBVTT
Kind: captions
Language: pl

00:00:00.000 --> 00:00:07.000
Tłumaczenie: Agata Leśnicka
Korekta: Kinga Skorupska

00:00:15.260 --> 00:00:17.260
Dziś chciałbym wam pokazać

00:00:17.260 --> 00:00:19.260
przyszłość wytwarzania rzeczy.

00:00:19.260 --> 00:00:21.260
Wierzę, że wkrótce budowle i maszyny

00:00:21.260 --> 00:00:23.260
będą się same montować,

00:00:23.260 --> 00:00:25.260
replikując się i naprawiając.

00:00:25.260 --> 00:00:27.260
Więc pokażę wam

00:00:27.260 --> 00:00:29.260
jaki jest obecny stan produkcji,

00:00:29.260 --> 00:00:32.260
a potem porównam go do układów naturalnych.

00:00:32.260 --> 00:00:35.260
Mamy teraz drapacze chmur,

00:00:35.260 --> 00:00:37.260
dwa i pół roku,

00:00:37.260 --> 00:00:39.260
500 000 do miliona części,

00:00:39.260 --> 00:00:41.260
całkiem skomplikowane,

00:00:41.260 --> 00:00:44.260
nowe i ekscytujące technologie w stali, betonie, szkle.

00:00:44.260 --> 00:00:46.260
Mamy ekscytujące maszyny,

00:00:46.260 --> 00:00:48.260
które mogą nas zabrać w przestrzeń kosmiczną -

00:00:48.260 --> 00:00:51.260
pięć lat, 2,5 miliona części.

00:00:51.260 --> 00:00:54.260
A jeśli spojrzymy na układy naturalne,

00:00:54.260 --> 00:00:56.260
mamy dwa miliony rodzajów białek.

00:00:56.260 --> 00:00:58.260
mamy dwa miliony rodzajów białek.

00:00:58.260 --> 00:01:00.260
Mogą się zwijać w 10 000 nanosekund,

00:01:00.260 --> 00:01:02.260
lub DNA z trzema miliardami par zasad,

00:01:02.260 --> 00:01:05.260
które możemy zreplikować w około godziny.

00:01:05.260 --> 00:01:07.260
Cała ta złożoność istnieje

00:01:07.260 --> 00:01:09.260
w naszych układach naturalnych,

00:01:09.260 --> 00:01:11.260
ale są one niezwykle wydajne,

00:01:11.260 --> 00:01:13.260
znacznie wydajniejsze i bardziej złożone niż nasze budowle.

00:01:13.260 --> 00:01:15.260
znacznie wydajniejsze i bardziej złożone niż nasze budowle.

00:01:15.260 --> 00:01:17.260
Są znacznie wydajniejsze energetycznie.

00:01:17.260 --> 00:01:20.260
Rzadko kiedy popełniają błędy.

00:01:20.260 --> 00:01:22.260
Są długowieczne bo same się naprawiają.

00:01:22.260 --> 00:01:25.260
Układy naturalne są bardzo interesujące.

00:01:25.260 --> 00:01:27.260
Jeśli można to przełożyć

00:01:27.260 --> 00:01:29.260
na budowane przez nas środowisko,

00:01:29.260 --> 00:01:31.260
to pojawia się ekscytujący potencjał.

00:01:31.260 --> 00:01:34.260
Kluczowy jest samodzielny montaż.

00:01:34.260 --> 00:01:37.260
By wykorzystać go w naszym otoczeniu,

00:01:37.260 --> 00:01:39.260
trzeba rozważyć cztery kluczowe czynniki.

00:01:39.260 --> 00:01:41.260
Pierwszy jest taki, że musimy odkodować

00:01:41.260 --> 00:01:43.260
złożoność tego, co chcemy zbudować:

00:01:43.260 --> 00:01:45.260
naszych budynków i maszyn.

00:01:45.260 --> 00:01:47.260
Musimy to odkodować w proste sekwencje -

00:01:47.260 --> 00:01:49.260
coś jak DNA tego, jak funkcjonują nasze budynki.

00:01:49.260 --> 00:01:51.260
Potem potrzebujemy programowalnych części,

00:01:51.260 --> 00:01:53.260
które mogą podjąć tę sekwencję

00:01:53.260 --> 00:01:56.260
by użyć jej do zwinięcia się lub przekonfigurowania.

00:01:56.260 --> 00:01:59.260
Potrzebujemy energii, która pozwoli na aktywację,

00:01:59.260 --> 00:02:02.260
by części mogły zwinąć się zgodnie z programem.

00:02:02.260 --> 00:02:04.260
Potrzeba też technik korygujących

00:02:04.260 --> 00:02:07.260
dodających nadmiarowość by naprawiać błędy.

00:02:07.260 --> 00:02:09.260
Pokażę wam kilka projektów,

00:02:09.260 --> 00:02:11.260
nad którymi pracujemy z kolegami w MIT

00:02:11.260 --> 00:02:13.260
dotyczących samodzielnych konstrukcji.

00:02:13.260 --> 00:02:16.260
Pierwsze dwa to MacroBot i DeciBot.

00:02:16.260 --> 00:02:20.260
To wielkoskalowe roboty, które można zrekonfigurować -

00:02:20.260 --> 00:02:23.260
łańcuchy białek długości 8, 12 stóp.

00:02:23.260 --> 00:02:26.260
Mają wbudowane urządzenia elektromechaniczne, czujniki.

00:02:26.260 --> 00:02:28.260
Dekodują to, w co chcą się to zwinąć

00:02:28.260 --> 00:02:30.260
na sekwencję kątów -

00:02:30.260 --> 00:02:32.260
więc minus 120, minus 120, 0, 0,

00:02:32.260 --> 00:02:35.260
120, minus 120 - coś takiego.

00:02:35.260 --> 00:02:37.260
Sekwencję kątów lub zakrętów

00:02:37.260 --> 00:02:40.260
przesyła się przewodem.

00:02:40.260 --> 00:02:43.260
Każda jednostka otrzymuje wiadomość (-120).

00:02:43.260 --> 00:02:45.260
Obraca się, sprawdza kąt

00:02:45.260 --> 00:02:48.260
i przekazuje informację sąsiadom.

00:02:48.260 --> 00:02:50.260
Błyskotliwi naukowcy, inżynierowie

00:02:50.260 --> 00:02:52.260
i projektanci pracowali nad tym projektem.

00:02:52.260 --> 00:02:54.260
Zwraca to uwagę na jedną kwestię:

00:02:54.260 --> 00:02:56.260
Czy to jest skalowalne?

00:02:56.260 --> 00:02:58.260
Tysiące dolarów, wiele godzin pracy

00:02:58.260 --> 00:03:01.260
poświęcone na dwumetrowego robota.

00:03:01.260 --> 00:03:04.260
Czy można to powiększyć i zastosować wszędzie?

00:03:04.260 --> 00:03:06.260
Następny projekt to kwestionuje

00:03:06.260 --> 00:03:08.260
i patrzy na bierną naturę,

00:03:08.260 --> 00:03:11.260
bierną programowalność rekonfiguracji.

00:03:11.260 --> 00:03:13.260
Ale idzie o krok dalej

00:03:13.260 --> 00:03:15.260
i stara się dokonywać obliczeń.

00:03:15.260 --> 00:03:17.260
Włącza najbardziej podstawowy budulec obliczeń,

00:03:17.260 --> 00:03:19.260
cyfrową bramkę logiczną,

00:03:19.260 --> 00:03:21.260
bezpośrednio do części.

00:03:21.260 --> 00:03:23.260
To bramka NAND.

00:03:23.260 --> 00:03:25.260
Mamy jeden tetraedr, który jest bramką,

00:03:25.260 --> 00:03:27.260
która będzie wykonywać obliczenia

00:03:27.260 --> 00:03:29.260
i mamy dwa wejściowe tetraedry.

00:03:29.260 --> 00:03:32.260
Jeden od użytkownika, który dokłada cegiełki.

00:03:32.260 --> 00:03:35.260
Drugi pochodzi z poprzedniej cegiełki, która została położona.

00:03:35.260 --> 00:03:38.260
Widać obraz w przestrzeni trójwymiarowej.

00:03:38.260 --> 00:03:40.260
Oznacza to, że uzytkownik

00:03:40.260 --> 00:03:43.260
może kontrolować to, co cegiełki będą robiły.

00:03:43.260 --> 00:03:45.260
Obliczenia są wykonywane na podstawie

00:03:45.260 --> 00:03:47.260
starych i nowych instrukcji.

00:03:47.260 --> 00:03:49.260
A teraz zaczyna się poruszać w przestrzeni 3D

00:03:49.260 --> 00:03:51.260
więc w górę lub dół.

00:03:51.260 --> 00:03:54.260
Po lewej wejście [1,1] równa się 0, co oznacza ruch w dół.

00:03:54.260 --> 00:03:56.260
Po prawej stronie,

00:03:56.260 --> 00:03:59.260
wejście [0,0] równa się 1, co oznacza ruch w górę.

00:03:59.260 --> 00:04:01.260
Naprawdę oznacza to,

00:04:01.260 --> 00:04:03.260
że nasze struktury zawierają teraz projekty

00:04:03.260 --> 00:04:05.260
tego, co chcemy zbudować.

00:04:05.260 --> 00:04:08.260
Całe dane na temat konstrukcji już w nich są.

00:04:08.260 --> 00:04:11.260
Mamy coś w rodzaju samopowielania.

00:04:11.260 --> 00:04:14.260
To samo-kierowane powielanie,

00:04:14.260 --> 00:04:16.260
struktura zawiera dokładne projekty.

00:04:16.260 --> 00:04:18.260
Jeśli występują błędy, można wymienić część.

00:04:18.260 --> 00:04:21.260
Lokalizacje mają informacje jak je naprawić.

00:04:21.260 --> 00:04:23.260
Wystarczy coś co tam dotrze i je odczyta

00:04:23.260 --> 00:04:25.260
i może odtworzyć 1:1.

00:04:25.260 --> 00:04:27.260
Nie ma żadnych zewnętrznych instrukcji.

00:04:27.260 --> 00:04:30.260
Ostatni projekt to "Biased Chains", diagonalne łańcuchy,

00:04:30.260 --> 00:04:33.260
najciekawszy przykład jaki posiadamy

00:04:33.260 --> 00:04:35.260
na układy biernego samodzielnego montażu.

00:04:35.260 --> 00:04:37.260
Dzięki konfigurowalności

00:04:37.260 --> 00:04:39.260
i możliwości zaprogramowania

00:04:39.260 --> 00:04:42.260
jest to układ całkowicie bierny.

00:04:43.260 --> 00:04:45.260
Więc w zasadzie mamy łańcuch części.

00:04:45.260 --> 00:04:47.260
Każda część jest zupełnie identyczna

00:04:47.260 --> 00:04:49.260
i są one diagonalne.

00:04:49.260 --> 00:04:52.260
Każdy łańcuch może się skręcić w lewo lub prawo.

00:04:52.260 --> 00:04:55.260
Składając ten łańcuch programuje się go.

00:04:55.260 --> 00:04:58.260
Każdą jednostkę by wiedziała gdzie się skręcić.

00:04:58.260 --> 00:05:01.260
Więc po potrząśnięciu łańcuchem

00:05:01.260 --> 00:05:03.260
zwija się on

00:05:03.260 --> 00:05:06.260
w każdą konfigurację, którą zaprogramowano -

00:05:06.260 --> 00:05:08.260
w tym przypadku spiralę,

00:05:08.260 --> 00:05:11.260
lub w tym przypadku

00:05:11.260 --> 00:05:14.260
dwie kostki obok siebie.

00:05:14.260 --> 00:05:16.260
Więc można w zasadzie zaprogramować

00:05:16.260 --> 00:05:18.260
każdy trójwymiarowy kształt -

00:05:18.260 --> 00:05:21.260
albo jedno- lub dwuwymiarowy całkowicie pasywnie.

00:05:21.260 --> 00:05:23.260
Co nam to mówi?

00:05:23.260 --> 00:05:25.260
Są nowe możliwości

00:05:25.260 --> 00:05:28.260
samodzielnego montażu, replikacji, naprawy

00:05:28.260 --> 00:05:31.260
naszych struktur, budynków i maszyn.

00:05:31.260 --> 00:05:33.260
Można je będzie programować.

00:05:33.260 --> 00:05:35.260
Wynikają z tego nowe możliwości obliczeń.

00:05:35.260 --> 00:05:37.260
Będziemy mieli obliczanie przestrzenne.

00:05:37.260 --> 00:05:39.260
Co jeśli w budowlach, mostach, maszynach

00:05:39.260 --> 00:05:41.260
wszystkie części mogą dokonywać obliczeń?

00:05:41.260 --> 00:05:43.260
To daje niesamowitą moc obliczeniową,

00:05:43.260 --> 00:05:45.260
nowe możliwości projektowania.

00:05:45.260 --> 00:05:47.260
To interesujący potencjał.

00:05:47.260 --> 00:05:49.260
Projekty, które wam pokazałem

00:05:49.260 --> 00:05:51.260
są tylko małym kroczkiem w kierunku

00:05:51.260 --> 00:05:53.260
nowych technologii

00:05:53.260 --> 00:05:55.260
samodzielnie montującego się świata. Dziękuję.

00:05:55.260 --> 00:05:57.260
samodzielnie montującego się świata. Dziękuję.

00:05:57.260 --> 00:05:59.260
(Brawa)

