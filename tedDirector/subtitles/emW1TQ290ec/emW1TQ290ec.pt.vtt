WEBVTT
Kind: captions
Language: pt

00:00:00.000 --> 00:00:07.000
Tradutor: Nadja Nathan
Revisor: Isabel Villan

00:00:15.260 --> 00:00:17.260
Hoje eu gostaria de lhes mostrar

00:00:17.260 --> 00:00:19.260
o futuro da maneira como construímos coisas.

00:00:19.260 --> 00:00:21.260
Acredito que em breve nossos prédios e máquinas

00:00:21.260 --> 00:00:23.260
serão de auto-montagem,

00:00:23.260 --> 00:00:25.260
replicando-se e regenerando-se.

00:00:25.260 --> 00:00:27.260
Então vou mostrar-lhes

00:00:27.260 --> 00:00:29.260
o que acredito ser o atual estado de fabricação,

00:00:29.260 --> 00:00:32.260
e depois compará-lo com alguns sistemas naturais.

00:00:32.260 --> 00:00:35.260
Então, no atual estado de fabricação, temos arranha-céus –

00:00:35.260 --> 00:00:37.260
dois anos e meio,

00:00:37.260 --> 00:00:39.260
de 500 mil a um milhão de peças,

00:00:39.260 --> 00:00:41.260
razoavelmente complexas,

00:00:41.260 --> 00:00:44.260
tecnologias novas e empolgantes em aço, concreto e vidro.

00:00:44.260 --> 00:00:46.260
Temos máquinas incríveis

00:00:46.260 --> 00:00:48.260
que podem nos levar ao espaço –

00:00:48.260 --> 00:00:51.260
cinco anos, 2,5 milhões de peças.

00:00:51.260 --> 00:00:54.260
Mas por outro lado, se examinarmos os sistemas naturais,

00:00:54.260 --> 00:00:56.260
temos as proteínas

00:00:56.260 --> 00:00:58.260
com dois milhões de tipos,

00:00:58.260 --> 00:01:00.260
podem dobrar em 10 mil nanosegundos,

00:01:00.260 --> 00:01:02.260
ou DNA com três bilhões de pares de base

00:01:02.260 --> 00:01:05.260
que podemos replicar em cerca de uma hora.

00:01:05.260 --> 00:01:07.260
Portanto, temos toda essa complexidade

00:01:07.260 --> 00:01:09.260
em nossos sistemas naturais,

00:01:09.260 --> 00:01:11.260
mas eles são extremamente eficientes,

00:01:11.260 --> 00:01:13.260
muito mais eficientes do que qualquer coisa que possamos construir,

00:01:13.260 --> 00:01:15.260
muito mais complexos do que qualquer coisa que possamos construir,

00:01:15.260 --> 00:01:17.260
São muito mais eficientes em termos de energia.

00:01:17.260 --> 00:01:20.260
Raramente erram.

00:01:20.260 --> 00:01:22.260
E esses sistemas podem reparar-se para manter longevidade.

00:01:22.260 --> 00:01:25.260
Então, há algo super interessante sobre sistemas naturais.

00:01:25.260 --> 00:01:27.260
E se pudermos traduzi-los

00:01:27.260 --> 00:01:29.260
em nosso ambiente de construção,

00:01:29.260 --> 00:01:31.260
teremos um potencial interessante para o modo como nós construímos.

00:01:31.260 --> 00:01:34.260
E eu penso que o segredo está na auto-montagem.

00:01:34.260 --> 00:01:37.260
Então se quisermos utilizar a auto-montagem em nosso ambiente físico,

00:01:37.260 --> 00:01:39.260
eu acho que há quatro fatores chave.

00:01:39.260 --> 00:01:41.260
O primeiro é que precisamos decodificar

00:01:41.260 --> 00:01:43.260
toda a complexidade do que queremos construir –

00:01:43.260 --> 00:01:45.260
nossos edifícios e máquinas.

00:01:45.260 --> 00:01:47.260
Precisamos decodificá-la em sequências simples –

00:01:47.260 --> 00:01:49.260
basicamente o DNA de como nossos edifícios funcionam.

00:01:49.260 --> 00:01:51.260
Em seguida precisamos de peças programáveis

00:01:51.260 --> 00:01:53.260
que possam pegar esta sequência

00:01:53.260 --> 00:01:56.260
e usá-la para dobrar, ou reconfigurar.

00:01:56.260 --> 00:01:59.260
Precisamos de alguma energia que permita a isso ser ativado,

00:01:59.260 --> 00:02:02.260
dando às nossas peças capacidade para dobrar a partir do programa.

00:02:02.260 --> 00:02:04.260
E precisamos de um tipo de redundância na correção de erro

00:02:04.260 --> 00:02:07.260
para garantir-nos sucesso em construir o que queremos.

00:02:07.260 --> 00:02:09.260
Vou mostrar-lhes uma série de projetos

00:02:09.260 --> 00:02:11.260
em que eu e meus colegas do MIT estamos trabalhando

00:02:11.260 --> 00:02:13.260
para alcançar esse futuro de auto-montagem.

00:02:13.260 --> 00:02:16.260
Os primeiros são MacroBot e DeciBot.

00:02:16.260 --> 00:02:20.260
Estes projetos são de robôs reconfiguráveis de grande escala –

00:02:20.260 --> 00:02:23.260
2.5 ou 3.5 metros de proteínas longas.

00:02:23.260 --> 00:02:26.260
Eles são implantados com dispositivos mecânicos elétricos, sensores.

00:02:26.260 --> 00:02:28.260
Nós decodificamos o formato que queremos dobrar,

00:02:28.260 --> 00:02:30.260
em uma sequência de ângulos –

00:02:30.260 --> 00:02:32.260
menos 120, menos 120, 0, 0,

00:02:32.260 --> 00:02:35.260
120, menos 120 – algo assim;

00:02:35.260 --> 00:02:37.260
então uma sequência de ângulos, ou de rotações,

00:02:37.260 --> 00:02:40.260
e enviamos esta sequência através do fio.

00:02:40.260 --> 00:02:43.260
Cada unidade carrega sua mensagem – portanto menos 120.

00:02:43.260 --> 00:02:45.260
Ela gira, verifica se chegou lá

00:02:45.260 --> 00:02:48.260
e depois a passa para seu adjacente.

00:02:48.260 --> 00:02:50.260
Esses são os brilhantes cientistas,

00:02:50.260 --> 00:02:52.260
engenheiros, projetistas que trabalharam neste projeto.

00:02:52.260 --> 00:02:54.260
E eu acho que isso realmente traz à tona:

00:02:54.260 --> 00:02:56.260
Isto é realmente escalável?

00:02:56.260 --> 00:02:58.260
Quero dizer, milhares de dólares, muitas pessoas e horas

00:02:58.260 --> 00:03:01.260
são usados para construir este robô de 2 metros e meio.

00:03:01.260 --> 00:03:04.260
Será que podemos adquirir escala? Será que podemos implantar robótica em cada parte?

00:03:04.260 --> 00:03:06.260
O próximo questiona isso

00:03:06.260 --> 00:03:08.260
e observa a natureza passiva,

00:03:08.260 --> 00:03:11.260
ou passivamente tenta ter uma reconfiguração programável.

00:03:11.260 --> 00:03:13.260
Mas ele vai um passo adiante,

00:03:13.260 --> 00:03:15.260
e tenta ter um cálculo real.

00:03:15.260 --> 00:03:17.260
Ele basicamente incorpora o bloco de construção mais fundamental da computação,

00:03:17.260 --> 00:03:19.260
a porta lógica digital,

00:03:19.260 --> 00:03:21.260
diretamente em suas peças.

00:03:21.260 --> 00:03:23.260
Então essa é uma porta NAND.

00:03:23.260 --> 00:03:25.260
Temos um tetraedro que é a porta

00:03:25.260 --> 00:03:27.260
que fará sua computação,

00:03:27.260 --> 00:03:29.260
e temos dois tetraedros de entrada.

00:03:29.260 --> 00:03:32.260
Um deles é a entrada do usuário, quando vocês constroem seus tijolos.

00:03:32.260 --> 00:03:35.260
O outro é do tijolo que foi colocado anteriormente.

00:03:35.260 --> 00:03:38.260
E então ele nos dá uma saída em espaço 3D.

00:03:38.260 --> 00:03:40.260
Isto significa que

00:03:40.260 --> 00:03:43.260
o usuário pode começar a ligar o que ele quer que os tijolos façam.

00:03:43.260 --> 00:03:45.260
Ele calcula o que ele estava fazendo antes

00:03:45.260 --> 00:03:47.260
e o que vocês disseram que queriam fazer.

00:03:47.260 --> 00:03:49.260
E agora começa a mover-se em espaço tridimensional –

00:03:49.260 --> 00:03:51.260
para cima ou para baixo.

00:03:51.260 --> 00:03:54.260
Então no lado esquerdo, [1,1], entrada = 0 saída, que desce.

00:03:54.260 --> 00:03:56.260
No lado direito,

00:03:56.260 --> 00:03:59.260
[0,0] entrada é 1 saída, que sobe.

00:03:59.260 --> 00:04:01.260
O que isso realmente significa

00:04:01.260 --> 00:04:03.260
é que nossas estruturas agora contêm os planos de projeto

00:04:03.260 --> 00:04:05.260
do que queremos construir.

00:04:05.260 --> 00:04:08.260
Então eles têm, incorporadas neles, todas as informações do que foi construído.

00:04:08.260 --> 00:04:11.260
Isto quer dizer que podemos ter alguma forma de auto-replicação.

00:04:11.260 --> 00:04:14.260
Nesse caso chamo isto de replicação auto-guiada,

00:04:14.260 --> 00:04:16.260
porque sua estrutura contém os planos de projeto exatos.

00:04:16.260 --> 00:04:18.260
Se temos erros, podemos substituir uma parte.

00:04:18.260 --> 00:04:21.260
Toda a informação local é incorporada para instruir como consertar.

00:04:21.260 --> 00:04:23.260
Então poderíamos ter algo que cresce em ascensão, compreende isto

00:04:23.260 --> 00:04:25.260
e pode produzir de um para um.

00:04:25.260 --> 00:04:27.260
[A informação] é diretamente incorporada; sem instruções externas.

00:04:27.260 --> 00:04:30.260
O último projeto que mostrarei é o Biased Chains,

00:04:30.260 --> 00:04:33.260
e é provavelmente o exemplo mais empolgante que temos atualmente

00:04:33.260 --> 00:04:35.260
de sistemas passivos de auto-montagem.

00:04:35.260 --> 00:04:37.260
Ele pega a reconfiguração

00:04:37.260 --> 00:04:39.260
e a programabilidade

00:04:39.260 --> 00:04:42.260
e faz dele um sistema completamente passivo.

00:04:43.260 --> 00:04:45.260
Então fundamentalmente temos uma cadeia de elementos.

00:04:45.260 --> 00:04:47.260
Cada elemento é totalmente idêntico,

00:04:47.260 --> 00:04:49.260
e eles são discriminantes.

00:04:49.260 --> 00:04:52.260
Assim cada cadeia ou cada elemento quer virar à direita ou à esquerda.

00:04:52.260 --> 00:04:55.260
Ao montarmos a cadeia, fundamentalmente estamos programando-a.

00:04:55.260 --> 00:04:58.260
Dizemos a cada unidade se deve virar à direita ou à esquerda.

00:04:58.260 --> 00:05:01.260
Assim, quando sacudimos a cadeia,

00:05:01.260 --> 00:05:03.260
ela então se dobra

00:05:03.260 --> 00:05:06.260
em qualquer configuração que tenhamos programado –

00:05:06.260 --> 00:05:08.260
neste caso, uma espiral,

00:05:08.260 --> 00:05:11.260
ou neste caso,

00:05:11.260 --> 00:05:14.260
dois cubos lado a lado.

00:05:14.260 --> 00:05:16.260
Então basicamente podemos programar

00:05:16.260 --> 00:05:18.260
qualquer forma tridimensional –

00:05:18.260 --> 00:05:21.260
ou unidimensional, bidimensional – nesta cadeia completamente passiva.

00:05:21.260 --> 00:05:23.260
Então, o que isto nos diz sobre o futuro?

00:05:23.260 --> 00:05:25.260
Acho que está nos dizendo

00:05:25.260 --> 00:05:28.260
que há novas possibilidades de auto-montagem, replicação, reparação

00:05:28.260 --> 00:05:31.260
em nossas estruturas físicas, nossos prédios, máquinas.

00:05:31.260 --> 00:05:33.260
Há novas programabilidades nessas peças.

00:05:33.260 --> 00:05:35.260
E dali temos novas possibilidades para computação.

00:05:35.260 --> 00:05:37.260
Teremos computação espacial.

00:05:37.260 --> 00:05:39.260
Imaginem se nossos prédios, nossas pontes, máquinas,

00:05:39.260 --> 00:05:41.260
todos os nossos tijolos pudessem realmente computar.

00:05:41.260 --> 00:05:43.260
Isto é o surpreendente poder paralelo e distribuído da computação

00:05:43.260 --> 00:05:45.260
novas possibilidades para designs.

00:05:45.260 --> 00:05:47.260
É um potencial empolgante para isto.

00:05:47.260 --> 00:05:49.260
Então penso que estes projetos que acabei de mostrar a vocês

00:05:49.260 --> 00:05:51.260
são simplesmente um pequenino passo em direção a este futuro,

00:05:51.260 --> 00:05:53.260
se implementarmos estas novas tecnologias.

00:05:53.260 --> 00:05:55.260
para um mundo novo de auto-montagem.

00:05:55.260 --> 00:05:57.260
Obrigado.

00:05:57.260 --> 00:05:59.260
(Aplausos)

