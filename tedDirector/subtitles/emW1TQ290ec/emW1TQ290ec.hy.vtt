WEBVTT
Kind: captions
Language: hy

00:00:00.000 --> 00:00:07.000
Translator: Ani Latoyan
Reviewer: Arpiné Grigoryan

00:00:15.260 --> 00:00:17.260
Այսօր ցանկանում եմ ձեզ ցույց տալ

00:00:17.260 --> 00:00:19.260
իրերի ստեղծման ապագայի եղանակները:

00:00:19.260 --> 00:00:21.260
Ես հավատում եմ, որ շուտով մեր շենքներն ու մեքենաները

00:00:21.260 --> 00:00:23.260
ինքնուրույն համակարգվող կլինեն,

00:00:23.260 --> 00:00:25.260
ինքնուրույն կվերարտադրվեն և իրենք իրենց կնորոգեն:

00:00:25.260 --> 00:00:27.260
Այսպես, ես պատրաստվում եմ ձեզ ցույց տալ այն,

00:00:27.260 --> 00:00:29.260
ինչ գտնում եմ, որ ներկայիս արտադրության զարգացվածության վիճակն է,

00:00:29.260 --> 00:00:32.260
որը, այնուհետև, կհամեմատենք որոշ բնական համակարգերի հետ:

00:00:32.260 --> 00:00:35.260
Այսպիսով, արտադրության ներկայիս ​​վիճակում, մենք ունենք երկնաքերեր.

00:00:35.260 --> 00:00:37.260
երկուսուկես տարի,

00:00:37.260 --> 00:00:39.260
500,000-ից ավել մաս,

00:00:39.260 --> 00:00:41.260
բավականին բարդ է,

00:00:41.260 --> 00:00:44.260
նոր և հետաքրքիր տեխնոլոգիաներ` պողպատե, բետոնե, ապակե:

00:00:44.260 --> 00:00:46.260
Մենք ունենք հիանալի մեքենաներ,

00:00:46.260 --> 00:00:48.260
որ կարող են մեզ տիեզերք տանել.

00:00:48.260 --> 00:00:51.260
5 տարի, 2.5 միլիոն մաս:

00:00:51.260 --> 00:00:54.260
Սակայն մյուս կողմից, եթե նայենք բնական համակարգերին,

00:00:54.260 --> 00:00:56.260
մենք ունենք սպիտակուցներ,

00:00:56.260 --> 00:00:58.260
որ երկու միլիոն տեսակի են,

00:00:58.260 --> 00:01:00.260
որոնք կարող են քայքայվել 10,000 նանո-վայրկյանում;

00:01:00.260 --> 00:01:02.260
կամ վերցնենք 3 միլիարդ մոլեկուլ պարունակող ԴՆԹ-ն,

00:01:02.260 --> 00:01:05.260
որ մոտ մեկ ժամվա ընթացքում կարող ենք վերարտադրել:

00:01:05.260 --> 00:01:07.260
Այսպիսով, այս ամբողջ բարդությունը

00:01:07.260 --> 00:01:09.260
մեր բնական համակարգերում է,

00:01:09.260 --> 00:01:11.260
սակայն սրա հետ մեկտեղ կան չափազանց կարևոր բաներ ևս,

00:01:11.260 --> 00:01:13.260
շատ ավելի կարևոր, քան որևէ այլ բան, որ մենք կարող ենք կառուցել,

00:01:13.260 --> 00:01:15.260
շատ ավելի բարդ, քան որևէ այլ բան, որ մենք կարող ենք ստեղծել:

00:01:15.260 --> 00:01:17.260
Էներգիայի տեսանկյունից սրանք շատ ավելի արդյունավետ են:

00:01:17.260 --> 00:01:20.260
Վերջիններս հազվադեպ են սխալվում:

00:01:20.260 --> 00:01:22.260
Եվ դրանք կարող են իրենք իրենց վերանորոգել` ապահովելով երկարատևություն:

00:01:22.260 --> 00:01:25.260
Այսպիսով, մեր բնական համակարգերում իրոք շատ հետաքրքիր մի բան կա:

00:01:25.260 --> 00:01:27.260
Եվ եթե կարողանանք դա հաղորդել

00:01:27.260 --> 00:01:29.260
մեր կառուցվող շրջակա միջավայրում,

00:01:29.260 --> 00:01:31.260
ապա հետաքրքիր պոտենցիալ կգտնենք այն բանի մեջ, թե ինչպես ենք մենք կառուցում իրերը:

00:01:31.260 --> 00:01:34.260
Ես գտնում եմ, որ դրա լուծումը ինքնուրույն համակարգումն է:

00:01:34.260 --> 00:01:37.260
Այսինքն, եթե ցանկանում ենք օգտագործել ինքնուրույն համակարգումը մեր ֆիզիկական միջավայրում,

00:01:37.260 --> 00:01:39.260
կարծում եմ, որ պետք է օգտագործենք դրա համար նախատեսված 4 կարևոր գործոնները:

00:01:39.260 --> 00:01:41.260
Առաջինն այն է, որ մենք պետք է բացահայտենք

00:01:41.260 --> 00:01:43.260
այն ամենի բարդությունը, ինչ ցանկանում ենք կառուցել,

00:01:43.260 --> 00:01:45.260
այսինքն` մեր շենքներնի ու մեքենաների:

00:01:45.260 --> 00:01:47.260
Այնուհետև, մենք պետք է վերածենք դա հասարակ հաջորդականության`

00:01:47.260 --> 00:01:49.260
հիմանկանում տեսնելու համար մեր կառույցների աշխատանքի ԴՆԹ-ն:

00:01:49.260 --> 00:01:51.260
Հետևապես, մեզ անրհաժեշտ են ծրագրավորվող մասեր,

00:01:51.260 --> 00:01:53.260
որոնք կարող են ամրապնդել այդ հաջորդականությունը,

00:01:53.260 --> 00:01:56.260
որից հետո դա կօգտագործվի միավորման կամ վերակարգավորման համար:

00:01:56.260 --> 00:01:59.260
Այդ գործընթացը կատարելու համար մեզ անհրաժեշտ է որոշակի էներգիա,

00:01:59.260 --> 00:02:02.260
որը թույլ կտա այս մասնիկներին միավորվել հենց ծրագրից:

00:02:02.260 --> 00:02:04.260
Մեզ նաև անհրաժեշտ է սխալները ուղղող որոշակի ռեզերվային համակարգ,

00:02:04.260 --> 00:02:07.260
երաշխավորելու համար, որ մենք կառուցել ենք այն, ինչ ուզում էինք:

00:02:07.260 --> 00:02:09.260
Այսպիսով, ես պատրաստվում եմ ձեզ ցույց տալ մի շարք ծրագրեր,

00:02:09.260 --> 00:02:11.260
որոնց վրա իմ գործընկերներն ու ես աշխատել ենք Մասաչուսեթսի տեխնոլոգիական ինստիտուտում`

00:02:11.260 --> 00:02:13.260
ապագայում այս ինքնահամակարգմանը հասնելու համար:

00:02:13.260 --> 00:02:16.260
Դրանցից առաջին երկուսը MacroBot-ն ու DeciBot-ն են:

00:02:16.260 --> 00:02:20.260
Այս ծրագրերը լայնածավալ վերակոնֆիգուրացվող ռոբոտներ են`

00:02:20.260 --> 00:02:23.260
2,5 և 3,5 մետր երկարությամբ:

00:02:23.260 --> 00:02:26.260
Նրանցում ներդրված են մեխանիկական էլեկտրական սարքավորումներ, սենսորներ:

00:02:26.260 --> 00:02:28.260
Դուք հավաքում եք այն, ինչ ցանկանում եք միավորել

00:02:28.260 --> 00:02:30.260
անկյունների հաջորդականությամբ,

00:02:30.260 --> 00:02:32.260
մինուս 120, մինուս 120, 0, 0,

00:02:32.260 --> 00:02:35.260
120, մինուս 120. սրա պես մի բան;

00:02:35.260 --> 00:02:37.260
այսպիսով, ստացանք անկյունների կամ պտույտների հաջորդականություն,

00:02:37.260 --> 00:02:40.260
որից հետո, լարի միջոցով փոխանցում եք այդ հաջորդականությանը:

00:02:40.260 --> 00:02:43.260
Յուրաքանչյուր բլոկ ստանում է իր հաղորդագրությունը. այն է` մինուս 120:

00:02:43.260 --> 00:02:45.260
Այն պտտվում է այդ անկյունով, ստուգում արդյոք ամեն ինչ ճիշտ է

00:02:45.260 --> 00:02:48.260
և այնուհետև փոխանցում դա իր հարևան բլոկին:

00:02:48.260 --> 00:02:50.260
Ահա այն հրաշալի գիտնականները,

00:02:50.260 --> 00:02:52.260
ճարտարագետները, դիզայներները, ովքեր աշխատում են այս ծրագրի վրա:

00:02:52.260 --> 00:02:54.260
Եվ ես կարծում եմ, որ սա ի հայտ է բերում հետևյալ հարցերը.

00:02:54.260 --> 00:02:56.260
Իսկ դա իրականում ընդլայնելի՞ է:

00:02:56.260 --> 00:02:58.260
Ի նկատի ունեմ, հազարավոր դոլարների, շատ-շատերի ժամանկի ծախսը

00:02:58.260 --> 00:03:01.260
հանգեցրել է 2,5 մետր երկարությամբ ռոբոտի ստեղծմանը:

00:03:01.260 --> 00:03:04.260
Կկարողանա՞նք դրա մասշտաբը ընդլայնել: Իրականում կկարողանա՞նք ներդնել ռոբոտատեխնիկան դրա յուրաքանչյուր մասում:

00:03:04.260 --> 00:03:06.260
Հաջորդը նախագիծը լուծում է այդ հարցը,

00:03:06.260 --> 00:03:08.260
և դիտարկում դրա պասիվ բնույթը

00:03:08.260 --> 00:03:11.260
կամ պասիվ կերպով փորձում է ապահովել վերակոնֆիգուրացման ծրագրավորման ունակությունը:

00:03:11.260 --> 00:03:13.260
Սակայն դա շարժվում է առաջ

00:03:13.260 --> 00:03:15.260
և փորձում է ունենալ փաստացի հաշվարկում:

00:03:15.260 --> 00:03:17.260
Դա իր հիմքում ունի հաշվարկների ամենահիմնային շինարարական բլոկը,

00:03:17.260 --> 00:03:19.260
թվային ինտեգրալ սխեմայի տրամաբանական տարրը

00:03:19.260 --> 00:03:21.260
անմիջապես յուրաքանչյուր մասի մեջ:

00:03:21.260 --> 00:03:23.260
Սա «ԵՎ-ՈՉ» տարրն է:

00:03:23.260 --> 00:03:25.260
Դուք ունեք մեկ տարր` քառանիստ,

00:03:25.260 --> 00:03:27.260
որը կկատարի բոլոր հաշվարկը,

00:03:27.260 --> 00:03:29.260
և երկու քառանիստեր` մուտքագրման համար:

00:03:29.260 --> 00:03:32.260
Դրանցից մեկը` օգտագորողի կողմից ինֆորմացիայի մուտքագրման համար, այնպես ինչպես աղյուսներ եք շարում:

00:03:32.260 --> 00:03:35.260
Հաջորդը` նախորդ շարված աղյուսից ինֆորմացիա ստանալու համար:

00:03:35.260 --> 00:03:38.260
Որից հետո այն արտաբերում է ինֆորմացիան եռաչափ տարածության մեջ:

00:03:38.260 --> 00:03:40.260
Այսպիսով, սա նշանակում է, որ

00:03:40.260 --> 00:03:43.260
օգտվողը կարող է սկսել աշխատեցնել աղյուսների տեղափոխությունը ցանկալի ուղղությամբ:

00:03:43.260 --> 00:03:45.260
Նրա հաշվարկները հիմնվում են այն բանի վրա, թե ինչ է արվել մինչ արդ

00:03:45.260 --> 00:03:47.260
և նրա, թե ինչ եք նրան ասել, որ անի:

00:03:47.260 --> 00:03:49.260
Իսկ այժմ այն սկսում է շարժվել եռաչափ տարածության մեջ,

00:03:49.260 --> 00:03:51.260
վերև կամ ներքև:

00:03:51.260 --> 00:03:54.260
Այսպիսով ձախ կողմում, [1,1] մուտքագրումը ելքում հավասար է 0, շարժ դեպի ներքև:

00:03:54.260 --> 00:03:56.260
Աջ կողմում

00:03:56.260 --> 00:03:59.260
[0,0] մուտքագրումը ելքում հավասար է 1, որը նշանակում է շարժ դեպի վեր:

00:03:59.260 --> 00:04:01.260
Սրանից հետևում է, որ

00:04:01.260 --> 00:04:03.260
այժմ մեր կառույցները ունեն գծագրեր

00:04:03.260 --> 00:04:05.260
այն ամենի համար, ինչ մենք ցանկանում ենք կառուցել:

00:04:05.260 --> 00:04:08.260
Այսինքն, այն ամբողջ տեղեկատվությունը, թե ինչ է կառուցվելու, դրանք կուտակել են իրենց մեջ:

00:04:08.260 --> 00:04:11.260
Սա նշանակում է, որ մենք կարող ենք ունենալ ինքնաարտադրման որոշակի ձև:

00:04:11.260 --> 00:04:14.260
Ես դա կոչում եմ ինքնակառավարվող վերարտադրություն,

00:04:14.260 --> 00:04:16.260
քանի որ կառույցներն ունեն հստակ գծագրեր:

00:04:16.260 --> 00:04:18.260
Եթե սխալ տեղի ունենա, դուք կարող եք փոխարինել տվյալ մասը:

00:04:18.260 --> 00:04:21.260
Ամբողջ առկա տեղեկատվությունը հուշում է ձեզ, ինչպես այն վերանորոգել.

00:04:21.260 --> 00:04:23.260
Այսպիսով, դուք կարող եք ունենալ մի բան, որ տեղաշարժվում և կարդում է ինֆորմացիա

00:04:23.260 --> 00:04:25.260
և կարող է այն փոխանցել իր մի մասից մյուսին:

00:04:25.260 --> 00:04:27.260
Դա ուղղակիորեն ներկառուցված է, չկա արտաքին և ոչ մի հրահանգ:

00:04:27.260 --> 00:04:30.260
Ուստի վերջին նախագիծը, որ ես ձեզ ցույց կտամ կոչվում է «Biased Chains»,

00:04:30.260 --> 00:04:33.260
և հավանաբար դա ամենահուզիչ օրինակն է, այն բանի, որ մենք այսօր ունենք,

00:04:33.260 --> 00:04:35.260
պասիվ ինքնուրույն հավաքվող համագարգերի օրինակներից:

00:04:35.260 --> 00:04:37.260
Հետևաբար դա ունի վերակոնֆիգուրացման

00:04:37.260 --> 00:04:39.260
և ծրագրավորման հնարավորություն,

00:04:39.260 --> 00:04:42.260
որ ստեղծում է ամպողջապես պասիվ համակարգ:

00:04:43.260 --> 00:04:45.260
Այսպիսով, հիմքում ունենք տարրերի շղթա:

00:04:45.260 --> 00:04:47.260
Բոլոր տարրերը լիովին նույնական են,

00:04:47.260 --> 00:04:49.260
և որոշակիորեն շեղված:

00:04:49.260 --> 00:04:52.260
Այսինքն` յուրաքանչյուչ շղթա, կամ տարր, շարժվում է աջ կամ ձախ:

00:04:52.260 --> 00:04:55.260
Եվ երբ դուք համախմբում եք շղթան, դուք, ըստ էության, ծրագրավորում եք այն:

00:04:55.260 --> 00:04:58.260
Դուք հրաման եք տալիս յուրաքանչյուր միավորին, որ այն շարժվի աջ կամ ձախ:

00:04:58.260 --> 00:05:01.260
Այսպես, երբ դուք շարժում եք շղթան,

00:05:01.260 --> 00:05:03.260
այն վերափոխվում է

00:05:03.260 --> 00:05:06.260
ցանկացած փոխդասավորության, որ դուք ծրագրավորել եք`

00:05:06.260 --> 00:05:08.260
օրինակ սրա դեպքում ստանում ենք պարույրագիծ,

00:05:08.260 --> 00:05:11.260
կամ այս մյուսը`

00:05:11.260 --> 00:05:14.260
իրար կողք երկու խորանարդ է:

00:05:14.260 --> 00:05:16.260
Այսպիսով, դուք կարող եք ծրագրավորել

00:05:16.260 --> 00:05:18.260
ցանկացած եռաչափ ձև,

00:05:18.260 --> 00:05:21.260
կամ միաչափ, երկչափ և այլ ձևեր` այս ամբողջովին պասիվ շղթաներից:

00:05:21.260 --> 00:05:23.260
Ի՞նչ է մեզ սա ասում ապագայի մասին:

00:05:23.260 --> 00:05:25.260
Կարծում եմ, սա մեզ ասում է,

00:05:25.260 --> 00:05:28.260
որ մեր ֆիզիկական կառույցների, մեր շենքերի և մեքենաների

00:05:28.260 --> 00:05:31.260
համար կան ինքնահամախմբման, կրկնօրինակման, նորոգման նոր հնարավորություններ:

00:05:31.260 --> 00:05:33.260
Այս մասերը նոր ծրագրավորման կարողություն ունեն:

00:05:33.260 --> 00:05:35.260
Սրա շնորհիվ դուք ունեք նոր հնարավորություններ հաշվարկների համար:

00:05:35.260 --> 00:05:37.260
Մենք կունենանք տարածական համակարգիչներ:

00:05:37.260 --> 00:05:39.260
Պատկերացրեք, եթե մեր շենքերը, կամուրջները, մեքենաները,

00:05:39.260 --> 00:05:41.260
մեր բոլոր աղյուսները իրականում կարողանային հաշվարկել անել:

00:05:41.260 --> 00:05:43.260
Սա զարմանալի զուգահեռ է և հաշվարկման դասակարգված ուժ,

00:05:43.260 --> 00:05:45.260
նախագծման նոր հնարավորություններ:

00:05:45.260 --> 00:05:47.260
Այսպիսով, սա իրոք հետաքրքիր պոտենցիալ է:

00:05:47.260 --> 00:05:49.260
Կարծում եմ, որ այս նախագծերը, որ ձեզ ցույց տվեցի,

00:05:49.260 --> 00:05:51.260
ընդամենը փոքրիկ քայլ են դեպի մեր ապագան,

00:05:51.260 --> 00:05:53.260
իհարկե, եթե մենք ներդնենք այս նոր տեխնոլոգիաները

00:05:53.260 --> 00:05:55.260
նոր ինքնահամակարգվող աշխարհի համար:

00:05:55.260 --> 00:05:57.260
Շնորհակալություն:

00:05:57.260 --> 00:05:59.260
(Ծափահարություններ)

