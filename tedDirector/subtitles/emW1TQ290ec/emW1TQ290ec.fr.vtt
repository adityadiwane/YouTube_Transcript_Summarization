WEBVTT
Kind: captions
Language: fr

00:00:00.000 --> 00:00:07.000
Traducteur: Anna Cristiana Minoli
Relecteur: Elisabeth Buffard

00:00:15.260 --> 00:00:17.260
Aujourd’hui je veux vous montrer

00:00:17.260 --> 00:00:19.260
le futur de la manière dont nous construisons les choses.

00:00:19.260 --> 00:00:21.260
Je crois que bientôt nos immeubles et nos machines

00:00:21.260 --> 00:00:23.260
s’auto-assembleront,

00:00:23.260 --> 00:00:25.260
se reproduiront et se répareront tout seuls.

00:00:25.260 --> 00:00:27.260
Je vais donc vous montrer

00:00:27.260 --> 00:00:29.260
ce que je crois être l’état actuel de la fabrication,

00:00:29.260 --> 00:00:32.260
et le comparer aux systèmes naturels.

00:00:32.260 --> 00:00:35.260
À l’état actuel de la fabrication, nous avons les gratte-ciels --

00:00:35.260 --> 00:00:37.260
deux ans et demi,

00:00:37.260 --> 00:00:39.260
500 000 à 1 million de pièces,

00:00:39.260 --> 00:00:41.260
assez complexe,

00:00:41.260 --> 00:00:44.260
des technologies nouvelles et passionnantes technologies en acier, béton, verre.

00:00:44.260 --> 00:00:46.260
Nous avons des machines extraordinaires

00:00:46.260 --> 00:00:48.260
qui peuvent nous transporter dans l’espace --

00:00:48.260 --> 00:00:51.260
cinq ans, 2,5 millions de pièces.

00:00:51.260 --> 00:00:54.260
Mais d’un autre coté, si nous regardons les systèmes naturels,

00:00:54.260 --> 00:00:56.260
nous avons des protéines

00:00:56.260 --> 00:00:58.260
il y en a deux millions de types,

00:00:58.260 --> 00:01:00.260
qui peuvent se replier en 10 000 nanosecondes,

00:01:00.260 --> 00:01:02.260
ou l’ADN avec trois milliards de paires de base

00:01:02.260 --> 00:01:05.260
que nous pouvons reproduire en à peu près une heure.

00:01:05.260 --> 00:01:07.260
Il y a donc toute cette complexité

00:01:07.260 --> 00:01:09.260
dans nos systèmes naturels,

00:01:09.260 --> 00:01:11.260
mais ils sont extrêmement efficaces,

00:01:11.260 --> 00:01:13.260
beaucoup plus efficaces que tout ce que nous pouvons construire,

00:01:13.260 --> 00:01:15.260
beaucoup plus complexe que ce que nous pouvons construire.

00:01:15.260 --> 00:01:17.260
Ils sont beaucoup plus efficaces en termes d’énergie.

00:01:17.260 --> 00:01:20.260
Ils se trompent rarement.

00:01:20.260 --> 00:01:22.260
Et ils peuvent se réparer tous seuls pour prolonger leur longévité.

00:01:22.260 --> 00:01:25.260
Il y a donc quelque chose de très intéressant dans les systèmes naturels.

00:01:25.260 --> 00:01:27.260
Et si nous pouvons transférer ceci

00:01:27.260 --> 00:01:29.260
dans nos constructions,

00:01:29.260 --> 00:01:31.260
il y a un formidable potentiel pour la manière dont nous construisons les choses.

00:01:31.260 --> 00:01:34.260
Et je crois que la clef est l’auto-assemblage.

00:01:34.260 --> 00:01:37.260
Si nous voulons donc utiliser l’auto-assemblage dans notre environnement physique,

00:01:37.260 --> 00:01:39.260
je crois qu’il y a quatre facteurs clef.

00:01:39.260 --> 00:01:41.260
Le premier est que nous avons besoin de décoder

00:01:41.260 --> 00:01:43.260
toute la complexité de ce que nous voulons construire --

00:01:43.260 --> 00:01:45.260
donc nos immeubles et nos machines.

00:01:45.260 --> 00:01:47.260
Et il nous faut le décoder en de simples séquences --

00:01:47.260 --> 00:01:49.260
en gros l’ADN du mode de fonctionnement de nos bâtiments.

00:01:49.260 --> 00:01:51.260
Nous avons ensuite besoin de pièces programmables

00:01:51.260 --> 00:01:53.260
qui peuvent prendre cette séquence

00:01:53.260 --> 00:01:56.260
et l’utiliser pour se replier et se reconfigurer.

00:01:56.260 --> 00:01:59.260
Il nous faut de l’énergie qui permette de l’activer,

00:01:59.260 --> 00:02:02.260
en permettant aux parties de se replier selon le programme.

00:02:02.260 --> 00:02:04.260
Et il nous faut une certaine redondance de correction des erreurs

00:02:04.260 --> 00:02:07.260
pour nous assurer d’avoir bien construit ce que nous voulions.

00:02:07.260 --> 00:02:09.260
Je vais donc vous montrer un certain nombre de projets

00:02:09.260 --> 00:02:11.260
sur lesquelles nous travaillons mes collègues et moi au MIT

00:02:11.260 --> 00:02:13.260
pour réaliser ce futur qui s’auto-assemble.

00:02:13.260 --> 00:02:16.260
Les deux premiers sont les MacroBot et les DeciBot.

00:02:16.260 --> 00:02:20.260
Ces projets sont des robots reconfigurables à large échelle --

00:02:20.260 --> 00:02:23.260
des protéines de 3 à 4 mètres de longueur.

00:02:23.260 --> 00:02:26.260
Ils sont implantés dans des appareils, des capteurs mécaniques électriques

00:02:26.260 --> 00:02:28.260
Vous décodez la forme que vous voulez obtenir,

00:02:28.260 --> 00:02:30.260
en une séquence d’angles --

00:02:30.260 --> 00:02:32.260
donc négatif 120, négatif 120, 0, 0,

00:02:32.260 --> 00:02:35.260
120, négatif 120 – quelque chose de ce genre la ;

00:02:35.260 --> 00:02:37.260
donc une séquence d’angles, ou de courbes,

00:02:37.260 --> 00:02:40.260
et vous envoyez cette séquence à travers la chaine.

00:02:40.260 --> 00:02:43.260
Chaque unité reçoit le message – donc négatif 120.

00:02:43.260 --> 00:02:45.260
Il tourne en conséquence, vérifie que ce soit bon

00:02:45.260 --> 00:02:48.260
et ensuite le passe à son voisin.

00:02:48.260 --> 00:02:50.260
Voila donc les brillants scientifiques,

00:02:50.260 --> 00:02:52.260
ingénieurs, designers qui ont travaillé sur ce projet.

00:02:52.260 --> 00:02:54.260
Et je crois que ça met vraiment en lumière :

00:02:54.260 --> 00:02:56.260
Est-ce réellement déclinable ?

00:02:56.260 --> 00:02:58.260
Des milliers de dollars, beaucoup d'heures de travail

00:02:58.260 --> 00:03:01.260
pour faire ce robot de 3 mètres de hauteur.

00:03:01.260 --> 00:03:04.260
Peut-on réellement l’appliquer à grande échelle ? Peut-on implanter la robotique dans chaque partie?

00:03:04.260 --> 00:03:06.260
Le projet suivant met en question

00:03:06.260 --> 00:03:08.260
et examine la nature passive,

00:03:08.260 --> 00:03:11.260
ou le fait d'essayer de pouvoir programmer une reconfiguration passivement.

00:03:11.260 --> 00:03:13.260
Mais ça va plus loin,

00:03:13.260 --> 00:03:15.260
et il essaye de faire un vrai calcul.

00:03:15.260 --> 00:03:17.260
Essentiellement il s’incorpore aux composantes de base du calcul,

00:03:17.260 --> 00:03:19.260
l’élément numérique logique,

00:03:19.260 --> 00:03:21.260
directement dans vos composants.

00:03:21.260 --> 00:03:23.260
Voici donc un élément NAND.

00:03:23.260 --> 00:03:25.260
Vous avez un tétraèdre qui est l’élément logique,

00:03:25.260 --> 00:03:27.260
qui va faire tous les calculs,

00:03:27.260 --> 00:03:29.260
et vous avez deux tétraèdres.

00:03:29.260 --> 00:03:32.260
L’un d’eux est saisi par l’utilisateur, pendant que vous construisez vos composants.

00:03:32.260 --> 00:03:35.260
L’autre est issu du composant qui a été placé précédemment.

00:03:35.260 --> 00:03:38.260
Et ça vous donne ensuite un résultat en 3D dans l’espace.

00:03:38.260 --> 00:03:40.260
Cela signifie

00:03:40.260 --> 00:03:43.260
que l’utilisateur peut commencer à programmer ce qu’il veut que les composants fassent.

00:03:43.260 --> 00:03:45.260
Le calcul est basé sur ce qu’il faisait avant

00:03:45.260 --> 00:03:47.260
et ce que vous voulez qu’il fasse.

00:03:47.260 --> 00:03:49.260
Et maintenant il commence à se déplacer dans un espace en trois dimensions --

00:03:49.260 --> 00:03:51.260
de haut en bas.

00:03:51.260 --> 00:03:54.260
Sur le coté gauche, [1,1], donnée égale 0 donné de sortie, il descend.

00:03:54.260 --> 00:03:56.260
Sur le coté droit,

00:03:56.260 --> 00:03:59.260
[0,0], donnée égale 1 donné de sortie, il monte.

00:03:59.260 --> 00:04:01.260
Donc cela veut dire en fait

00:04:01.260 --> 00:04:03.260
que nos structures contiennent maintenant le modèle

00:04:03.260 --> 00:04:05.260
de ce que nous voulons construire.

00:04:05.260 --> 00:04:08.260
Ils ont donc incorporé toutes les informations de ce qui a été construit.

00:04:08.260 --> 00:04:11.260
Cela signifie que nous pouvons obtenir certaine formes d’autoreproduction.

00:04:11.260 --> 00:04:14.260
Dans ce cas je l’appelle reproduction autoguidée,

00:04:14.260 --> 00:04:16.260
parce que notre structure contient le modèle exact.

00:04:16.260 --> 00:04:18.260
S’il y a des erreurs, vous pouvez remplacer des parties.

00:04:18.260 --> 00:04:21.260
Toutes les informations locales pour expliquer comment se réparer sont incorporées.

00:04:21.260 --> 00:04:23.260
Vous pouvez donc avoir quelque chose qui grimpe et lit

00:04:23.260 --> 00:04:25.260
et donne le résultat 1 à 1.

00:04:25.260 --> 00:04:27.260
C’est directement incorporé ; il n’y a pas d’instructions externes.

00:04:27.260 --> 00:04:30.260
Le dernier projet que je vais vous montrer s’appelle Biased Chains

00:04:30.260 --> 00:04:33.260
et c’est probablement l’exemple le plus extraordinaire que nous avons aujourd’hui

00:04:33.260 --> 00:04:35.260
de systèmes d’auto-assemblage passifs.

00:04:35.260 --> 00:04:37.260
Il prend la reconfigurabilité

00:04:37.260 --> 00:04:39.260
et la programmabilité

00:04:39.260 --> 00:04:42.260
et en fait un système complètement passif.

00:04:43.260 --> 00:04:45.260
En gros vous avez une chaine d’éléments.

00:04:45.260 --> 00:04:47.260
Chaque élément est totalement identique,

00:04:47.260 --> 00:04:49.260
et ils sont orientés.

00:04:49.260 --> 00:04:52.260
Donc chaque chaine, ou chaque élément, veut se tourner à droite ou à gauche.

00:04:52.260 --> 00:04:55.260
Pendant que vous assembler la chaine, en gros vous la programmez.

00:04:55.260 --> 00:04:58.260
Vous dites à chaque unité si elle doit se tourner à droite ou à gauche.

00:04:58.260 --> 00:05:01.260
Quand vous secouez la chaine,

00:05:01.260 --> 00:05:03.260
elle se replie

00:05:03.260 --> 00:05:06.260
en n’importe quelle configuration que vous avez programmée --

00:05:06.260 --> 00:05:08.260
dans ce cas, une spirale,

00:05:08.260 --> 00:05:11.260
ou dans ce cas là,

00:05:11.260 --> 00:05:14.260
deux cubes l’un à coté de l’autre.

00:05:14.260 --> 00:05:16.260
Donc vous pouvez en gros programmer

00:05:16.260 --> 00:05:18.260
n’importe quelle forme en trois dimensions --

00:05:18.260 --> 00:05:21.260
ou une dimension, deux dimensions – de manière complètement passive dans la chaine.

00:05:21.260 --> 00:05:23.260
Qu’est ce que cela nous dit sur le futur ?

00:05:23.260 --> 00:05:25.260
Je crois que ça nous dit

00:05:25.260 --> 00:05:28.260
qu’il y a de nouvelles possibilités d’auto-assemblage, réplication, réparation

00:05:28.260 --> 00:05:31.260
dans nos structures physiques, nos bâtiments, nos machines.

00:05:31.260 --> 00:05:33.260
Il y a des nouvelles programmabilités pour ces parties.

00:05:33.260 --> 00:05:35.260
Et à partir de ça vous avez des nouvelles possibilités de calcul.

00:05:35.260 --> 00:05:37.260
Nous aurons un calcul spatial.

00:05:37.260 --> 00:05:39.260
Imaginez nos bâtiments, nos ponts, nos machines,

00:05:39.260 --> 00:05:41.260
tous nos composants pourraient calculer.

00:05:41.260 --> 00:05:43.260
C’est un extraordinaire pouvoir de calcul parallèle, réparti,

00:05:43.260 --> 00:05:45.260
nouvelle possibilité de création.

00:05:45.260 --> 00:05:47.260
C’est un potentiel passionnant.

00:05:47.260 --> 00:05:49.260
Je crois donc que ces projets que je vous ai montrés

00:05:49.260 --> 00:05:51.260
sont un tout petit pas vers le futur,

00:05:51.260 --> 00:05:53.260
si nous mettons en pratique ces nouvelles technologies

00:05:53.260 --> 00:05:55.260
pour un tout nouveau monde qui s’auto-assemble.

00:05:55.260 --> 00:05:57.260
Merci.

00:05:57.260 --> 00:05:59.260
(Applaudissements)

