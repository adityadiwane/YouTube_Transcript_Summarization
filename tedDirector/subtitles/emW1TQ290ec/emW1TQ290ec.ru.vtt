WEBVTT
Kind: captions
Language: ru

00:00:00.000 --> 00:00:07.000
Переводчик: Elena Vaneyeva
Редактор: Mihail Stoychev

00:00:15.260 --> 00:00:17.260
Сегодня я хотел бы вам показать

00:00:17.260 --> 00:00:19.260
как в будущем мы будем делать разные вещи.

00:00:19.260 --> 00:00:21.260
Я верю, что скоро наши здания и машины

00:00:21.260 --> 00:00:23.260
будут самособирающимися,

00:00:23.260 --> 00:00:25.260
будут воспроизводить и чинить сами себя.

00:00:25.260 --> 00:00:27.260
Итак, я собираюсь вам показать

00:00:27.260 --> 00:00:29.260
что я считаю текущей стадией промышленного развития,

00:00:29.260 --> 00:00:32.260
а затем сравнить это с некоторыми природными системами.

00:00:32.260 --> 00:00:35.260
Итак, на текущей стадии промышленного развития у нас есть небоскребы -

00:00:35.260 --> 00:00:37.260
2,5 года,

00:00:37.260 --> 00:00:39.260
от 500 000 до миллиона частей,

00:00:39.260 --> 00:00:41.260
достаточно сложные,

00:00:41.260 --> 00:00:44.260
новые потрясающие технологии в стали, бетоне и стекле.

00:00:44.260 --> 00:00:46.260
У нас есть восхитительные машины

00:00:46.260 --> 00:00:48.260
которые могут доставить нас в космос -

00:00:48.260 --> 00:00:51.260
5 лет, 2,5 миллиона частей.

00:00:51.260 --> 00:00:54.260
Но с другой стороны, если посмотреть на природные системы,

00:00:54.260 --> 00:00:56.260
мы видим белки

00:00:56.260 --> 00:00:58.260
двух миллионов видов,

00:00:58.260 --> 00:01:00.260
которые могут собираться за 10 000 наносекунд,

00:01:00.260 --> 00:01:02.260
или цепочку ДНК с тремя миллиардами основных пар,

00:01:02.260 --> 00:01:05.260
которую мы можем скопировать где-то за час.

00:01:05.260 --> 00:01:07.260
Итак, природные системы

00:01:07.260 --> 00:01:09.260
при всей их сложности

00:01:09.260 --> 00:01:11.260
чрезвычайно эффективны,

00:01:11.260 --> 00:01:13.260
куда более эффективны, чем все, что мы можем построить,

00:01:13.260 --> 00:01:15.260
куда более сложные, чем все, что мы можем построить.

00:01:15.260 --> 00:01:17.260
Они гораздо более эффективны с точки зрения энергии.

00:01:17.260 --> 00:01:20.260
Они почти никогда не ошибаются.

00:01:20.260 --> 00:01:22.260
И они могут восстанавливать себя в течение долгой жизни.

00:01:22.260 --> 00:01:25.260
Итак, в природных системах есть кое-что очень интересное.

00:01:25.260 --> 00:01:27.260
И если мы сможем перенести это

00:01:27.260 --> 00:01:29.260
в нашу рукотворную среду,

00:01:29.260 --> 00:01:31.260
у нашего способа создавать вещи появится потрясающий потенциал.

00:01:31.260 --> 00:01:34.260
И я думаю, что ключ - это самосборка.

00:01:34.260 --> 00:01:37.260
Итак, если мы хотим использовать самосборку в нашей физической среде,

00:01:37.260 --> 00:01:39.260
я думаю, нужно учесть четыре ключевых фактора.

00:01:39.260 --> 00:01:41.260
Первый: нужно расшифровать

00:01:41.260 --> 00:01:43.260
всю сложность того, что мы хотим построить -

00:01:43.260 --> 00:01:45.260
наших зданий и машин.

00:01:45.260 --> 00:01:47.260
И нужно разложить их в простую последовательность -

00:01:47.260 --> 00:01:49.260
базовую ДНК процессов строительства.

00:01:49.260 --> 00:01:51.260
Затем нам потребуются програмируемые части,

00:01:51.260 --> 00:01:53.260
которые смогут понять эту последовательность

00:01:53.260 --> 00:01:56.260
и использовать ее, чтобы свернуться или пересобраться.

00:01:56.260 --> 00:01:59.260
Нам понадобится какое-то количество энергии, которое позволит все это активировать,

00:01:59.260 --> 00:02:02.260
сделает части способными собираться по программе.

00:02:02.260 --> 00:02:04.260
И нам нужна какая-то резервная система исправления ошибок,

00:02:04.260 --> 00:02:07.260
чтобы гарантировать успешную постройку того, что мы хотим.

00:02:07.260 --> 00:02:09.260
Я собираюсь показать вам несколько проектов,

00:02:09.260 --> 00:02:11.260
над которыми мы с коллегами из ЭмАйТи работаем,

00:02:11.260 --> 00:02:13.260
чтобы достичь этого самособирающегося будущего.

00:02:13.260 --> 00:02:16.260
Первые два - МакроБот и ДециБот.

00:02:16.260 --> 00:02:20.260
Это проекты - крупномасштабные реконфигурируемые роботы -

00:02:20.260 --> 00:02:23.260
2,5 и 3,5 метровые белки.

00:02:23.260 --> 00:02:26.260
В них встроены механические электрические устройства, сенсоры.

00:02:26.260 --> 00:02:28.260
Ты расписываешь то, во что нужно свернуться,

00:02:28.260 --> 00:02:30.260
в последовательность углов -

00:02:30.260 --> 00:02:32.260
минус 120, минус 120, 0, 0,

00:02:32.260 --> 00:02:35.260
120, минус 120 - что-то вроде этого;

00:02:35.260 --> 00:02:37.260
последовательность углов или поворотов,

00:02:37.260 --> 00:02:40.260
и ты посылаешь эту последовательность по шнуру.

00:02:40.260 --> 00:02:43.260
Каждый блок получает свое сообщение - минус 120.

00:02:43.260 --> 00:02:45.260
Он поворачивается на этот угол, проверяет, все ли правильно

00:02:45.260 --> 00:02:48.260
и передает информацию соседу.

00:02:48.260 --> 00:02:50.260
А это блестящие ученые,

00:02:50.260 --> 00:02:52.260
инженеры, дизайнеры, которые работали над этим проектом.

00:02:52.260 --> 00:02:54.260
И я думаю, это на самом деле выявляет вопрос:

00:02:54.260 --> 00:02:56.260
возможны ли здесь другие масштабы?

00:02:56.260 --> 00:02:58.260
Я имею ввиду, тысячи долларов, множество человеко-часов

00:02:58.260 --> 00:03:01.260
для того, чтобы сделать этого 2,5 метрового робота.

00:03:01.260 --> 00:03:04.260
Сможем ли мы на самом деле увеличить масштаб? Сможем ли в действительности встроить робототехнику в каждую часть?

00:03:04.260 --> 00:03:06.260
Следующий проект решает этот вопрос,

00:03:06.260 --> 00:03:08.260
рассматривает пассивный характер

00:03:08.260 --> 00:03:11.260
или пытается получить модификационную програмируемость пассивно.

00:03:11.260 --> 00:03:13.260
Но он идет на шаг дальше

00:03:13.260 --> 00:03:15.260
и пытается получить настоящее вычисление.

00:03:15.260 --> 00:03:17.260
В основе своей он имеет самый фундаментальный строительный блок вычислений,

00:03:17.260 --> 00:03:19.260
логический элемент цифровой интегральной схемы

00:03:19.260 --> 00:03:21.260
напрямую в каждой части.

00:03:21.260 --> 00:03:23.260
Это элемент «И-НЕ».

00:03:23.260 --> 00:03:25.260
У вас есть один тетраэдр - элемент,

00:03:25.260 --> 00:03:27.260
который будет делать все вычисления,

00:03:27.260 --> 00:03:29.260
и два тетраэдра для ввода.

00:03:29.260 --> 00:03:32.260
Один для ввода информации пользователем, это так , как вы кладете кирпичи.

00:03:32.260 --> 00:03:35.260
Другой для информации от предыдущего уложенного кирпича.

00:03:35.260 --> 00:03:38.260
И затем он выводит информацию в трёхмерном пространстве.

00:03:38.260 --> 00:03:40.260
Итак, это значит,

00:03:40.260 --> 00:03:43.260
что пользователь может начать запуск перемещения кирпичей в нужном направлении.

00:03:43.260 --> 00:03:45.260
Его вычисления строятся на том, что было сделано ранее

00:03:45.260 --> 00:03:47.260
и на том, что вы ему сказали сделать.

00:03:47.260 --> 00:03:49.260
А теперь он начинает двигаться в трехмерном пространстве -

00:03:49.260 --> 00:03:51.260
вверх или вниз.

00:03:51.260 --> 00:03:54.260
С левой стороны, [1,1] ввод равняется 0 на выходе, перемещение вниз.

00:03:54.260 --> 00:03:56.260
С правой стороны,

00:03:56.260 --> 00:03:59.260
[0,0] ввод это 1 на выходе, что означает движение вверх.

00:03:59.260 --> 00:04:01.260
И что действительно важно,

00:04:01.260 --> 00:04:03.260
наши структуры теперь содержат чертежи

00:04:03.260 --> 00:04:05.260
того, что мы хотим построить.

00:04:05.260 --> 00:04:08.260
В них встроена вся информация о том, что было построено.

00:04:08.260 --> 00:04:11.260
Итак, это означает, что у нас есть некая форма самовоспроизводства.

00:04:11.260 --> 00:04:14.260
В данном случае я называю это самоуправляемым воспроизводством,

00:04:14.260 --> 00:04:16.260
потому что структуры содержат четкие чертежи.

00:04:16.260 --> 00:04:18.260
Если появляются ошибки, вы можете заменить часть.

00:04:18.260 --> 00:04:21.260
Вся местная информация сохраняется, чтобы вы знали, как ее исправить.

00:04:21.260 --> 00:04:23.260
Таким образом, у вас может быть что-то, что перемещается и считывает информацию

00:04:23.260 --> 00:04:25.260
и может передавать ее от одной части к другой.

00:04:25.260 --> 00:04:27.260
Оно встроено напрямую внутрь, без внешнего управления.

00:04:27.260 --> 00:04:30.260
Последний проект, который я вам покажу называется Смещенные Цепи,

00:04:30.260 --> 00:04:33.260
и это возможно самый захватывающий пример того, что у нас есть сейчас

00:04:33.260 --> 00:04:35.260
из пассивных самособирающихся систем.

00:04:35.260 --> 00:04:37.260
Он сочетает в себе возможность реконфигурации

00:04:37.260 --> 00:04:39.260
и програмирования

00:04:39.260 --> 00:04:42.260
и создает полностью пассивную систему.

00:04:43.260 --> 00:04:45.260
В основе мы имеем цепь элементов.

00:04:45.260 --> 00:04:47.260
Все элементы полностью идентичны,

00:04:47.260 --> 00:04:49.260
и смещены.

00:04:49.260 --> 00:04:52.260
Таким образом, каждая цепь или каждый элемент хочет повернуться направо или налево.

00:04:52.260 --> 00:04:55.260
И когда вы собираете цепь, вы по сути програмируете ее.

00:04:55.260 --> 00:04:58.260
Вы говорите каждому блоку куда он должен повернуться: направо или налево.

00:04:58.260 --> 00:05:01.260
Поэтому когда вы трясете цепь,

00:05:01.260 --> 00:05:03.260
он сворачивается

00:05:03.260 --> 00:05:06.260
в ту конфигурацию, которую вы запрограммировали -

00:05:06.260 --> 00:05:08.260
в этом случае в спираль,

00:05:08.260 --> 00:05:11.260
или в этом -

00:05:11.260 --> 00:05:14.260
два куба рядом друг с другом.

00:05:14.260 --> 00:05:16.260
Так в общем вы можете программировать

00:05:16.260 --> 00:05:18.260
любую трёхмерную форму -

00:05:18.260 --> 00:05:21.260
или одномерную, двухмерную - из этих абсолютно пассивных цепей.

00:05:21.260 --> 00:05:23.260
Итак, что это говорит нам о будущем?

00:05:23.260 --> 00:05:25.260
Я думаю, это говорит нам,

00:05:25.260 --> 00:05:28.260
что для самосборки, репликации, ремонта

00:05:28.260 --> 00:05:31.260
в наших физических структурах, зданиях, машинах, есть новые возможности.

00:05:31.260 --> 00:05:33.260
В этих частях возможна новая программность.

00:05:33.260 --> 00:05:35.260
И отсюда, у вас появляются новые возможности в вычислениях.

00:05:35.260 --> 00:05:37.260
У нас будут пространственные компьютеры.

00:05:37.260 --> 00:05:39.260
Представьте, что наши здания, мосты, машины,

00:05:39.260 --> 00:05:41.260
все наши кирпичи могли бы производить вычисления.

00:05:41.260 --> 00:05:43.260
Это удивительная параллель и распределенная сила вычиления,

00:05:43.260 --> 00:05:45.260
новые возможности дизайна.

00:05:45.260 --> 00:05:47.260
Это невероятный потенциал.

00:05:47.260 --> 00:05:49.260
Я думаю, что проекты, которые я вам показал,

00:05:49.260 --> 00:05:51.260
лишь небольшой шаг к будущему,

00:05:51.260 --> 00:05:53.260
если мы внедрим эти новые технологии,

00:05:53.260 --> 00:05:55.260
к новому самособирающемуся будущему.

00:05:55.260 --> 00:05:57.260
Спасибо.

00:05:57.260 --> 00:05:59.260
(Аплодисменты)

