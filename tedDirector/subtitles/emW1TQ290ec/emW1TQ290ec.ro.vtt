WEBVTT
Kind: captions
Language: ro

00:00:00.000 --> 00:00:07.000
Traducător: Antoniu Gugu
Corector: Ariana Bleau Lugo

00:00:15.260 --> 00:00:17.260
Astăzi aș vrea să vă prezint

00:00:17.260 --> 00:00:19.260
viitorul modului în care facem lucruri.

00:00:19.260 --> 00:00:21.260
Cred că în curând clădirile și mașinile noastre

00:00:21.260 --> 00:00:23.260
se vor asambla,

00:00:23.260 --> 00:00:25.260
replica și repara singure.

00:00:25.260 --> 00:00:27.260
Voi prezenta

00:00:27.260 --> 00:00:29.260
în ce constă starea actuală a manufacturării

00:00:29.260 --> 00:00:32.260
și apoi o voi compara cu câteva sisteme naturale.

00:00:32.260 --> 00:00:35.260
Conform modalității actuale de executare construim zgârie-nori

00:00:35.260 --> 00:00:37.260
în doi ani și jumătate

00:00:37.260 --> 00:00:39.260
din 500.000 până la un milion de componente,

00:00:39.260 --> 00:00:41.260
cu tehnologii noi destul de complexe

00:00:41.260 --> 00:00:44.260
folosind oțel, beton, sticlă.

00:00:44.260 --> 00:00:46.260
Facem mașinării fascinante

00:00:46.260 --> 00:00:48.260
care ne duc în cosmos --

00:00:48.260 --> 00:00:51.260
cinci ani, 2,5 milioane de componente.

00:00:51.260 --> 00:00:54.260
Dar, pe de altă parte, dacă te uiți la sistemele naturale,

00:00:54.260 --> 00:00:56.260
avem proteine

00:00:56.260 --> 00:00:58.260
de două milioane de tipuri,

00:00:58.260 --> 00:01:00.260
care se asamblează în 10.000 de nanosecunde,

00:01:00.260 --> 00:01:02.260
sau ADN-ul cu 3 miliarde de perechi de baze

00:01:02.260 --> 00:01:05.260
care se copiază în aproximativ o oră.

00:01:05.260 --> 00:01:07.260
Deci există toată această complexitate

00:01:07.260 --> 00:01:09.260
în sistemele naturale

00:01:09.260 --> 00:01:11.260
dar extrem de eficiente,

00:01:11.260 --> 00:01:13.260
cu mult mai eficiente decât orice construim noi,

00:01:13.260 --> 00:01:15.260
cu mult mai complexe decât orice construim noi.

00:01:15.260 --> 00:01:17.260
Sunt mult mai eficiente în folosirea energiei.

00:01:17.260 --> 00:01:20.260
Foarte rar dau greș

00:01:20.260 --> 00:01:22.260
și se pot repara singure pentru longevitate.

00:01:22.260 --> 00:01:25.260
Așa că există ceva foarte interesant în sistemele naturale.

00:01:25.260 --> 00:01:27.260
Și dacă putem transpune acel sistem

00:01:27.260 --> 00:01:29.260
în mediul conceput de noi,

00:01:29.260 --> 00:01:31.260
apare un potențial entuziasmant pentru felul în care construim.

00:01:31.260 --> 00:01:34.260
Cred că soluţia pentru asta e auto-asamblarea.

00:01:34.260 --> 00:01:37.260
Dacă vrem să folosim auto-asamblarea în mediul nostru fizic

00:01:37.260 --> 00:01:39.260
cred că există patru factori-cheie.

00:01:39.260 --> 00:01:41.260
În primul rând trebuie să decodăm

00:01:41.260 --> 00:01:43.260
întreaga complexitate a ceea ce vrem să construim --

00:01:43.260 --> 00:01:45.260
clădirile și mașinăriile.

00:01:45.260 --> 00:01:47.260
Trebuie să le descompunem în secvențe simple --

00:01:47.260 --> 00:01:49.260
practic, ADN-ul funcționalității construcțiilor noastre.

00:01:49.260 --> 00:01:51.260
Apoi ne trebuie bucăți programabile

00:01:51.260 --> 00:01:53.260
care pot interpreta și folosi acea secvență

00:01:53.260 --> 00:01:56.260
pentru a se asambla sau reconfigura.

00:01:56.260 --> 00:01:59.260
Avem nevoie de energie care să permită activarea procesului,

00:01:59.260 --> 00:02:02.260
să permită componentelor să se plieze conform programului.

00:02:02.260 --> 00:02:04.260
Și mai avem nevoie de un soi de redundanţă în corectarea erorilor

00:02:04.260 --> 00:02:07.260
pentru a garanta că am construit cu succes ceea ce doream.

00:02:07.260 --> 00:02:09.260
Vă voi arăta o serie de proiecte

00:02:09.260 --> 00:02:11.260
la care lucrez împreună cu colegii mei de la MIT

00:02:11.260 --> 00:02:13.260
pentru a realiza acest viitor auto-asamblant.

00:02:13.260 --> 00:02:16.260
Primele două sunt MacroBot și DeciBot.

00:02:16.260 --> 00:02:20.260
Aceste proiecte concep roboți reconfigurabili de scară mare --

00:02:20.260 --> 00:02:23.260
proteine lungi de 2 - 3 m.

00:02:23.260 --> 00:02:26.260
Ele sunt încorporate cu dispozitive electromecanice, senzori.

00:02:26.260 --> 00:02:28.260
Descifrezi ceea ce dorești să creezi

00:02:28.260 --> 00:02:30.260
într-o secvență de unghiuri --

00:02:30.260 --> 00:02:32.260
adică negativ 120, negativ 120, 0, 0,

00:02:32.260 --> 00:02:35.260
120, negativ 120 -- sau ceva asemănător;

00:02:35.260 --> 00:02:37.260
deci o secvență de unghiuri sau răsuciri

00:02:37.260 --> 00:02:40.260
și trimiți acea secvență prin șir.

00:02:40.260 --> 00:02:43.260
Fiecare unitate își primește mesajul -- adică 120 negativ.

00:02:43.260 --> 00:02:45.260
Se rotește, verifică dacă a ajuns unde trebuie

00:02:45.260 --> 00:02:48.260
și apoi transmite mesajul unității adiacente.

00:02:48.260 --> 00:02:50.260
Aceștia sunt cercetătorii eminenți,

00:02:50.260 --> 00:02:52.260
inginerii, designerii care au lucrat la acest proiect.

00:02:52.260 --> 00:02:54.260
Se ridică următoarea întrebare:

00:02:54.260 --> 00:02:56.260
Este acest lucru chiar realizabil?

00:02:56.260 --> 00:02:58.260
Vreau să spun, mii de dolari, o mulțime de ore de muncă

00:02:58.260 --> 00:03:01.260
investiți pentru a crea acest robot de 2,4 m.

00:03:01.260 --> 00:03:04.260
Putem oare extinde scara? Chiar putem implementa robotica în fiecare componentă?

00:03:04.260 --> 00:03:06.260
Următorul pas pune această întrebare

00:03:06.260 --> 00:03:08.260
și examinează natura pasivă,

00:03:08.260 --> 00:03:11.260
încearcă pasiv să obțină o programabilitate a reconfigurării.

00:03:11.260 --> 00:03:13.260
Merge însă un pas mai departe

00:03:13.260 --> 00:03:15.260
și încearcă să aibă computație.

00:03:15.260 --> 00:03:17.260
Încorporează elementul fundamental al computației,

00:03:17.260 --> 00:03:19.260
poarta digitală logică,

00:03:19.260 --> 00:03:21.260
direct în componente.

00:03:21.260 --> 00:03:23.260
Aceasta este o poartă NAND.

00:03:23.260 --> 00:03:25.260
Avem un tetraedru ce constituie poarta

00:03:25.260 --> 00:03:27.260
care va face computația

00:03:27.260 --> 00:03:29.260
și mai avem doi tetraedrii de intrare.

00:03:29.260 --> 00:03:32.260
Primul e un input de la utilizator în timp ce construiești modulele.

00:03:32.260 --> 00:03:35.260
Celălalt este de la modulul asamblat anterior.

00:03:35.260 --> 00:03:38.260
Astfel se obține un output în spațiu tridimensional.

00:03:38.260 --> 00:03:40.260
Asta presupune că

00:03:40.260 --> 00:03:43.260
utilizatorul poate introduce input pentru ceea ce dorește să execute modulul.

00:03:43.260 --> 00:03:45.260
Acesta analizează atât ceea ce făcea înainte

00:03:45.260 --> 00:03:47.260
cât și ce i-ați spus că doriți să facă.

00:03:47.260 --> 00:03:49.260
Iar acum începe să se miște în spațiu tridimensional --

00:03:49.260 --> 00:03:51.260
deci în jos sau în sus.

00:03:51.260 --> 00:03:54.260
Aşadar în stânga, input [1,1] generează output 0, care merge în jos.

00:03:54.260 --> 00:03:56.260
În partea dreaptă,

00:03:56.260 --> 00:03:59.260
input [0,0] iese ca output 1, care merge în sus.

00:03:59.260 --> 00:04:01.260
Asta probează că într-adevăr

00:04:01.260 --> 00:04:03.260
structura noastră conține planurile

00:04:03.260 --> 00:04:05.260
a ceea ce vrem să construim.

00:04:05.260 --> 00:04:08.260
Deci au integrată în ele toată informaţia a ceea ce s-a construit.

00:04:08.260 --> 00:04:11.260
Asta înseamnă că putem avea o formă de auto-replicare.

00:04:11.260 --> 00:04:14.260
În acest caz eu o numesc replicare auto-ghidată

00:04:14.260 --> 00:04:16.260
deoarece structura însăși conține planurile exacte.

00:04:16.260 --> 00:04:18.260
Dacă apar erori, poți înlocui o componentă.

00:04:18.260 --> 00:04:21.260
Toată informația locală e încorporată pentru a-ți spune cum s-o repari.

00:04:21.260 --> 00:04:23.260
Aşadar puteţi avea ceva care urcă pas cu pas şi o citeşte

00:04:23.260 --> 00:04:25.260
şi poate da un output specific pentru fiecare în parte.

00:04:25.260 --> 00:04:27.260
E încorporată local; nu există instrucţiuni exterioare.

00:04:27.260 --> 00:04:30.260
Ultimul proiect pe care vi-l voi arăta se numește Biased Chains

00:04:30.260 --> 00:04:33.260
și e probabil cel mai interesant exemplu de sistem pasiv auto-asamblant

00:04:33.260 --> 00:04:35.260
pe care-l avem în acest moment.

00:04:35.260 --> 00:04:37.260
Deci preia reconfigurabilitatea

00:04:37.260 --> 00:04:39.260
şi programabilitatea

00:04:39.260 --> 00:04:42.260
şi realizează un sistem complet pasiv.

00:04:43.260 --> 00:04:45.260
În principiu avem un lanț de elemente.

00:04:45.260 --> 00:04:47.260
Toate elementele sunt identice

00:04:47.260 --> 00:04:49.260
și direcționate.

00:04:49.260 --> 00:04:52.260
Astfel fiecare lanț sau fiecare element vrea să se întoarcă spre dreapta sau spre stânga.

00:04:52.260 --> 00:04:55.260
Deci în timp ce asamblezi lanțul, practic îl programezi.

00:04:55.260 --> 00:04:58.260
Îi spui fiecărei unități dacă ar trebui să se învârtă în dreapta sau în stânga.

00:04:58.260 --> 00:05:01.260
Așa că, atunci când scuturi lanțul,

00:05:01.260 --> 00:05:03.260
el se pliază

00:05:03.260 --> 00:05:06.260
în orice configuraţie în care l-ai programat --

00:05:06.260 --> 00:05:08.260
în acest caz, o spirală,

00:05:08.260 --> 00:05:11.260
sau în acest caz,

00:05:11.260 --> 00:05:14.260
două cuburi unul lângă altul.

00:05:14.260 --> 00:05:16.260
Aşadar puteţi programa

00:05:16.260 --> 00:05:18.260
orice formă tridimensională --

00:05:18.260 --> 00:05:21.260
sau unidimensională, bidimensională -- în acest lanţ într-un mod complet pasiv.

00:05:21.260 --> 00:05:23.260
Aşadar ce ne spune asta despre viitor?

00:05:23.260 --> 00:05:25.260
Cred că ne spune

00:05:25.260 --> 00:05:28.260
că există noi posibilităţi de auto-asamblare, replicare, reparare

00:05:28.260 --> 00:05:31.260
a structurilor fizice, clădirilor şi maşinilor noastre.

00:05:31.260 --> 00:05:33.260
Acestea pot fi programate într-un mod nou.

00:05:33.260 --> 00:05:35.260
Şi de aici apar noi posibilităţi privind computaţia.

00:05:35.260 --> 00:05:37.260
Vom avea computaţie spaţială.

00:05:37.260 --> 00:05:39.260
Imaginaţi-vă clădirile noastre, podurile, maşinile,

00:05:39.260 --> 00:05:41.260
toate cărămizile, dacă ar fi capabile de computaţie.

00:05:41.260 --> 00:05:43.260
Asta are o uimitoare putere de computaţie paralelă şi distribuită,

00:05:43.260 --> 00:05:45.260
noi posibilităţi de design.

00:05:45.260 --> 00:05:47.260
Există un potenţial impresionant în direcția asta.

00:05:47.260 --> 00:05:49.260
Cred că proiectele pe care vi le-am arătat

00:05:49.260 --> 00:05:51.260
sunt doar un pas minuscul către viitor,

00:05:51.260 --> 00:05:53.260
în cazul în care implementăm aceste noi tehnologii

00:05:53.260 --> 00:05:55.260
pentru o lume nouă, auto-asamblabilă.

00:05:55.260 --> 00:05:57.260
Vă mulțumesc.

00:05:57.260 --> 00:05:59.260
(Aplauze)

