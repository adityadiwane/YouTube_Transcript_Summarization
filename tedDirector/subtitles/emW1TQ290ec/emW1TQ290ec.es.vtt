WEBVTT
Kind: captions
Language: es

00:00:00.000 --> 00:00:07.000
Traductor: Jaime Gonzalez Magallanes
Revisor: Sebastian Betti

00:00:15.260 --> 00:00:17.260
Hoy quiero mostrarles

00:00:17.260 --> 00:00:19.260
el futuro de la manera de construir cosas.

00:00:19.260 --> 00:00:21.260
Creo que pronto, nuestros edificios y máquinas

00:00:21.260 --> 00:00:23.260
se auto-construirán,

00:00:23.260 --> 00:00:25.260
replicándose y reparándose a sí mismas.

00:00:25.260 --> 00:00:27.260
Así que voy a mostrarles

00:00:27.260 --> 00:00:29.260
el estado actual del proceso de manufactura,

00:00:29.260 --> 00:00:32.260
y después lo compararemos con algunos sistemas naturales.

00:00:32.260 --> 00:00:35.260
En la construcción actual, tenemos rascacielos

00:00:35.260 --> 00:00:37.260
dos años y medio,

00:00:37.260 --> 00:00:39.260
formados por 500.000 a un millón de partes,

00:00:39.260 --> 00:00:41.260
bastante complejos,

00:00:41.260 --> 00:00:44.260
tecnologías complejas e interesantes en acero, concreto, vidrio.

00:00:44.260 --> 00:00:46.260
Tenemos máquinas maravillosas

00:00:46.260 --> 00:00:48.260
que pueden llevarnos al espacio,

00:00:48.260 --> 00:00:51.260
cinco años y 2,5 millones de piezas.

00:00:51.260 --> 00:00:54.260
Por otro lado, si vemos los sistemas naturales,

00:00:54.260 --> 00:00:56.260
tenemos proteínas

00:00:56.260 --> 00:00:58.260
que tienen dos millones de clases,

00:00:58.260 --> 00:01:00.260
y pueden armarse en 10.000 nanosegundos

00:01:00.260 --> 00:01:02.260
o el ADN con 3.000 millones de pares de bases

00:01:02.260 --> 00:01:05.260
que puede replicarse en cerca de una hora.

00:01:05.260 --> 00:01:07.260
Aquí está toda esta complejidad

00:01:07.260 --> 00:01:09.260
de nuestros sistemas naturales,

00:01:09.260 --> 00:01:11.260
pero que son extremadamente eficientes,

00:01:11.260 --> 00:01:13.260
mucho más que otra cosa que podamos construir,

00:01:13.260 --> 00:01:15.260
mucho más complejos que otros que hayamos hecho.

00:01:15.260 --> 00:01:17.260
Son más eficientes en términos de energía.

00:01:17.260 --> 00:01:20.260
Rara vez cometen errores.

00:01:20.260 --> 00:01:22.260
Y pueden repararse a sí mismos para alargar su vida.

00:01:22.260 --> 00:01:25.260
Aquí hay algo muy interesante en los sistemas naturales.

00:01:25.260 --> 00:01:27.260
Y si pudiéramos traducirlo

00:01:27.260 --> 00:01:29.260
a nuestro ambiente de construcción,

00:01:29.260 --> 00:01:31.260
encontraríamos un potencial increíble en la manera de fabricar cosas.

00:01:31.260 --> 00:01:34.260
Y creo que la clave de todo esto es la auto-construcción.

00:01:34.260 --> 00:01:37.260
Si queremos utilizar la auto-construcción en nuestro ambiente físico,

00:01:37.260 --> 00:01:39.260
creo que hay cuatro factores clave.

00:01:39.260 --> 00:01:41.260
El primero es que necesitamos descifrar

00:01:41.260 --> 00:01:43.260
toda la complejidad de lo que queremos construir,

00:01:43.260 --> 00:01:45.260
de nuestras máquinas y edificios.

00:01:45.260 --> 00:01:47.260
Y necesitamos decodificarlo en secuencias sencillas,

00:01:47.260 --> 00:01:49.260
que sean el ADN del funcionamiento de nuestros edificios.

00:01:49.260 --> 00:01:51.260
Después necesitamos partes programables

00:01:51.260 --> 00:01:53.260
que puedan tomar esa secuencia

00:01:53.260 --> 00:01:56.260
y usarlas para armar, o reconfigurar.

00:01:56.260 --> 00:01:59.260
Necesitamos algo de energía que nos permita activar el proceso,

00:01:59.260 --> 00:02:02.260
y permita que nuestras partes se armen a partir del programa.

00:02:02.260 --> 00:02:04.260
También necesitamos algún tipo de corrector de errores redundante

00:02:04.260 --> 00:02:07.260
que garantice que tenemos éxito en construir lo que queremos.

00:02:07.260 --> 00:02:09.260
Así que voy a mostrarles algunos proyectos

00:02:09.260 --> 00:02:11.260
en los que estamos trabajando con mis compañeros del MIT

00:02:11.260 --> 00:02:13.260
para llegar a este futuro auto-construible.

00:02:13.260 --> 00:02:16.260
Los primeros dos son el MacroBot y el DeciBot.

00:02:16.260 --> 00:02:20.260
Estos proyectos son robots reconfigurables de gran escala,

00:02:20.260 --> 00:02:23.260
2,5 metros, 3,7 metros, grandes proteínas.

00:02:23.260 --> 00:02:26.260
Están llenos de dispositivos mecánicos, eléctricos, sensores.

00:02:26.260 --> 00:02:28.260
Uno decodifica lo que quiere armar,

00:02:28.260 --> 00:02:30.260
en una secuencia de perspectivas,

00:02:30.260 --> 00:02:32.260
aquí negativo 120, negativo 120, 0, 0,

00:02:32.260 --> 00:02:35.260
120, negativo 120, algo así;

00:02:35.260 --> 00:02:37.260
hay una secuencia de perspectivas, o vistas,

00:02:37.260 --> 00:02:40.260
y se manda esa secuencia por el cable.

00:02:40.260 --> 00:02:43.260
Cada unidad toma su mensaje, el 120 negativo.

00:02:43.260 --> 00:02:45.260
Rota para alinearse, verifica si llegó allí

00:02:45.260 --> 00:02:48.260
y después le pasa información a su vecino.

00:02:48.260 --> 00:02:50.260
Aquí están los brillantes científicos,

00:02:50.260 --> 00:02:52.260
ingenieros y diseñadores que trabajaron en este proyecto.

00:02:52.260 --> 00:02:54.260
Y creo que lo que realmente trae a la luz es:

00:02:54.260 --> 00:02:56.260
¿Podríamos escalar esto?

00:02:56.260 --> 00:02:58.260
Quiero decir, miles de dólares, cientos de horas hombre

00:02:58.260 --> 00:03:01.260
invertidos para hacer este robot de 2,5 metros.

00:03:01.260 --> 00:03:04.260
¿Podríamos escalar este proceso? ¿Podríamos integrar robots en cada pieza?

00:03:04.260 --> 00:03:06.260
El siguiente ejemplo trata de responder eso

00:03:06.260 --> 00:03:08.260
y examina su naturaleza pasiva,

00:03:08.260 --> 00:03:11.260
o trata pasivamente de obtener programación reconfigurable.

00:03:11.260 --> 00:03:13.260
Pero va un paso más allá,

00:03:13.260 --> 00:03:15.260
y trata de calcular en tiempo real.

00:03:15.260 --> 00:03:17.260
Básicamente integra los bloques básicos del cómputo,

00:03:17.260 --> 00:03:19.260
las compuertas lógicas,

00:03:19.260 --> 00:03:21.260
directamente en sus piezas.

00:03:21.260 --> 00:03:23.260
Esta es una compuerta NAND.

00:03:23.260 --> 00:03:25.260
Tenemos un tetraedro, que es la compuerta,

00:03:25.260 --> 00:03:27.260
que hará el procesamiento,

00:03:27.260 --> 00:03:29.260
y tenemos dos tetraedros que dan la entrada.

00:03:29.260 --> 00:03:32.260
Uno de ellos tiene la entrada del usuario, conforme armamos los bloques.

00:03:32.260 --> 00:03:35.260
La otra entrada viene del bloque colocado anteriormente.

00:03:35.260 --> 00:03:38.260
Y nos da un resultado en un espacio tridimensional.

00:03:38.260 --> 00:03:40.260
Esto significa

00:03:40.260 --> 00:03:43.260
que el usuario puede ir conectando lo que quiere que los bloques hagan.

00:03:43.260 --> 00:03:45.260
Procesa lo que estaba haciendo antes

00:03:45.260 --> 00:03:47.260
y lo que dijimos que queremos que haga.

00:03:47.260 --> 00:03:49.260
Y ahora empieza a moverse en un espacio tridimensional;

00:03:49.260 --> 00:03:51.260
hacia arriba y hacia abajo.

00:03:51.260 --> 00:03:54.260
En la parte izquierda tenemos una entrada [1,1] y la salida es un 0, va para abajo.

00:03:54.260 --> 00:03:56.260
En el lado derecho,

00:03:56.260 --> 00:03:59.260
la entrada es [0,0] y la salida es 1, va para arriba.

00:03:59.260 --> 00:04:01.260
Esto significa

00:04:01.260 --> 00:04:03.260
que nuestras estructuras ahora contienen los planos

00:04:03.260 --> 00:04:05.260
de lo que queremos construir.

00:04:05.260 --> 00:04:08.260
Tienen integrada en sí mismas la información de lo que se construyó.

00:04:08.260 --> 00:04:11.260
Eso significa que podemos tener cierta forma de auto-replicación.

00:04:11.260 --> 00:04:14.260
En este caso, le llamo replicación auto-dirigida,

00:04:14.260 --> 00:04:16.260
porque la estructura contiene las instrucciones exactas.

00:04:16.260 --> 00:04:18.260
Si acaso hay errores, se puede reemplazar una pieza.

00:04:18.260 --> 00:04:21.260
Toda la información local está integrada para mostrar cómo hacer arreglos.

00:04:21.260 --> 00:04:23.260
Así que podríamos tener algo que se trepe hasta el lugar y lo lea

00:04:23.260 --> 00:04:25.260
y pueda darnos una salida de uno a uno.

00:04:25.260 --> 00:04:27.260
Está directamente integrada; así que no hay instrucciones externas.

00:04:27.260 --> 00:04:30.260
Este es el último proyecto y le llamaré: Cadenas Torcidas,

00:04:30.260 --> 00:04:33.260
y es probablemente el ejemplo más innovador que tenemos ahora

00:04:33.260 --> 00:04:35.260
de sistemas pasivos de auto-construcción.

00:04:35.260 --> 00:04:37.260
A partir de la capacidad de reconfiguración

00:04:37.260 --> 00:04:39.260
y programación

00:04:39.260 --> 00:04:42.260
los funde en un sistema completamente pasivo.

00:04:43.260 --> 00:04:45.260
Básicamente tenemos una cadena de eslabones.

00:04:45.260 --> 00:04:47.260
Cada eslabón es completamente idéntico,

00:04:47.260 --> 00:04:49.260
y están torcidos.

00:04:49.260 --> 00:04:52.260
Cada eslabón de la cadena "quiere" girar a la derecha o a la izquierda.

00:04:52.260 --> 00:04:55.260
Así que al ensamblar la cadena, básicamente la estamos programando.

00:04:55.260 --> 00:04:58.260
Le decimos a cada unidad si queremos que gire a la derecha o a la izquierda.

00:04:58.260 --> 00:05:01.260
Y cuando sacudimos la cadena,

00:05:01.260 --> 00:05:03.260
se dobla

00:05:03.260 --> 00:05:06.260
en cualquier configuración que le hayamos programado,

00:05:06.260 --> 00:05:08.260
en este caso, en una espiral,

00:05:08.260 --> 00:05:11.260
o en este caso,

00:05:11.260 --> 00:05:14.260
en dos cubos, uno junto al otro.

00:05:14.260 --> 00:05:16.260
Así que básicamente podemos programar

00:05:16.260 --> 00:05:18.260
cualquier forma tridimensional,

00:05:18.260 --> 00:05:21.260
o unidimensional, bidimensional, en esta cadena de manera completamente pasiva.

00:05:21.260 --> 00:05:23.260
¿Qué nos dice esto del futuro?

00:05:23.260 --> 00:05:25.260
Creo que esto nos muestra

00:05:25.260 --> 00:05:28.260
que hay nuevas posibilidades para la auto-construcción, la replicación y reparación

00:05:28.260 --> 00:05:31.260
de nuestras estructuras físicas, nuestros edificios y máquinas.

00:05:31.260 --> 00:05:33.260
Hay nuevas capacidades de programación en estas piezas.

00:05:33.260 --> 00:05:35.260
Y, a partir de allí, nuevas posibilidades para el cómputo.

00:05:35.260 --> 00:05:37.260
Tendremos computación espacial.

00:05:37.260 --> 00:05:39.260
Imaginemos que nuestros edificios, nuestros puentes, nuestras máquinas,

00:05:39.260 --> 00:05:41.260
todas nuestras piezas pueden hacer cálculos.

00:05:41.260 --> 00:05:43.260
Es increíble ese poder de cómputo paralelo y distribuido,

00:05:43.260 --> 00:05:45.260
y las nuevas posibilidades de diseño.

00:05:45.260 --> 00:05:47.260
Es fantástico el potencial de estos conceptos.

00:05:47.260 --> 00:05:49.260
Yo creo que estos proyectos que les acabo de mostrar

00:05:49.260 --> 00:05:51.260
son sólo un pequeño paso hacia el futuro,

00:05:51.260 --> 00:05:53.260
si implementamos estas nuevas tecnologías

00:05:53.260 --> 00:05:55.260
para un mundo auto-construible.

00:05:55.260 --> 00:05:57.260
Gracias.

00:05:57.260 --> 00:05:59.260
(Aplausos)

